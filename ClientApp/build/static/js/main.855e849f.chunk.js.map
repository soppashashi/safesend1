{"version":3,"sources":["components/Backend/BackendTypes.tsx","lib/Utils.ts","LogConfiguration.ts","components/Attachment/AttachmentConfirmable.tsx","components/Attachment/AttachmentDlp.tsx","components/Dlp/ClientKeywordDomainResultsList.tsx","components/Dlp/ContentScanningResultsList.tsx","components/Persona/PersonaConfirmable.tsx","components/GroupRecipient/GroupRecipients.tsx","lib/Logger.ts","components/Confirmable/ConfirmableList.tsx","RestClient.ts","components/Login/LoginTypes.ts","components/LostConnectionPage.tsx","components/OfficeDialog.tsx","components/App/AppUtils.ts","components/ForbiddenRecipientDialog.tsx","components/OutlookSpinner.tsx","lib/NotificationMessage.ts","lib/AddIn.ts","components/App/App.tsx","components/WarningMessage.tsx","components/LandingPage.tsx","components/Login/LoginPage.tsx","index.tsx"],"names":["TriggerEncryptionMode","TriggerEncryptionDefaultOption","LicenseKeyStatus","UnprotectedAttachmentsMode","RecipientSendType","SignalRUIHubMethods","SignalRAddInHubMethods","DlpResultSourceTypeEnum","ActionOnMatch","DlpItemStatus","MailItemTypeEnum","cleanseAssertionOperators","parsedName","replace","nameof","nameFunction","options","fnStr","toString","startsWith","substring","length","indexOf","includes","es5Match","match","lastProp","Error","WebBrowser","StorageDatatype","SignalRHubType","stringFormat","str","args","_match","index","InjectLinkToString","separator","source","link","parts","split","startLink","concat","replaceColorTagToStyle","regexp","RegExp","colors","exec","push","forEach","color","Modules","storageUtils","sesssionStorageDatatype","window","sessionStorage","getItem","sessionStorageDatatype","value","setItem","removeItem","clear","storageDatatype","localStorage","classNames","mergeStyleSets","fileIconImg","align","width","height","padding","AttachmentConfirmable","props","state","stateUpdate","checked","handleChange","bind","e","target","this","setState","onChange","id","Stack","reversed","alignRightToLeft","horizontal","disableShrink","showCheckBox","Item","Checkbox","disabled","filename","Icon","className","getFileTypeIconProps","extension","pop","imageFileType","Text","variant","nowrap","nextProps","prevState","React","AttachmentDlp","files","useTooltip","TooltipHost","tooltipProps","onRenderContent","map","key","_checked","pointCursorText","horizontalAlign","textFieldStyles","root","position","paddingLeft","detailsHeaderStyles","paddingTop","_onRenderDetailsHeader","DetailsHeader","styles","confirmationStackTokens","childrenGap","stackTableStyles","border","stackTextFieldStyles","clientKeywordDomainResultsList","columns","name","columnName1","fieldName","c","sourceTypeString","minWidth","maxWidth","isRowHeader","isResizable","data","isPadded","cellTitle","flexDirection","onRender","item","style","textAlign","columnName2","attachmentPath","alignItems","groupBy","sourceType","Attachment","Filename","Body","tooLong","tooLongText","columnName3","clientKeyword","columnName4","matchCount","columnName5","allowedDomain","hasAttachments","results","some","r","splice","DetailsList","items","reverse","compact","checkboxVisibility","CheckboxVisibility","hidden","disableSelectionZone","selectionMode","SelectionMode","none","onRenderDetailsHeader","showTextField","tokens","Label","confirmText","TextField","required","autoComplete","denySend","onChangeAction","contentScanningResultsList","ruleName","firstMatch","labelTextField","onChangeTextField","showCheckbox","boxSide","label","labelCheckbox","checkboxChecked","onChangeCheckbox","stackTokens","PersonaConfirmable","verticalAlign","colorDomains","text","stackTokensPersonaLeft","stackTokensPersonaRigth","GroupRecipients","toggle","expanded","handleToggle","handleChangePersonaConfirmable","_e","single","wrap","IconButton","onClick","iconProps","iconName","title","ariaLabel","recipients","x","displayName","LogLevel","logging","minLevels","consoleLoggerRegistered","Object","assign","module","minLevel","Logger","listener","on","onLogEntry","logEntry","msg","Date","toLocaleString","level","message","location","TRACE","console","trace","DEBUG","debug","INFO","info","WARN","warn","ERROR","error","log","EventEmitter","logManager","levels","levelToInt","toLowerCase","logLevel","stack","cla","idx","slice","emit","safeSendLogging","minLevelsTemp","configJson","mod","configure","getMinLevels","registerConsoleLogger","getLogger","logger","SafeSend_ConfirmableList","stackTokensRecipientsCheck","stackTokensFilesCheck","iconClass","mergeStyles","fontSize","maxHeight","domainColors","colorByDomain","cursor","warning","completed","ConfirmableList","toConfirmableList","ccConfirmableList","bccConfirmableList","attachmentConfirmableList","allChecked","updatedDlpstatus","handleChangeSelectAll","handleChangeConfirmable","notFound","every","apiResponse","onSendProcessContex","settings","_disableSelectAll","unsafeRecipientsCount","unsafeAttachmentsCount","_disableSelectAllForLessThanXCheckboxes","_stringMainSelectAll","_stringMainEmailTO","childrens","confirmationFlags","_expandListsByDefault","_stringMainEmailCC","_stringMainEmailBCC","_showAttachmentsSeparator","Separator","_stringMainFilesAttachedHeader","dlp","status","Unsupported","content","statusString","FontIcon","Scanning","scanTimedOut","Spinner","type","SpinnerType","normal","PasswordProtected","ProtectedDocument","SensitiveDataFound","Success","dlps","keys","precheckRecipients","_precheckRecipients","singleColorIndex","confirmableListTo","unsafeRecipients","to","recipient","domain","confirmableListCc","cc","confirmableListBcc","bcc","colorIndex","confirmableListToGroup","toGroup","confirmableListCcGroup","ccGroup","confirmableListBccGroup","bccGroup","confirmableAttachments","unsafeAttachments","scanStarted","contentType","ScanNotStarted","_stringAttachmentStatusUnsupported","_stringAttachmentStatusScanning","_stringAttachmentStatusScanNotStarted","SafeSend_App","axiosRetry","axios","retries","retryOptions","retryDelay","retryCount","retryCondition","a","response","retryErrorCode","LoginResultStatus","restClient","login","outlookToken","headers","post","getApiResponse","getApiResponseError","getPlatformInfo","platformType","get","processMail","authToken","emailInfo","getHeaders","cancelDlp","delete","postProcess","SendConfirmed","patch","sendAttachmentPassword","password","sendAttachmentContent","outlookAttachment","getAppInfo","getAppSettings","authorization","statusCode","errorMessage","errorContent","isSuccessStatusCode","UnauthorizedError","ConnectionError","box","display","justifyContent","LostConnectionPage","block","osName","osVersion","browserName","fullBrowserVersion","engineName","engineVersion","SafeSend_OfficeDialog","stringMainPolicySpaces","messageBarStylesRigth","innerText","iconNotificationClass","wrapper","pane","sticky","textContent","progressIndicator","notificationArea","notificationAreaStackTokens","scrollablePaneStyles","panelStyles","minHeight","margin","header","OfficeDialog","context","mailboxItem","sendEvent","isConnectionLost","enabledSend","defaultValuesSettingUp","showAttachmentPasswordPrompt","hasShownPassowrdPrompt","enabledSubmitPassword","confirmableAllSelected","bccWarningIfMoreThanX","showConfirmContentScanningText","confirmContentScanningText","showConfirmContentScanningCheck","confirmContentScanningCheck","showConfirmClientKeywordsText","confirmClientKeywordsText","encryptNoSelected","encryptYesSelected","showEncryptPrompt","attachmentPassword","confirmUnprotectedAttachmentsCheck","closeDialog","attachmentPasswordRequest","attachmentSendPassword","setSendEnabled","isBccWarningVisible","isEncryptVisible","setEncryptVisibility","isProcessMaxNrRecipients","validateEncryptionSelection","setDialogTimeout","onRef","addEventListener","dialogId","localGet","DialogId","undefined","dialogOptions","Office","ui","messageParent","JSON","stringify","apiResponseView","showBccWarning","encrypt","option","isDefault","countUnprotectedAttachments","_unprotectedAttachmentsMode","Notify","Deny","Confirm","isDlpWaiting","attachmentPasswordRequested","result","tooManyRecipientsCount","timeoutSeconds","setTimeout","dialogValues","send","SafeSendToken","contentScanningAction","ConfirmText","clientKeywordDomainResults","_clientKeywordDisableConfirm","enabled","Inform","Ignore","entries","_triggerEncryptionMode","AskWhenFoundSensitiveContent","contentScanningResults","Panel","isOpen","PanelType","smallFluid","onRenderFooterContent","Image","src","logoBytes","alt","PrimaryButton","_stringMainSendButton","vertical","DefaultButton","_stringMainCancelButton","hasCloseButton","headerText","mainTitle","isFooterAtBottom","_stringMainBCCWarning","_showFromAddress","fromAddress","displaySubject","subjectText","ChoiceGroup","defaultSelectedKey","_triggerEncryptionDefaultOption","flexContainer","_stringMainTriggerEncryptionQuestion","_stringMainTriggerEncryptionOptionYes","field","marginRight","_stringMainTriggerEncryptionOptionNo","isUnprotectedAttachmentsNotificationVisible","unprotectedAttachmentMessage","isUnprotectedAttachmentsComfirmationVisible","paddingBottom","confirmationRequired","Safari","WebKit","ScrollablePane","scrollContainerFocus","scrollContainerAriaLabel","Sticky","stickyPosition","StickyPositionType","Both","role","aria-level","isGroupByDomain","MessageBar","messageBarType","MessageBarType","isMultiline","dangerouslySetInnerHTML","__html","_stringMainMessageManyRecipients","_stringMainMessageMultipleDomainRecipients","_stringMainMessageSingleDomainRecipient","_stringMainMessageMultipleRecipients","_stringMainMessageSingleRecipient","severeWarning","_disableConfirmAttachments","_stringMainFilesAttached","_stringMainFilesAttachedConfirmed","_stringMainFileAttachedConfirmed","allSelected","_stringContentScanningWrongClientWarning","_stringContentScanningTimedOutShort","_stringContentScanningSendingNotAllowed","groupByAttachments","groupByClientKeywordAttachments","groupByClientKeywordAttachmentsText","ClientKeywordDomainResultsList","_stringContentScanningConfirmContentText","_stringContentScanningSource","_stringContentScanningEmailAttachment","_stringContentScanningClientData","_stringContentScanningTotalMatches","_stringContentScanningAllowedDomains","mailItem","attachmentCount","_stringContentScanningPointCursorHere","_stringContentScanningTooLongToDisplay","_stringContentScanningSensitiveContentFound","groupByContentScanningAttachments","groupByContentScanningAttachmentsText","ContentScanningResultsList","_stringContentScanningRule","_stringContentScanningFirstMatch","_stringContentScanningConfirmContent","isPasswordPromptVisible","_stringPasswordRequired","autoFocus","onKeyDown","event","preventDefault","stopPropagation","_stringPasswordSubmit","ProgressIndicator","_stringContentScanningScanningContent","_stringContentScanningComplete","_stringContentScanningTimedOutLong","showPolicyText","_stringMainPolicy","_policyLink","appUtils","isContentScanning","copyResults","group","filterFiles","filter","elem","self","join","sort","b","currentAction","newAction","currentContentScanningAction","groupClientKeywordAttachments","groupContentScanningAttachments","dlpItemResults","dlpItemResult","processedContentScanningResults","getProcessedContentScanningResults","contentScanResults","actionOnMatch","contentScanningResultView","processedClientKeywordDomainResults","getProcessedClientKeywordDomainResults","isAttachment","containsUnprotectedAttachment","_stringNotEncryptedAttachmentConfirm","_stringNotEncryptedAttachmentDeny","_stringNotEncryptedAttachmentNotify","_stringNotEncryptedAttachmentsConfirm","_stringNotEncryptedAttachmentsDeny","_stringNotEncryptedAttachmentsNotify","getGroupAttachment","copyAndSort","columnKey","isSortedDescending","clientKeywordDomainResult","_stringContentScanningEmailContent","_stringContentScanningEmailFileName","Subject","_stringContentScanningEmailSubject","contentScanningResult","getContentScanningAction","countTotalAttachmentsScanned","countTotalClientKeyword","ck","countTotalClientKeywordMatches","countTotalContentScanning","cs","countTotalContentScanningMatches","_contentScanningMaxNrMatchesBeforeTryingToGroupByAttachment","_stringContentScanningTooManyMatches","stackToken","ForbiddenRecipientDialog","i","forbiddenRecipients","isList","_stringMainListIdentifier","_stringForbiddenRecipientTitle","_stringForbiddenRecipient","_stringForbiddenRecipients","fr","mainSpinner","OutlookSpinner","size","SpinnerSize","large","notificationLogger","notificationMessages","replaceAsync","getJsonMessage","MailboxEnums","ItemNotificationMessageType","InformationalMessage","ErrorMessage","removeAsync","icon","persistent","globalMailboxItem","globalAppInfo","globalEmailData","globalSendEvent","globalApiResponseView","SafeSend_AddIn","globalAddInDialogInstance","globalLoginDialogInstance","globalRetryAttempt","globalIsCurrentWorkflowRestarting","globalPlatformConfig","attachmentSizeThreshold","isOffice365","retryOnServerConnectionReset","setSubjectAsync","newSubject","Promise","resolve","reject","subject","setAsync","asyncContext","asyncResult","AsyncResultStatus","Succeeded","setBodyAsync","newBody","coercionType","body","processOnSendEvent","Math","random","substr","localSet","platform","responsePlatform","processSendEmail","infoReplace","saveItemAndGetOutlookTokenAsync","success","getOutlookTokenAsync","localExists","OutlookAccessToken","outlookAccesToken","splits","expiration","parse","atob","exp","round","getTime","processEmail","showLoginDialog","workflowOnConnectionError","onConnectionError","getSignalRConnection","signalRHubType","connection","signalR","withUrl","accessTokenFactory","build","start","isAddInDialogOpen","tryCloseDialogs","sendingEmailBecauseOfError","retryConnection","remove","progressReplace","close","displayDialogAsync","origin","loginDialogCallback","Failed","code","errorReplace","addEventHandler","EventType","DialogMessageReceived","loginDialogEventHandler","DialogEventReceived","arg","isError","loginResults","accessToken","getAuthenticationToken","isClientSideGetAttachmentSupported","isSetSupported","getEmailInfo","itemId","isDlpLicenseValid","attachments","token","AddinHub","addInSignalRConnection","connectionAddInId","connectionId","configureAddInSignalR","responseMail","showAddInDialog","scanCompleted","localRemove","ApiResponse","getAddInDialogOptions","addInDialogCallback","forbiddenRecipientsLength","displayInIframe","promptBeforeOpen","addInDialogEventHandler","confirmInfo","getConfirmInfo","onSendPostProcessContextView","_footerEnabled","shouldCancelSendEvent","PlatformType","OfficeOnline","PC","hasHtmlBody","htmlBody","footerText","CoercionType","Html","textBody","subjectPrefix","clientLanguage","displayLanguage","sendConfirmed","shouldTriggerEncryption","hasForbiddenRecipients","sendCanceled","mailItemType","itemType","onclose","ReceiveGetAttachmentContent","attachment","getAttachmentContentAsync","bodyType","toEmails","ccEmails","bccEmails","toTemp","getRecipientsFromMailboxItem","TO","ccTemp","CC","bccTemp","BCC","getRecipientsAsync","getAttachmentsAsync","getBodyTypeAsync","all","getSubjectAsync","getBodyAsync","embeddedAttachments","getEmbeddedAttachments","responseLogin","unauthorizedError","licenseKeyStatus","Invalid","TrialExpired","LicenseExpired","allowEvent","set","requirements","recipientType","ItemType","Message","requiredAttendees","optionalAttendees","getAsync","recipientTemp","emailAddress","isAddressTypeSupported","isExchangeDistributionList","RecipientType","DistributionList","isOutlookDistributionList","members","sendable","sendType","getTypeAsync","bodyContent","bodyasElement","document","createElement","innerHTML","embImgs","getElementsByTagName","attachmentsTemp","attributes","getNamedItem","sizestr","parseInt","mailbox","convertToRestId","RestVersion","v2_0","jsId","attachmentType","contentBytes","isInline","AttachmentType","b64","paddingFound","btoa","saveAsync","emailSettings","getCallbackTokenAsync","isRest","allowSignInPrompt","allowConsentPrompt","forMSGraphAccess","OfficeRuntime","auth","getAccessToken","ssoOutlookToken","onReady","App","officeDialog","chunksManager","chunkSize","chunkProcessedCount","isOfficeInitialized","dialogInstance","configureSignalR","updateDialogUI","getGroupByAttachments","newAppState","getStateForUpdateUI","UIHub","ReceiveDlpItemResults","ReceiveFinishingContenScanning","_isCancellationRequested","ReceiveAttachmentPasswordRequest","host","localStorageData","dlpScanResults","estimatedDlpItemsCount","ref","localeCompare","WarningMessage","backgroundColor","alignContent","LandingPage","isWaiting","appInfo","responseAppInfo","product","version","description","copyright","LoginPage","loginresult","tokenType","LoggedIn","safeSendToken","appSettings","msalConfig","clientId","authority","redirectUri","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","userAgentApp","Msal","requestObj","scopes","handleRedirectCallback","authCallback","acquireTokenRedirect","loginRedirect","initializeIcons","initializeFileTypeIcons","onSendEvent","routing","exact","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.855e849f.chunk.js","sourcesContent":["//Other API models\nexport interface LoginModel {\n\ttoken: string;\n\tlicenseKeyStatus: LicenseKeyStatus;\n\tisDlpLicenseValid: boolean;\n}\n\nexport enum TriggerEncryptionMode {\n\tDisabled = 0,\n\tAskWhenFilesAreAttached = 1,\n\tAskWhenFoundSensitiveContent = 2,\n\tAlwaysAsk = 3\n}\n\nexport enum TriggerEncryptionDefaultOption {\n\tRequireUserInput = 0,\n\tEncrypt = 1,\n\tDoNotEncrypt = 2\n}\n\nexport enum LicenseKeyStatus {\n\tValid = \"Valid\",\n\tInvalid = \"Invalid\",\n\tTrialExpired = \"TrialExpired\",\n\tLicenseExpired = \"LicenseExpired\",\n}\n\nexport enum UnprotectedAttachmentsMode {\n\tIgnore = 0,\n\tNotify = 1,\n\tConfirm = 2,\n\tDeny = 3\n}\n\nexport interface EmailInfo {\n\titemId: string;\n\titemType: Office.MailboxEnums.ItemType | string | undefined;\n\tsubject: string | null;\n\tbodyType: Office.CoercionType | string;\n\tbody: string | null;\n\ttoEmails: EmailRecipient[];\n\tccEmails: EmailRecipient[];\n\tbccEmails: EmailRecipient[];\n\tattachments: OutlookAttachment[] | null;\n\tclientLanguage: string;\n\tplatformType: Office.PlatformType;\n\tconnectionAddInId: string | null;\n\tisClientSideGetAttachmentSupported: boolean;\n}\n\nexport interface EmailRecipient {\n\tid: number;\n\temailAddress: string;\n\tsendType: RecipientSendType;\n\tisAddressTypeSupported: boolean;\n\tsendable: boolean;\n\tname: string;\n\tisExchangeDistributionList: boolean;\n\tisOutlookDistributionList: boolean;\n\tmembers: EmailRecipient[];\n}\n\nexport interface OutlookAttachment {\n\tid: string;\n\tjsId: string;\n\tname: string;\n\tcontentType: string;\n\tsize: number;\n\tattachmentType: string;\n\tisInline: boolean;\n\tcontentBytes: string | null;\n}\n\nexport enum RecipientSendType {\n\tTO = 0,\n\tCC = 1,\n\tBCC = 2,\n\tSender = 3\n}\n\n//SignalR methods ==========================================================\nexport enum SignalRUIHubMethods {\n\tReceiveDlpItemResults = \"ReceiveDlpItemResults\",\n\tReceiveFinishingContenScanning = \"ReceiveFinishingContenScanning\",\n\tReceiveAttachmentPasswordRequest = \"ReceiveAttachmentPasswordRequest\",\n}\n\nexport enum SignalRAddInHubMethods {\n\tReceiveGetAttachmentContent = \"ReceiveGetAttachmentContent\"\n}\n\n//SignalR models ==========================================================\nexport interface DlpItemResultView {\n\tid: string;\n\tisAttachment: boolean;\n\tstatus: DlpItemStatus;\n\tstatusString: string;\n\tcontainsUnprotectedAttachment: boolean;\n\tcontentScanResults: ContentScanningResultView[];\n\tclientKeywordDomainResults: ClientKeywordDomainResultView[];\n}\n\nexport interface DlpResultView {\n\tkey: string;\n\tsourceType: DlpResultSourceTypeEnum;\n\tsourceTypeString: string;\n\tattachmentPath: string;\n\tmatchCount: number;\n\tclientKeyword: string;\n\tfirstMatch: string;\n\tfiles: string[];\n\tgroupBy: boolean;\n\tuseTooltip: boolean;\n\ttooLong: boolean;\n}\n\nexport interface ContentScanningResultView extends DlpResultView {\n\truleName: string;\n\tactionOnMatch: ActionOnMatch;\n}\n\nexport interface ClientKeywordDomainResultView extends DlpResultView {\n\tallowedDomain: string;\n}\n\nexport enum DlpResultSourceTypeEnum {\n\tFilename = \"Filename\",\n\tAttachment = \"Attachment\",\n\tBody = \"Body\",\n\tSubject = \"Subject\"\n}\n\nexport enum ActionOnMatch {\n\tConfirm = \"Confirm\",\n\tInform = \"Inform\",\n\tDeny = \"Deny\",\n\tConfirmText = \"ConfirmText\"\n}\n\nexport enum DlpItemStatus {\n\tUnsupported = \"Unsupported\",\n\tScanning = \"Scanning\",\n\tError = \"Error\",\n\tProtectedDocument = \"ProtectedDocument\",\n\tPasswordProtected = \"PasswordProtected\",\n\tSensitiveDataFound = \"SensitiveDataFound\",\n\tSuccess = \"Success\",\n\tUnknown = \"Unknown\",\n\tScanNotStarted = \"ScanNotStarted\",\n\tScanTimedOut = \"ScanTimedOut\"\n}\n\n//Backend API response ==========================================================\nexport interface AppInfo {\n\tproduct: string;\n\tversion: string;\n\tdescription: string;\n\tcopyright: string;\n}\n\nexport interface PlatformConfig {\n\tenabled: boolean;\n\tattachmentSizeThreshold: number;\n\tisOffice365: boolean;\n\tretryOnServerConnectionReset: number;\n}\n\nexport interface SettingsView {\n\temailProviderUrl: string;\n\t_unresolvedRecipientRetryCount: number;\n\t_unresolvedRecipientRetryInitialDelay: number;\n\t_useDomainColorCoding: boolean;\n\t_useLocalizedLanguage: boolean;\n\t_useLocalizedLanguageGPOOverrideLanguage: string;\n\t_useLocalizedLanguageForceLanguage: string;\n\t_localizationXlsxPath: string;\n\t_useSafeDomainsAsBlacklist: boolean;\n\t_useQuickLookupForOutlookContacts: boolean;\n\t_warnUserIfMoreThanXEmailsInThread: number;\n\t_DLPKeyStatusStringValid: string;\n\t_DLPKeyStatusStringInvalid: string;\n\t_logo: string;\n\t_logoFilePath: string;\n\tlogoBytes: string;\n\t_windowMinimumHeight: number;\n\t_windowMinimumWidth: number;\n\t_version: string;\n\t_triggerEncryptionXHeader: string;\n\t_triggerEncryptionSubjectString: string;\n\t_treatMatchingEmailsAsExternal: string;\n\t_treatMatchingExchangeDLNamesAsExternal: string;\n\t_treatMatchingEmailsAsUnsafe: string;\n\t_treatMatchingExchangeDLNamesAsUnsafe: string;\n\t_treatMatchingUnresolvedRecipientsAsInternal: string;\n\t_treatUnmatchedGALEntriesAsSafe: boolean;\n\t_contentScanningMaxNrMatchesBeforeTryingToGroupByAttachment: number;\n\t_contentScanningTimeoutMS: number;\n\t_debugLogging: boolean;\n\t_debugLoggingCopyADXLoaderLog: boolean;\n\t_detectBulkEmailing: boolean;\n\t_detectBulkEmailingDetectionPeriod: number;\n\t_disableConfirmAttachments: boolean;\n\t_disableConfirmationForTheseSendingEmailAddresses: string;\n\t_confirmReplyToRecipients: boolean;\n\t_disableInternalSave: boolean;\n\t_disableOpenAttachmentsLink: boolean;\n\t_disableSelectAll: boolean;\n\t_disableSelectAllForLessThanXCheckboxes: number;\n\t_dlpScanSequential: boolean;\n\t_expandListsByDefault: boolean;\n\t_enableRecipientAttachmentRemoval: boolean;\n\t_forceWindowTopMost: boolean;\n\t_footerEnabled: boolean;\n\t_footerText: string;\n\t_disableMarkMsgFilesAsAttachments: boolean;\n\t_groupByDomain: boolean;\n\t_confirmExternalRecipients: boolean;\n\t_classificationXHeaderValues: string;\n\t_debugSimulateUnresolvedExchangeRecipients: boolean;\n\t_debugShowLanguageSelector: boolean;\n\t_confirmAndSendOnCtrlEnter: boolean;\n\t_debugSimulateUncaughtException: boolean;\n\t_addXHeader: boolean;\n\t_BCCWarningIfMoreThanX_TOCC_Recipients: number;\n\t_checkAutoForwardedEmails: boolean;\n\t_checkRepliesToExternalMeetings: boolean;\n\t_clientKeywordDisableConfirm: boolean;\n\t_classificationXHeader: string;\n\t_debugSimulateClassificationXHeader: string;\n\t_hideRecipientDisplayName: boolean;\n\t_loggingFileLogMaxSizeMB: number;\n\t_resolveWithAddressBook: boolean;\n\t_showAttachmentsSeparator: boolean;\n\t_showFromAddress: boolean;\n\t_sortRecipientsAndFiles: boolean;\n\t_resolveDLEmail: boolean;\n\t_loggingFileLogEnabled: boolean;\n\t_readSettingsEveryXMinutes: number;\n\t_loggingWindowsEventLogEnabled: boolean;\n\t_loggingEventTypeFilter: number;\n\t_loggingSyslogHostname: string;\n\t_loggingSyslogPort: number;\n\t_loggingSyslogUseStrictRFC5424Format: boolean;\n\t_markEmbeddedImagesAsAttachments: boolean;\n\t_markEmbeddedImagesAsAttachmentsFileSizeLimitKB: number;\n\t_onlyPopupForAttachments: boolean;\n\t_onlyPopupForAttachmentsOrDLPMatch: boolean;\n\t_onlyPopupForNewEmailThreads: boolean;\n\t_onlyPopupForNewEmailThreadsDaysOfHistory: number;\n\t_onlyPopupForDLPMatch: boolean;\n\t_checkDistributionListMembers: boolean;\n\t_policyLink: string;\n\t_precheckRecipients: boolean;\n\t_processMaxNrRecipients: number;\n\t_onlyPopupForMultipleExternalDomains: boolean;\n\t_triggerEncryptionMode: number;\n\t_triggerEncryptionDefaultOption: number;\n\t_unprotectedAttachmentsMode: number;\n\n\t_stringAttachmentStatusError: string;\n\t_stringAttachmentStatusPasswordProtected: string;\n\t_stringAttachmentStatusProtectedDocument: string;\n\t_stringAttachmentStatusScanning: string;\n\t_stringAttachmentStatusScanNotStarted: string;\n\t_stringAttachmentStatusScanTimedOut: string;\n\t_stringAttachmentStatusSensitiveDataFound: string;\n\t_stringAttachmentStatusSuccess: string;\n\t_stringAttachmentStatusUnknown: string;\n\t_stringAttachmentStatusUnsupported: string;\n\t_stringBulkEmailQuestion: string;\n\t_stringContentScanningAllowedDomains: string;\n\t_stringContentScanningClientData: string;\n\t_stringContentScanningComplete: string;\n\t_stringContentScanningConfirmContent: string;\n\t_stringContentScanningConfirmContentText: string;\n\t_stringContentScanningEmailAttachment: string;\n\t_stringContentScanningEmailContent: string;\n\t_stringContentScanningEmailFileName: string;\n\t_stringContentScanningEmailSubject: string;\n\t_stringContentScanningFirstMatch: string;\n\t_stringContentScanningPointCursorHere: string;\n\t_stringContentScanningReleaseWindow: string;\n\t_stringContentScanningRule: string;\n\t_stringContentScanningScanningContent: string;\n\t_stringContentScanningSendingNotAllowed: string;\n\t_stringContentScanningSensitiveContentFound: string;\n\t_stringContentScanningSource: string;\n\t_stringContentScanningTimedOutLong: string;\n\t_stringContentScanningTimedOutShort: string;\n\t_stringContentScanningTooLongToDisplay: string;\n\t_stringContentScanningTooManyMatches: string;\n\t_stringContentScanningTotalMatches: string;\n\t_stringContentScanningWrongClientWarning: string;\n\t_stringContentScanningZipHeader: string;\n\t_stringErrorMessage: string;\n\t_stringErrorTitle: string;\n\t_stringForbiddenRecipient: string;\n\t_stringForbiddenRecipients: string;\n\t_stringForbiddenRecipientTitle: string;\n\t_stringMainAllRecipientsNumber: string;\n\t_stringMainBCCWarning: string;\n\t_stringMainCancelButton: string;\n\t_stringMainEmailBCC: string;\n\t_stringMainEmailCC: string;\n\t_stringMainEmailFrom: string;\n\t_stringMainEmailTO: string;\n\t_stringMainEmailReplyTo: string;\n\t_stringMainFileAttachedConfirmed: string;\n\t_stringMainFilesAttached: string;\n\t_stringMainFilesAttachedConfirmed: string;\n\t_stringMainFilesAttachedHeader: string;\n\t_stringMainFilesAttachedOpen: string;\n\t_stringMainFilesAttachedOpenFailed: string;\n\t_stringMainListIdentifier: string;\n\t_stringMainMessageManyRecipients: string;\n\t_stringMainMessageMultipleDomainRecipients: string;\n\t_stringMainMessageMultipleRecipients: string;\n\t_stringMainMessageSingleDomainRecipient: string;\n\t_stringMainMessageSingleRecipient: string;\n\t_stringMainPolicy: string;\n\t_stringMainSelectAll: string;\n\t_stringMainSelectedRecipients: string;\n\t_stringMainSendButton: string;\n\t_stringMainSubject: string;\n\t_stringMainTitleUnsafeClassified: string;\n\t_stringMainTriggerEncryptionOptionYes: string;\n\t_stringMainTriggerEncryptionQuestion: string;\n\t_stringMainTitleExternal: string;\n\t_stringMainTitleExternalClassified: string;\n\t_stringMainTitleUnsafe: string;\n\t_stringMainTriggerEncryptionOptionNo: string;\n\t_stringMainUnresolvableIdentifier: string;\n\t_stringNotEncryptedAttachmentConfirm: string;\n\t_stringNotEncryptedAttachmentDeny: string;\n\t_stringNotEncryptedAttachmentNotify: string;\n\t_stringNotEncryptedAttachmentsConfirm: string;\n\t_stringNotEncryptedAttachmentsDeny: string;\n\t_stringNotEncryptedAttachmentsNotify: string;\n\t_stringPasswordRequired: string;\n\t_stringPasswordSubmit: string;\n\t_stringReplyAllBlock: string;\n\t_stringReplyAllTitle: string;\n\t_stringReplyAllWarning: string;\n\t_stringReplyAllWarningDistributionList: string;\n\t_stringUnexpectedErrorCancel: string;\n\t_stringUnexpectedErrorMessage: string;\n\t_stringUnexpectedErrorSendAnyway: string;\n\t_stringWarnUserIfLongEmailThreadMessage: string;\n\t_stringWarnUserIfLongEmailThreadTitle: string;\n}\n\nexport interface ApiResponseView {\n\tunsafeRecipientsCount: number;\n\tunsafeAttachmentsCount: number;\n\tfromAddress: string;\n\tsubjectText: string;\n\talignRightToLeft: boolean;\n\tattachmentPasswordRequested: boolean;\n\tonSendProcessContex: OnSendProcessContextView;\n\tunsafeRecipients: UnsafeRecipientsView;\n\tunsafeAttachments: AttachmentView[];\n\tdlpScanResults: DlpItemResultView[];\n}\n\nexport interface OnSendPostProcessContextView {\n\tshouldCancelSendEvent: boolean;\n\tfooterText: string;\n\tsubjectPrefix: string;\n}\n\nexport interface OnSendProcessContextView {\n\tisLicensed: boolean;\n\tisDlpLicenseValid: boolean;\n\tconfirmationRequired: boolean;\n\tscanStarted: boolean;\n\tscanCompleted: boolean;\n\tscanTimedOut: boolean;\n\thasForbiddenRecipients: boolean;\n\tsendCanceled: boolean;\n\tmailItem: MailItemView;\n\tconfirmationFlags: ConfirmationFlagsView;\n\tsettings: SettingsView;\n\tforbiddenRecipients: UnsafeRecipientView[];\n}\n\nexport interface MailItemView {\n\titemId: string;\n\tattachmentCount: number;\n\tsubject: string;\n\thasHtmlBody: boolean;\n\thtmlBody: string;\n\tbody: string;\n\titemType: MailItemTypeEnum;\n}\n\nexport interface AttachmentView {\n\tid: string;\n\tfilename: string;\n\tsize: number;\n\tcontentType: string;\n}\n\nexport interface ConfirmationFlagsView {\n\tshowBccWarning: boolean;\n\tshowEncryptPrompt: boolean;\n\tshowFromAddress: boolean;\n\tshowSelectAll: boolean;\n\tshowRecipientAttachmentSeparator: boolean;\n\tshowAttachmentLinks: boolean;\n\tshowPolicyText: boolean;\n\tshowTrialSettings: boolean;\n\tcolorDomains: boolean;\n\tdisplaySubject: boolean;\n\tshowAttachments: boolean;\n\tshowLanguageSelector: boolean;\n\tmainTitle: string;\n}\n\nexport interface UnsafeRecipientsView {\n\tisGroupByDomain: boolean;\n\ttoGroup: UnsafeGroupRecipientsView[];\n\tccGroup: UnsafeGroupRecipientsView[];\n\tbccGroup: UnsafeGroupRecipientsView[];\n\tto: UnsafeRecipientView[];\n\tcc: UnsafeRecipientView[];\n\tbcc: UnsafeRecipientView[];\n}\n\nexport interface UnsafeGroupRecipientsView {\n\tid: string;\n\tdomain: string;\n\trecipients: UnsafeRecipientView[];\n}\n\nexport interface UnsafeRecipientView {\n\tid: string;\n\tdisplayName: string;\n\tname: string;\n\temail: string;\n\tdomain: string;\n\tisList: boolean;\n\ttooManyRecipientsCount: number;\n}\n\nexport interface ConfirmInfo {\n\titemId: string;\n\tsendConfirmed: boolean;\n\tshouldTriggerEncryption: boolean;\n\tshowEncryptPrompt: boolean;\n\tconfirmationRequired: boolean;\n\thasForbiddenRecipients: boolean;\n\tmailItemType: MailItemTypeEnum;\n\tsendCanceled: boolean;\n\tclientLanguage: string;\n\thasHtmlBody: boolean;\n}\n\nexport enum MailItemTypeEnum {\n\tUnknown = \"Unknown\",\n\tMail = \"Mail\",\n\tTaskRequest = \"TaskRequest\",\n\tMeeting = \"Meeting\"\n}","function cleanseAssertionOperators(parsedName: string): string {\n    return parsedName.replace(/[?!]/g, \"\");\n}\n\nexport interface NameofOptions {\n    /**\n     * Take only the last property of nested properties.\n    */\n    lastProp?: boolean;\n}\n\nexport function nameof<T extends Object>(nameFunction: ((obj: T) => any) | { new(...params: any[]): T }, options?: NameofOptions): string {\n    const fnStr = nameFunction.toString();\n\n    // ES6 class name:\n    // \"class ClassName { ...\"\n    if (\n        fnStr.startsWith(\"class \")\n        // Theoretically could, for some ill-advised reason, be \"class => class.prop\".\n        && !fnStr.startsWith(\"class =>\")\n    ) {\n        return cleanseAssertionOperators(\n            fnStr.substring(\n                \"class \".length,\n                fnStr.indexOf(\" {\")\n            )\n        );\n    }\n\n    // ES6 prop selector:\n    // \"x => x.prop\"\n    if (fnStr.includes(\"=>\")) {\n        return cleanseAssertionOperators(\n            fnStr.substring(\n                fnStr.indexOf(\".\") + 1\n            )\n        );\n    }\n\n    // ES5 prop selector:\n    // \"function (x) { return x.prop; }\"\n    // webpack production build excludes the spaces and optional trailing semicolon:\n    //   \"function(x){return x.prop}\"\n    // FYI - during local dev testing i observed carriage returns after the curly brackets as well\n    // Note by maintainer: See https://github.com/IRCraziestTaxi/ts-simple-nameof/pull/13#issuecomment-567171802 for explanation of this regex.\n    const matchRegex = /function\\s*\\(\\w+\\)\\s*\\{[\\r\\n\\s]*return\\s+\\w+\\.((\\w+\\.)*(\\w+))/i;\n\n    const es5Match = fnStr.match(matchRegex);\n\n    if (es5Match) {\n        return (options && options.lastProp)\n            ? es5Match[3]\n            : es5Match[1];\n    }\n\n    // ES5 class name:\n    // \"function ClassName() { ...\"\n    if (fnStr.startsWith(\"function \")) {\n        return cleanseAssertionOperators(\n            fnStr.substring(\n                \"function \".length,\n                fnStr.indexOf(\"(\")\n            )\n        );\n    }\n\n    // Invalid function.\n    throw new Error(\"ts-simple-nameof: Invalid function.\");\n}\n\nexport const stringFormat = (str: string, ...args: string[]) => str.replace(/{(\\d+)}/g, (_match, index) => args[index] || '')\n\nexport enum WebBrowser {\n    Safari = \"Safari\",\n    WebKit = \"WebKit\"\n}\n\nexport enum StorageDatatype {\n    DialogId,\n    ApiResponse,\n\tSafeSendToken,\n\tLoggedIn,\n\tOutlookAccessToken\n}\n\nexport enum SignalRHubType {\n\tAddinHub = \"/addinhub\",\n\tUIHub = \"/uihub\"\n}\n\nexport class StorageUtils {\n    public sessionExists(sesssionStorageDatatype: StorageDatatype): boolean {\n        let sessionStorageData = window.sessionStorage.getItem(StorageDatatype[sesssionStorageDatatype]);\n\n        return sessionStorageData !== null;\n    }\n\n    public sessionGet(sessionStorageDatatype: StorageDatatype): any {\n        return window.sessionStorage.getItem(StorageDatatype[sessionStorageDatatype]);\n    }\n\n    public sessionSet(sessionStorageDatatype: StorageDatatype, value: string): void {\n        window.sessionStorage.setItem(StorageDatatype[sessionStorageDatatype], value);\n    }\n\n    public sessionRemove(sessionStorageDatatype: StorageDatatype): void {\n        window.sessionStorage.removeItem(StorageDatatype[sessionStorageDatatype]);\n    }\n\n    public sessionClear(): void {\n        window.sessionStorage.clear();\n    }\n\n    public localExists(storageDatatype: StorageDatatype): boolean {\n        let storageData = window.localStorage.getItem(StorageDatatype[storageDatatype]);\n        return storageData !== null;\n    }\n\n    public localGet(storageDatatype: StorageDatatype): any {\n        return window.localStorage.getItem(StorageDatatype[storageDatatype]);\n    }\n\n    public localSet(storageDatatype: StorageDatatype, value: string): void {\n        window.localStorage.setItem(StorageDatatype[storageDatatype], value);\n    }\n\n    public localRemove(storageDatatype: StorageDatatype): void {\n        window.localStorage.removeItem(StorageDatatype[storageDatatype]);\n    }\n\n    public localClear(): void {\n        window.localStorage.clear();\n    }\n}\n\nexport function InjectLinkToString(separator: string, source: string, link: string): string {\n    let parts = source.split(separator);\n    let startLink = `<a target=\"_blank\" href=\"${link}\">`;\n    let endLink = '</a>';\n\n    return parts[0].concat(startLink).concat(parts[1]).concat(endLink).concat(parts[2]);\n}\n\nexport function replaceColorTagToStyle(source: string): string {\n    // search for color tags\n    const regexp = new RegExp(\"color=(.+?)(?=>)\", \"g\");\n    let colors: string[] = [];\n    let match;\n    while ((match = regexp.exec(source)) !== null) {\n        colors.push(match[0].replace(\"color=\", \"\"));\n    }\n\n    // Replace style instead of tag\n    colors.forEach((color) => {\n        if (color.includes(',')) {\n            source = source.replace(\"color=\" + color, 'div style=\"color:rgb(' + color + ')\"');\n        } else {\n            source = source.replace(\"color=\" + color, 'div style=\"color:' + color + '\"');\n        }\n        source = source.replace(\"/color\", \"/div\");\n    });\n\n    return source;\n}\n\nexport const storageUtils = new StorageUtils();","//Add new modules here\nexport enum Modules {    \n    SafeSend_Index,\n    SafeSend_App,\n    SafeSend_ConfirmableList,\n    SafeSend_OfficeDialog,\n    SafeSend_AddIn\n}","import { Checkbox, mergeStyleSets, Stack } from '@fluentui/react';\nimport * as React from 'react';\nimport { AttachmentConfirmableProps, AttachmentConfirmableStates } from './AttachmentTypes';\nimport { ITextProps, Text } from '@fluentui/react/lib/Text';\nimport { Icon } from '@fluentui/react';\nimport { getFileTypeIconProps } from '@fluentui/react-file-type-icons';\n\nconst classNames = mergeStyleSets({\n    fileIconImg: {\n        align: \"middle\",\n        width: 20,\n        height: 20,\n        padding: '0px 4px 0px 4px',\n    },\n});\n\nexport default class AttachmentConfirmable extends React.Component<AttachmentConfirmableProps, AttachmentConfirmableStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stateUpdate: false,\n            checked: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps: AttachmentConfirmableProps, prevState: AttachmentConfirmableStates) {\n        if (prevState.stateUpdate) {\n            return ({ stateUpdate: false })\n        }\n\n        if (nextProps.checked !== prevState.checked) {\n            return ({ checked: nextProps.checked })\n        }\n\n        return null\n    }\n\n    handleChange(e) {\n        let checked = (e?.target as HTMLInputElement).checked;\n        this.setState({\n            checked: checked,\n            stateUpdate: true\n        });\n        this.props.onChange(this.props.id, checked);\n    }\n\n    render() {\n        return (\n            <Stack reversed={this.props.alignRightToLeft} horizontal disableShrink>\n                {\n                    this.props.showCheckBox &&\n                    <Stack.Item align=\"auto\">\n                        <Checkbox disabled={this.props.disabled} onChange={this.handleChange} checked={this.state.checked} />\n                    </Stack.Item>\n                }\n                { this.props.filename !== null &&\n                <Stack.Item align=\"auto\">\n                    <Icon className={classNames.fileIconImg} {...getFileTypeIconProps({ extension: this.props.filename.split('.').pop(), imageFileType: 'svg' })} />\n                </Stack.Item>\n                }\n                <Stack.Item align=\"auto\">\n                    <>\n                        <Text variant={'smallPlus' as ITextProps['variant']} nowrap>\n                            {this.props.filename}\n                        </Text>\n                    </>\n                </Stack.Item>\n            </Stack>\n        );\n    }\n}","import { ITooltipProps, Stack, TooltipHost } from '@fluentui/react';\nimport * as React from 'react';\nimport AttachmentConfirmable from './AttachmentConfirmable';\nimport { AttachmentDlpProps } from \"./AttachmentTypes\";\n\nconst tooltipProps = (files: string[], alignRightToLeft: boolean) => {\n    let attachments: ITooltipProps = {\n        onRenderContent: () => (\n            <Stack>\n                {\n                    files.map((filename, index) => (\n                        <AttachmentConfirmable\n                            id={`${index}`}\n                            key={index}\n                            filename={filename}\n                            alignRightToLeft={alignRightToLeft}\n                            showCheckBox={false} checked={false} disabled={false} onChange={(_checked) => { }}>\n                        </AttachmentConfirmable>\n                    ))\n                }\n            </Stack>\n        )\n    }\n\n    return attachments;\n};\n\nexport default class AttachmentDlp extends React.Component<AttachmentDlpProps> {\n    render() {\n        return (\n            <>\n                {\n                    this.props.useTooltip &&\n                    <TooltipHost tooltipProps={tooltipProps(this.props.files, this.props.alignRightToLeft)}>\n                        {`[${this.props.pointCursorText}]`}\n                    </TooltipHost>\n                }\n                {\n                    !this.props.useTooltip &&\n                    <Stack horizontal horizontalAlign={this.props.alignRightToLeft ? \"end\" : \"start\"}>\n                        {\n                            this.props.files.map((filename, index) => (\n                                <AttachmentConfirmable\n                                    id={`${index}`}\n                                    key={index}\n                                    filename={filename}\n                                    alignRightToLeft={this.props.alignRightToLeft}\n                                    showCheckBox={false} checked={false} disabled={false} onChange={(_checked) => { }}>\n                                </AttachmentConfirmable>\n                            ))\n                        }\n                    </Stack>\n                }\n            </>\n        );\n    }\n}","import * as React from \"react\";\nimport { DetailsList, IColumn, SelectionMode, CheckboxVisibility, IDetailsHeaderStyles, IDetailsListProps, DetailsHeader} from '@fluentui/react/lib/DetailsList';\nimport { ITextFieldStyles, TextField } from '@fluentui/react/lib/TextField';\nimport { Stack, Label, IStackStyles, IStackTokens } from \"@fluentui/react\";\nimport { ClientKeywordDomainResultView, DlpResultSourceTypeEnum } from \"../Backend/BackendTypes\";\nimport { nameof } from '../../lib/Utils'\nimport AttachmentDlp from \"../Attachment/AttachmentDlp\";\nimport AttachmentConfirmable from \"../Attachment/AttachmentConfirmable\";\n\nconst textFieldStyles: Partial<ITextFieldStyles> = { root: { width: 80, position: 'relative', paddingLeft: '5px' } };\nconst detailsHeaderStyles: Partial<IDetailsHeaderStyles> = { root: { height: '35px', paddingTop: '2px' } };\nconst _onRenderDetailsHeader: IDetailsListProps['onRenderDetailsHeader'] = props => {\n    if (props) {\n        return <DetailsHeader {...props} styles={detailsHeaderStyles} />;\n    }\n\n    return null;\n};\n\nconst confirmationStackTokens: IStackTokens = {\n    childrenGap: 5,\n};\n\nconst stackTableStyles: Partial<IStackStyles> = {\n    root: {\n        border: '1px solid #ccc'\n    }\n};\nconst stackTextFieldStyles: Partial<IStackStyles> = {\n    root: {\n        paddingTop: '15px'\n    }\n};\n\nconst clientKeywordDomainResultsList = (props:\n    {\n        columnName1: string,\n        columnName2: string,\n        columnName3: string,\n        columnName4: string,\n        columnName5: string,\n        confirmText: string,\n\t\tresults: ClientKeywordDomainResultView[],\n\t\tshowTextField: boolean,\n        denySend: boolean,\n        hasAttachments: boolean,\n        onChangeAction: any,\n        alignRightToLeft: boolean,\n        pointCursorText: string,\n        tooLongText: string\n    }) => {\n    let columns: IColumn[] = [\n        {\n            key: 'column1',\n            name: props.columnName1,\n            fieldName: `${nameof<ClientKeywordDomainResultView>(c => c.sourceTypeString)}`,\n            minWidth: 80,\n            maxWidth: 80,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ClientKeywordDomainResultView) => (\n                <Stack style={props.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n                    {item.sourceTypeString}\n                </Stack>\n            )\n        },\n        {\n            key: 'column2',\n            name: props.columnName2,\n            fieldName: `${nameof<ClientKeywordDomainResultView>(c => c.attachmentPath)}`,\n            minWidth: 100,\n            maxWidth: 500,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ClientKeywordDomainResultView) => (\n                <Stack style={props.alignRightToLeft ? { alignItems: \"flex-end\" } : { alignItems: \"flex-start\" }}>\n                    {\n                        !item.groupBy && (item.sourceType === DlpResultSourceTypeEnum.Attachment || item.sourceType === DlpResultSourceTypeEnum.Filename || item.sourceType === DlpResultSourceTypeEnum.Body) &&\n                        <AttachmentConfirmable\n                            id={item.key}\n                            key={item.key}\n                            filename={item.attachmentPath}\n                            alignRightToLeft={props.alignRightToLeft}\n                            showCheckBox={false} checked={false} disabled={false} onChange={(_checked) => { }}>\n                        </AttachmentConfirmable>\n                    }\n                    {\n                        item.groupBy && !item.tooLong &&\n                        <AttachmentDlp\n                            pointCursorText={props.pointCursorText}\n                            files={item.files}\n                            alignRightToLeft={props.alignRightToLeft}\n                            useTooltip={item.useTooltip}\n                        >\n                        </AttachmentDlp>\n                    }\n                    {\n                        item.groupBy && item.tooLong &&\n                        <span>[{props.tooLongText}]</span>\n                    }\n                </Stack>\n            )\n        },\n        {\n            key: 'column3',\n            name: props.columnName3,\n            fieldName: `${nameof<ClientKeywordDomainResultView>(c => c.clientKeyword)}`,\n            minWidth: 100,\n            maxWidth: 150,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ClientKeywordDomainResultView) => (\n                <Stack style={props.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n                    {item.clientKeyword}\n                </Stack>\n            )\n        },\n        {\n            key: 'column4',\n            name: props.columnName4,\n            fieldName: `${nameof<ClientKeywordDomainResultView>(c => c.matchCount)}`,\n            minWidth: 80,\n            maxWidth: 80,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ClientKeywordDomainResultView) => (\n                <Stack style={props.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n                    {item.matchCount}\n                </Stack>\n            )\n        },\n        {\n            key: 'column5',\n            name: props.columnName5,\n            fieldName: `${nameof<ClientKeywordDomainResultView>(c => c.allowedDomain)}`,\n            minWidth: 100,\n            maxWidth: 200,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ClientKeywordDomainResultView) => (\n                <Stack style={props.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n                    {item.allowedDomain}\n                </Stack>\n            )\n        },        \n    ];\n\n    if (!props.hasAttachments) {\n        columns.splice(1, 1);\n    } else {\n        if (!props.results.some(r => r.attachmentPath !== null)) {\n            columns.splice(1, 1);\n        }\n    }\n\n    return (\n        <>\n            <Stack styles={stackTableStyles}>\n                <DetailsList\n                    items={props.results}\n                    columns={props.alignRightToLeft ? columns.reverse() : columns}\n                    compact={true}\n                    checkboxVisibility={CheckboxVisibility.hidden}\n                    disableSelectionZone={false}\n                    selectionMode={SelectionMode.none}\n                    onRenderDetailsHeader={_onRenderDetailsHeader}\n                        >\n                </DetailsList>\n\t\t\t</Stack>\n\t\t\t{\n\t\t\t\tprops.showTextField &&\n\t\t\t\t<Stack horizontal reversed={props.alignRightToLeft} styles={stackTextFieldStyles} tokens={confirmationStackTokens}>\n\t\t\t\t\t<Label >{props.confirmText} </Label>\n\t\t\t\t\t<TextField\n                        required\n                        autoComplete={\"off\"}\n                        styles={textFieldStyles}\n                        disabled={props.denySend}\n                        onChange={props.onChangeAction}\n\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\t\t\t}\n        </>\n    );\n}\n\nexport default clientKeywordDomainResultsList;","import * as React from \"react\";\nimport { Checkbox, CheckboxVisibility, DetailsHeader, DetailsList, IColumn, IDetailsHeaderStyles, IDetailsListProps, IStackStyles, IStackTokens, ITextFieldStyles, Label, SelectionMode, Stack, TextField } from \"@fluentui/react\";\nimport { ContentScanningResultView, DlpResultSourceTypeEnum } from \"../Backend/BackendTypes\";\nimport { nameof } from '../../lib/Utils'\nimport AttachmentConfirmable from \"../Attachment/AttachmentConfirmable\";\nimport AttachmentDlp from \"../Attachment/AttachmentDlp\";\n\nconst detailsHeaderStyles: Partial<IDetailsHeaderStyles> = { root: { height: '35px', paddingTop: '2px' } }\nconst textFieldStyles: Partial<ITextFieldStyles> = { root: { width: 80, position: 'relative', paddingLeft: '5px' } };\n\nconst confirmationStackTokens: IStackTokens = {\n    childrenGap: 5,\n};\n\nconst stackTextFieldStyles: Partial<IStackStyles> = {\n    root: {\n        paddingTop: '15px'\n    }\n};\nconst stackTableStyles: Partial<IStackStyles> = {\n    root: {\n        border: '1px solid #ccc'\n    }\n};\nconst _onRenderDetailsHeader: IDetailsListProps['onRenderDetailsHeader'] = props => {\n    if (props) {\n        return <DetailsHeader {...props} styles={detailsHeaderStyles} />;\n    }\n    return null;\n};\n\nconst contentScanningResultsList = (props:\n    {\n        columnName1: string,\n        columnName2: string,\n        columnName3: string,\n        columnName4: string,\n        columnName5: string,\n        results: ContentScanningResultView[],\n        denySend: boolean,\n        hasAttachments: boolean,\n        checkboxChecked: boolean,\n        showTextField: boolean,        \n        showCheckbox: boolean,\n        labelTextField: string,\n        labelCheckbox: string,\n        onChangeTextField: any\n        onChangeCheckbox: any,\n        alignRightToLeft: boolean,\n        pointCursorText: string,\n        tooLongText: string\n    }) => {\n    let columns: IColumn[] = [\n        {\n            key: 'column1',\n            name: props.columnName1,\n            fieldName: `${nameof<ContentScanningResultView>(c => c.ruleName)}`,\n            minWidth: 80,\n            maxWidth: 80,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ContentScanningResultView) => (\n                <Stack style={props.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n                    {item.ruleName}\n                </Stack>\n            )\n        },\n        {\n            key: 'column2',\n            name: props.columnName2,\n            fieldName: `${nameof<ContentScanningResultView>(c => c.sourceTypeString)}`,\n            minWidth: 80,\n            maxWidth: 80,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ContentScanningResultView) => (\n                <Stack style={props.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n                    {item.sourceTypeString}\n                </Stack>\n            )\n        },\n        {\n            key: 'column3',\n            name: props.columnName3,\n            fieldName: `${nameof<ContentScanningResultView>(c => c.attachmentPath)}`,\n            minWidth: 100,\n            maxWidth: 500,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ContentScanningResultView) => (\n                <Stack style={props.alignRightToLeft ? { alignItems: \"flex-end\" } : { alignItems: \"flex-start\" }}>\n                    {\n                        !item.groupBy && (item.sourceType === DlpResultSourceTypeEnum.Attachment || item.sourceType === DlpResultSourceTypeEnum.Filename || item.sourceType === DlpResultSourceTypeEnum.Body) &&\n                        <AttachmentConfirmable\n                            id={item.key}\n                            key={item.key}\n                            filename={item.attachmentPath}\n                            alignRightToLeft={props.alignRightToLeft}\n                            showCheckBox={false} checked={false} disabled={false} onChange={(_checked) => { }}>\n                        </AttachmentConfirmable>\n                    }\n                    {\n                        item.groupBy && !item.tooLong &&\n                        <AttachmentDlp\n                            pointCursorText={props.pointCursorText}\n                            files={item.files}\n                            alignRightToLeft={props.alignRightToLeft}\n                            useTooltip={item.useTooltip}\n                        >\n                        </AttachmentDlp>\n                    }\n                    {\n                        item.groupBy && item.tooLong &&\n                        <span>[{props.tooLongText}]</span>\n                    }\n                </Stack>\n            )\n        },\n        {\n            key: 'column4',\n            name: props.columnName4,\n            fieldName: `${nameof<ContentScanningResultView>(c => c.firstMatch)}`,\n            minWidth: 80,\n            maxWidth: 210,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ContentScanningResultView) => (\n                <Stack style={props.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n                    {item.firstMatch}\n                </Stack>\n            )\n        },\n        {\n            key: 'column5',\n            name: props.columnName5,\n            fieldName: `${nameof<ContentScanningResultView>(c => c.matchCount)}`,\n            minWidth: 80,\n            maxWidth: 80,\n            isRowHeader: true,\n            isResizable: true,\n            data: 'string',\n            isPadded: true,\n            styles: {\n                cellTitle: props.alignRightToLeft ? { flexDirection: \"row-reverse\" } : {}\n            },\n            onRender: (item: ContentScanningResultView) => (\n                <Stack style={props.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n                    {item.matchCount}\n                </Stack>\n            )\n        },\n    ];\n\n    if (!props.hasAttachments) {\n        columns.splice(2, 1);\n    } else {\n        if (!props.results.some(r => r.attachmentPath !== null)) {\n            columns.splice(2, 1);\n\t\t}\n    }\n\n    return (\n        <>\n            <Stack styles={stackTableStyles}>\n                <DetailsList\n                    columns={props.alignRightToLeft ? columns.reverse() : columns}\n                    items={props.results}\n                    compact={true}\n                    checkboxVisibility={CheckboxVisibility.hidden}\n                    disableSelectionZone={false}\n                    selectionMode={SelectionMode.none}\n                    onRenderDetailsHeader={_onRenderDetailsHeader}\n                >\n                </DetailsList>\n            </Stack>\n            {\n                props.showTextField &&\n                <Stack horizontal reversed={props.alignRightToLeft} styles={stackTextFieldStyles} tokens={confirmationStackTokens}>\n                    <Label >{props.labelTextField} </Label>\n                    <TextField\n                        required\n                        styles={textFieldStyles}\n                        autoComplete={\"off\"}\n                        disabled={props.denySend}\n                        onChange={props.onChangeTextField}\n                    />\n                </Stack>\n            }\n            {\n                props.showCheckbox &&\n                <Stack style={props.alignRightToLeft ? { alignItems: \"flex-end\" } : { alignItems: \"flex-start\" }}>\n                    <Checkbox\n                        boxSide={props.alignRightToLeft ? \"end\" : \"start\"}\n                        styles={stackTextFieldStyles}\n                        label={props.labelCheckbox}\n                        checked={props.checkboxChecked}\n                        disabled={props.denySend}\n                        onChange={props.onChangeCheckbox}\n                    />\n                </Stack>\n            }\n        </>\n    );\n}\n\nexport default contentScanningResultsList;\n","import * as React from 'react';\nimport { Checkbox, IStackTokens, Label, Stack } from '@fluentui/react';\nimport { IPersonaConfirmableProps, IPersonaConfirmableStates } from './PersonaConfirmableTypes';\n\nconst stackTokens: IStackTokens = {\n    padding: `${0}px ${0}px ${5}px ${0}px`,\n};\n\nexport default class PersonaConfirmable extends React.Component<IPersonaConfirmableProps, IPersonaConfirmableStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stateUpdate: false,\n            checked: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps: IPersonaConfirmableProps, prevState: IPersonaConfirmableStates) {\n        if (prevState.stateUpdate) {\n            return ({ stateUpdate: false })\n        }\n\n        if (nextProps.checked !== prevState.checked) {\n            return ({ checked: nextProps.checked })\n        }\n\n        return null\n    }\n\n    handleChange(e) {\n        let checked = (e?.target as HTMLInputElement).checked;\n        this.setState({\n            checked: checked,\n            stateUpdate: true\n        });\n        this.props.onChange(this.props.id, checked);\n    }\n\n    render() {\n        return (\n            <Stack reversed={this.props.alignRightToLeft} horizontal tokens={stackTokens} verticalAlign={'center'}>\n                { \n                    this.props.showCheckBox &&\n                    <Checkbox disabled={this.props.disabled} onChange={this.handleChange} checked={this.state.checked} />\n                }\n                {\n                    this.props.colorDomains &&\n                    <Label styles={{ root: { color : this.props.color } } }> {this.props.text} </Label>\n                }\n                {\n                    !this.props.colorDomains &&\n                    <Label> {this.props.text} </Label>\n                }\n            </Stack>\n        );\n    }\n}","import { Checkbox, IconButton, IStackTokens, Label, Stack } from '@fluentui/react';\nimport * as React from 'react';\nimport PersonaConfirmable from '../Persona/PersonaConfirmable';\nimport { IGroupRecipientsProps, IGroupRecipientsStates } from \"./GroupRecipientsTypes\";\n\nconst stackTokensPersonaLeft: IStackTokens = {\n    padding: `${0}px ${0}px ${0}px ${54}px`,\n};\n\nconst stackTokensPersonaRigth: IStackTokens = {\n    padding: `${0}px ${47}px ${0}px ${0}px`,\n};\n\nexport default class GroupRecipients extends React.Component<IGroupRecipientsProps, IGroupRecipientsStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stateUpdate: false,\n            checked: false,\n            toggle: props.expanded\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleChangePersonaConfirmable = this.handleChangePersonaConfirmable.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps: IGroupRecipientsProps, prevState: IGroupRecipientsStates) {\n        if (prevState.stateUpdate) {\n            return ({ stateUpdate: false })\n        }\n\n        if (nextProps.checked !== prevState.checked) {\n            return ({ checked: nextProps.checked })\n        }\n\n        return null\n    }\n\n    handleToggle(_e) {\n        this.setState({\n            toggle: !this.state.toggle\n        })\n    }\n\n    handleChange(e) {\n        let checked = (e?.target as HTMLInputElement).checked;\n        this.setState({\n            checked: checked,\n            stateUpdate: true\n        });\n        this.props.onChange(this.props.id, checked);\n    }\n\n    handleChangePersonaConfirmable(id: string, checked: boolean) {\n        this.setState({\n            checked: checked,\n            stateUpdate: true\n        });\n        this.props.onChange(id, checked);\n    }\n\n    render() {\n        return (\n            <>\n                { this.props.single &&\n                    <PersonaConfirmable\n                        onChange={this.handleChangePersonaConfirmable}\n                        disabled={this.props.disabled}\n                        checked={this.state.checked}\n                        key={this.props.id}\n                        id={this.props.id}\n                        showCheckBox={true}\n                        text={this.props.text}\n                        colorDomains={this.props.colorDomains}\n                        color={this.props.color}\n                        alignRightToLeft={this.props.alignRightToLeft}>\n                    </PersonaConfirmable>\n                }\n                { !this.props.single &&\n                    <Stack>\n                        <Stack reversed={this.props.alignRightToLeft} horizontal wrap>\n                            <Stack.Item align=\"center\">\n                                <Checkbox disabled={this.props.disabled} onChange={this.handleChange} checked={this.state.checked} />\n                            </Stack.Item>\n                            <Stack.Item align=\"center\">\n                                {\n                                    !this.state.toggle && <IconButton onClick={this.handleToggle} iconProps={{ iconName: 'ChevronDown' }} title=\"\" ariaLabel=\"Down\" />\n                                }\n                                {\n                                    this.state.toggle && <IconButton onClick={this.handleToggle} iconProps={{ iconName: 'ChevronUp' }} title=\"\" ariaLabel=\"Up\" />\n                                }\n                            </Stack.Item>\n                            <Stack.Item align=\"center\">\n                                <Label>@{this.props.text}</Label>\n                            </Stack.Item>\n                        </Stack>\n                        {\n                            this.state.toggle &&\n                            <Stack horizontal reversed={this.props.alignRightToLeft} wrap tokens={this.props.alignRightToLeft ? stackTokensPersonaRigth : stackTokensPersonaLeft}>\n                                <Stack>\n                                {\n                                    this.props.colorDomains &&\n                                    this.props.recipients.map(x => <Label styles={{ root: { color: this.props.color } }}> { x.displayName } </Label>)\n                                }\n                                {\n                                    !this.props.colorDomains &&\n                                    this.props.recipients.map(x => <Label> { x.displayName } </Label>)\n                                }\n                                </Stack>\n                            </Stack>\n                        }\n                    </Stack>\n                }\n            </>            \n        );\n    }\n}","import { EventEmitter } from 'events';\nimport { Modules } from '../LogConfiguration';\nimport configJson from '../config.json';\n\n\n//based on https://adrianhall.github.io/cloud/2019/06/30/building-an-efficient-logger-in-typescript/\nexport enum LogLevel {\n    TRACE = 'TRACE',\n    DEBUG = 'DEBUG',\n    INFO = 'INFO',\n    WARN = 'WARN',\n    ERROR = 'ERROR'\n}\n\nexport class LogManager extends EventEmitter {\n    private options: LogOptions = {\n        minLevels: {\n        }\n    };\n\n    // Prevent the console logger from being added twice\n    private consoleLoggerRegistered: boolean = false;\n\n    public configure(options: LogOptions): LogManager {\n        this.options = Object.assign(this.options, options);\n        return this;\n    }\n\n    public getLogger(module: string): Logger {\n        let minLevel = 'none';\n        let match = '';\n        for (const key in this.options.minLevels) {\n            if (module.startsWith(key) && key.length >= match.length) {\n                minLevel = this.options.minLevels[key];\n                match = key;\n            }\n        }\n\n        return new Logger(this, module, minLevel);\n    }\n\n    public onLogEntry(listener: (logEntry: LogEntry) => void): LogManager {\n        this.on('log', listener);\n        return this;\n    }\n\n    public registerConsoleLogger(): LogManager {\n        if (this.consoleLoggerRegistered) return this;\n\n        this.onLogEntry((logEntry) => {\n            const msg = `[${new Date().toLocaleString()}] [${logEntry.level}] [${logEntry.module}] ${logEntry.message} [${logEntry.location}]`;\n            switch (logEntry.level) {\n                case LogLevel.TRACE:\n                    console.trace(msg);\n                    break;\n                case LogLevel.DEBUG:\n                    console.debug(msg);\n                    break;\n                case LogLevel.INFO:\n                    console.info(msg);\n                    break;\n                case LogLevel.WARN:\n                    console.warn(msg);\n                    break;\n                case LogLevel.ERROR:\n                    console.error(msg);\n                    break;\n                default:\n                    console.log(`{${logEntry.level}} ${msg}`);\n            }\n        });\n\n        this.consoleLoggerRegistered = true;\n        return this;\n    }\n}\n\nexport interface LogEntry {\n    level: LogLevel;\n    module: string;\n    location?: string;\n    message: string;\n}\n\nexport interface LogOptions {\n    minLevels: { [module: string]: string }\n}\n\nexport const logging = new LogManager();\n\nexport class Logger {\n    private logManager: EventEmitter;\n    private minLevel: number;\n    private module: string;\n    private readonly levels: { [key: string]: number } = {\n        'trace': 1,\n        'debug': 2,\n        'info': 3,\n        'warn': 4,\n        'error': 5\n    };\n\n    constructor(logManager: EventEmitter, module: string, minLevel: string) {\n        this.logManager = logManager;\n        this.module = module;\n        this.minLevel = this.levelToInt(minLevel);\n    }\n\n    /**\n     * Converts a string level (trace/debug/info/warn/error) into a number \n     * \n     * @param minLevel \n     */\n    private levelToInt(minLevel: string): number {\n        if (minLevel.toLowerCase() in this.levels)\n            return this.levels[minLevel.toLowerCase()];\n        else\n            return 99;\n    }\n\n    /**\n     * Central logging method.\n     * @param logLevel \n     * @param message \n     */\n    public log(logLevel: LogLevel, message: string): void {\n        const level = this.levelToInt(logLevel);\n        if (level < this.minLevel) return;\n        const logEntry: LogEntry = { level: logLevel, module: this.module, message };\n        // Obtain the line/file through a thoroughly hacky method\n        // This creates a new stack trace and pulls the caller from it.  If the caller\n        // if .trace()\n        const error = new Error(\"\");\n        if (error.stack) {\n            const cla = error.stack.split(\"\\n\");\n            var idx = 1;\n            while (idx < cla.length && cla[idx].includes(\"at Logger.\")) idx++;\n            if (idx < cla.length) {\n                logEntry.location = cla[idx].slice(cla[idx].indexOf(\"at \") + 3, cla[idx].length);\n            }\n        }\n        this.logManager.emit('log', logEntry);\n    }\n\n    public trace(message: string): void { this.log(LogLevel.TRACE, message); }\n    public debug(message: string): void { this.log(LogLevel.DEBUG, message); }\n    public info(message: string): void { this.log(LogLevel.INFO, message); }\n    public warn(message: string): void { this.log(LogLevel.WARN, message); }\n    public error(message: string): void { this.log(LogLevel.ERROR, message); }\n}\n\n//Custom Implementation\nexport class SafeSendLogging {\n    private getMinLevels(): { [module: string]: string } {\n        let minLevelsTemp = {}\n        let logLevel: LogLevel = configJson.logLevel as LogLevel;\n        for (let mod in Modules) {\n            minLevelsTemp[Modules[mod]] = logLevel;\n        }\n\n        return minLevelsTemp;\n    }\n\n    public getLogger(module: Modules): Logger {\n        logging.configure({\n            minLevels: this.getMinLevels()\n        }).registerConsoleLogger();\n\n        return logging.getLogger(Modules[module]);\n    }\n}\n\nexport const safeSendLogging = new SafeSendLogging();","import * as React from 'react';\nimport { Checkbox, FontIcon, IStackTokens, Label, mergeStyles, mergeStyleSets, Separator, Spinner, SpinnerType, Stack, TooltipHost } from '@fluentui/react';\nimport { IConfirmableProps, IConfirmableStates, IRecipientConfirmable, IAttachmentConfirmable } from './ConfirmableTypes';\nimport GroupRecipients from '../GroupRecipient/GroupRecipients';\nimport AttachmentConfirmable from '../Attachment/AttachmentConfirmable';\nimport { DlpItemStatus } from '../Backend/BackendTypes';\nimport { Modules } from '../../LogConfiguration';\nimport { safeSendLogging } from '../../lib/Logger';\n\nconst logger = safeSendLogging.getLogger(Modules.SafeSend_ConfirmableList);\n\nconst stackTokensRecipientsCheck: IStackTokens = {\n    padding: `${0}px ${30}px ${0}px ${30}px`,\n};\n\nconst stackTokensFilesCheck: IStackTokens = {\n    padding: `${0}px ${24}px ${0}px ${28}px`,\n};\n\nconst iconClass = mergeStyles({\n    padding: 0,\n    fontSize: '16px',\n    verticalAlign: 'middle',\n    maxHeight: '16px',\n    maxWidth: '16px',\n});\n\nconst domainColors = [\"#69797E\", \"#A4262C\", \"#004E8C\", \"#0B6A0B\", \"#986F0B\"];\nconst colorByDomain = {};\n\nconst classNames = mergeStyleSets({\n    error: [{ color: 'red', cursor: 'default' }, iconClass],\n    warning: [{ color: '#ffc107', cursor: 'default' }, iconClass],\n    info: [{ color: '#6c757d', cursor: 'default' }, iconClass],\n    completed: [{ color: 'green', cursor: 'default' }, iconClass],\n});\n\nexport default class ConfirmableList extends React.Component<IConfirmableProps, IConfirmableStates> {\n    constructor(props) {\n        super(props);\n        this.state = { toConfirmableList: [], ccConfirmableList: [], bccConfirmableList: [], attachmentConfirmableList: [], allChecked: false, checked: false, updatedDlpstatus: false };\n        this.handleChangeSelectAll = this.handleChangeSelectAll.bind(this);\n        this.handleChangeConfirmable = this.handleChangeConfirmable.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps: IConfirmableProps, prevState: IConfirmableStates) {\n        if (prevState.updatedDlpstatus) {\n            return ({ updatedDlpstatus: false })\n        }\n\n        if (nextProps.dlps.length > 0 && !prevState.updatedDlpstatus) {\n            logger.debug('Fill from DLP items');\n            nextProps.dlps.forEach(dlp => {\n                prevState.attachmentConfirmableList.every(item => {\n                    if (item.dlp.id === dlp.id) {\n                        item.dlp.status = dlp.status;\n                        item.dlp.statusString = dlp.statusString;\n                        return false;\n                    }\n\n                    return true;\n                });\n            });\n\n            return ({ attachmentConfirmableList: prevState.attachmentConfirmableList, updatedDlpstatus: true });\n        }\n\n        if (Object.keys(nextProps.apiResponse).length > 0 && prevState.toConfirmableList.length === 0 && prevState.ccConfirmableList.length === 0 && prevState.bccConfirmableList.length === 0) {\n            logger.debug('Fill from API response');\n            let precheckRecipients = nextProps.apiResponse.onSendProcessContex.settings._precheckRecipients;\n            let singleColorIndex = 0;\n\n            let confirmableListTo: IRecipientConfirmable[] = nextProps.apiResponse.unsafeRecipients?.to.map((recipient) => {\n                if (!colorByDomain[recipient.domain]) {\n                    colorByDomain[recipient.domain] = domainColors[singleColorIndex];\n                    singleColorIndex++;\n                    if (singleColorIndex >= domainColors.length) {\n                        singleColorIndex -= domainColors.length;\n                    }\n\t\t\t\t}\n                return (\n                    {\n                        id: recipient.id,\n                        single: true,\n                        checked: precheckRecipients,\n                        displayName: recipient.displayName,\n                        color: colorByDomain[recipient.domain],\n                        childrens: []\n                    }\n                )\n            })\n\n            let confirmableListCc: IRecipientConfirmable[] = nextProps.apiResponse.unsafeRecipients?.cc.map((recipient) => {\n                if (!colorByDomain[recipient.domain]) {\n                    colorByDomain[recipient.domain] = domainColors[singleColorIndex];\n                    singleColorIndex++;\n                    if (singleColorIndex >= domainColors.length) {\n                        singleColorIndex -= domainColors.length;\n                    }\n                }\n                return (\n                    {\n                        id: recipient.id,\n                        single: true,\n                        checked: precheckRecipients,\n                        displayName: recipient.displayName,\n                        color: colorByDomain[recipient.domain],\n                        childrens: []\n                    }\n                )\n            })\n\n            let confirmableListBcc: IRecipientConfirmable[] = nextProps.apiResponse.unsafeRecipients?.bcc.map((recipient) => {\n                if (!colorByDomain[recipient.domain]) {\n                    colorByDomain[recipient.domain] = domainColors[singleColorIndex];\n                    singleColorIndex++;\n                    if (singleColorIndex >= domainColors.length) {\n                        singleColorIndex -= domainColors.length;\n                    }\n                }\n                return (\n                    {\n                        id: recipient.id,\n                        single: true,\n                        checked: precheckRecipients,\n                        displayName: recipient.displayName,\n                        color: colorByDomain[recipient.domain],\n                        childrens: []\n                    }\n                )\n            })\n\n            let colorIndex = 0;\n\n            let confirmableListToGroup: IRecipientConfirmable[] = nextProps.apiResponse.unsafeRecipients?.toGroup.map((item) => {\n                colorIndex++;\n                if (colorIndex >= domainColors.length) {\n                    colorIndex -= domainColors.length;\n                }\n                return (\n                    {\n                        id: item.id,\n                        single: false,\n                        checked: precheckRecipients,\n                        displayName: item.domain,\n                        color: domainColors[colorIndex],\n                        childrens: item.recipients.map((recipient) => ({ id: recipient.id, displayName: recipient.displayName }))\n                    }\n                )\n            })\n\n            let confirmableListCcGroup: IRecipientConfirmable[] = nextProps.apiResponse.unsafeRecipients?.ccGroup.map((item) => {\n                colorIndex++;\n                if (colorIndex >= domainColors.length) {\n                    colorIndex -= domainColors.length;\n                }\n                return (\n                    {\n                        id: item.id,\n                        single: false,\n                        checked: precheckRecipients,\n                        displayName: item.domain,\n                        color: domainColors[colorIndex],\n                        childrens: item.recipients.map((recipient) => ({ id: recipient.id, displayName: recipient.displayName }))\n                    }\n                )\n            })\n\n            let confirmableListBccGroup: IRecipientConfirmable[] = nextProps.apiResponse.unsafeRecipients?.bccGroup.map((item) => {\n                colorIndex++;\n                if (colorIndex >= domainColors.length) {\n                    colorIndex -= domainColors.length;\n                }\n                return (\n                    {\n                        id: item.id,\n                        single: false,\n                        checked: precheckRecipients,\n                        displayName: item.domain,\n                        color: domainColors[colorIndex],\n                        childrens: item.recipients.map((recipient) => ({ id: recipient.id, displayName: recipient.displayName }))\n                    }\n                )\n            })\n\n            let settings = nextProps.apiResponse.onSendProcessContex.settings;\n            let confirmableAttachments: IAttachmentConfirmable[] = nextProps.apiResponse.unsafeAttachments?.map((item) => (\n                {\n                    id: item.id,\n                    checked: precheckRecipients,\n                    displayName: item.filename,\n                    dlp: {\n                        id: item.id,\n                        status: nextProps.apiResponse.onSendProcessContex.scanStarted ? (item.contentType === \"none\" ? DlpItemStatus.Unsupported : DlpItemStatus.Scanning) : DlpItemStatus.ScanNotStarted,\n                        statusString: nextProps.apiResponse.onSendProcessContex.scanStarted ? (item.contentType === \"none\" ? settings._stringAttachmentStatusUnsupported : settings._stringAttachmentStatusScanning) : settings._stringAttachmentStatusScanNotStarted\n                    }\n                }\n            ))\n\n            nextProps.onChange(precheckRecipients);\n\n            return ({\n                allChecked: precheckRecipients,\n                checked: precheckRecipients,\n                toConfirmableList: confirmableListTo.concat(confirmableListToGroup),\n                ccConfirmableList: confirmableListCc.concat(confirmableListCcGroup),\n                bccConfirmableList: confirmableListBcc.concat(confirmableListBccGroup),\n                attachmentConfirmableList: confirmableAttachments\n            })\n        }      \n\n        return null\n    }\n\n    async handleChangeSelectAll(e) {\n        let checked: boolean = (e?.target as HTMLInputElement).checked;\n\n        this.state.toConfirmableList.forEach(item => { item.checked = checked; });\n        this.state.ccConfirmableList.forEach(item => { item.checked = checked; });\n        this.state.bccConfirmableList.forEach(item => { item.checked = checked; });\n        this.state.attachmentConfirmableList.forEach(item => { item.checked = checked; });\n\n        await this.setState({\n            allChecked: checked,\n            checked: checked,\n            toConfirmableList: this.state.toConfirmableList,\n            ccConfirmableList: this.state.ccConfirmableList,\n            bccConfirmableList: this.state.bccConfirmableList,\n            attachmentConfirmableList: this.state.attachmentConfirmableList\n        });\n\n        this.props.onChange(this.state.allChecked);\n    }\n\n    async handleChangeConfirmable(id: string, checked: boolean) {\n        let notFound = false;\n        notFound = this.state.toConfirmableList.every(item => {\n            if (item.id === id) {\n                item.checked = checked;\n                return false;\n            }\n\n            return true;\n        });\n\n        if (notFound) {\n            notFound = this.state.ccConfirmableList.every(item => {\n                if (item.id === id) {\n                    item.checked = checked;\n                    return false;\n                }\n\n                return true;\n            });\n        }            \n\n        if (notFound) {\n            notFound = this.state.bccConfirmableList.every(item => {\n                if (item.id === id) {\n                    item.checked = checked;\n                    return false;\n                }\n\n                return true;\n            });\n        }\n\n        if (notFound) {\n            this.state.attachmentConfirmableList.every(item => {\n                if (item.id === id) {\n                    item.checked = checked;\n                    return false;\n                }\n\n                return true;\n            });\n        }\n\n        let allChecked = this.state.toConfirmableList.every(item => { return item.checked; });\n        if (allChecked) {\n            allChecked = this.state.ccConfirmableList.every(item => { return item.checked; });\n            if (allChecked) {\n                allChecked = this.state.bccConfirmableList.every(item => { return item.checked; });\n                if (allChecked) {\n                    allChecked = this.state.attachmentConfirmableList.every(item => { return item.checked; });\n                }\n            }\n        }\n\n        await this.setState({\n            allChecked: allChecked,\n            checked: allChecked,\n            toConfirmableList: this.state.toConfirmableList,\n            ccConfirmableList: this.state.ccConfirmableList,\n            bccConfirmableList: this.state.bccConfirmableList,\n            attachmentConfirmableList: this.state.attachmentConfirmableList\n        });\n\n        this.props.onChange(this.state.allChecked);\n    }\n\n    render() {\n        return (\n        <Stack style={this.props.alignRightToLeft ? { alignItems: \"flex-end\" } : { alignItems: \"flex-start\" }}>\n            {\n                !this.props.apiResponse.onSendProcessContex?.settings._disableSelectAll &&\n                (this.props.apiResponse.unsafeRecipientsCount > 1 || this.props.apiResponse.unsafeAttachmentsCount > 0) &&\n                this.props.apiResponse.unsafeRecipientsCount + this.props.apiResponse.unsafeAttachmentsCount >= this.props.apiResponse.onSendProcessContex?.settings._disableSelectAllForLessThanXCheckboxes &&\n                <Checkbox\n                    boxSide={this.props.alignRightToLeft ? \"end\" : \"start\"}\n                    disabled={this.props.denySend}\n                    label={this.props.apiResponse.onSendProcessContex?.settings._stringMainSelectAll}\n                    checked={this.state.checked}\n                    onChange={this.handleChangeSelectAll} />\n            }\n            <Stack style={this.props.alignRightToLeft ? { alignItems: \"flex-end\", width: \"100%\" } : { alignItems: \"flex-start\", width: \"100%\" }}>\n                {\n                    this.state.toConfirmableList.length > 0 &&\n                    <>\n                        <Label>{this.props.apiResponse.onSendProcessContex?.settings._stringMainEmailTO}</Label>\n                        <Stack wrap tokens={stackTokensRecipientsCheck}>\n                            {\n                                this.state.toConfirmableList.map(item =>\n                                    <GroupRecipients\n                                        onChange={this.handleChangeConfirmable}\n                                        disabled={this.props.denySend}\n                                        checked={item.checked}\n                                        id={item.id}\n                                        key={item.id}\n                                        text={item.displayName}\n                                        single={item.single}\n                                        recipients={item.childrens}\n                                        color={item.color}\n                                        colorDomains={this.props.apiResponse.onSendProcessContex?.confirmationFlags.colorDomains}\n\t\t\t\t\t\t\t\t\t\talignRightToLeft={this.props.alignRightToLeft}\n\t\t\t\t\t\t\t\t\t\texpanded={this.props.apiResponse.onSendProcessContex.settings._expandListsByDefault}>\n                                    </GroupRecipients>\n                                )\n                            }\n                        </Stack>\n                    </>\n                }\n                {\n                    this.state.ccConfirmableList.length > 0 &&\n                    <>\n                        <Label>{this.props.apiResponse.onSendProcessContex?.settings._stringMainEmailCC}</Label>\n                        <Stack wrap tokens={stackTokensRecipientsCheck}>\n                            {\n                                this.state.ccConfirmableList.map(item => \n                                    <GroupRecipients\n                                        onChange={this.handleChangeConfirmable}\n                                        disabled={this.props.denySend}\n                                        checked={item.checked}\n                                        id={item.id}\n                                        key={item.id}\n                                        text={item.displayName}\n                                        single={item.single}\n                                        recipients={item.childrens}\n                                        color={item.color}\n                                        colorDomains={this.props.apiResponse.onSendProcessContex?.confirmationFlags.colorDomains}\n\t\t\t\t\t\t\t\t\t\talignRightToLeft={this.props.alignRightToLeft}\n\t\t\t\t\t\t\t\t\t\texpanded={this.props.apiResponse.onSendProcessContex.settings._expandListsByDefault}\t\t\t\t\t\t\t\t\t>\n                                    </GroupRecipients>\n                                )\n                            }\n                        </Stack>\n                    </>\n                }\n                {\n                    this.state.bccConfirmableList.length > 0 &&\n                    <>\n                        <Label>{this.props.apiResponse.onSendProcessContex?.settings._stringMainEmailBCC}</Label>\n                        <Stack wrap tokens={stackTokensRecipientsCheck}>\n                            {\n                                this.state.bccConfirmableList.map(item =>\n                                    <GroupRecipients\n                                        onChange={this.handleChangeConfirmable}\n                                        disabled={this.props.denySend}\n                                        checked={item.checked}\n                                        id={item.id}\n                                        key={item.id}\n                                        text={item.displayName}\n                                        single={item.single}\n                                        recipients={item.childrens}\n                                        color={item.color}\n                                        colorDomains={this.props.apiResponse.onSendProcessContex?.confirmationFlags.colorDomains}\n\t\t\t\t\t\t\t\t\t\talignRightToLeft={this.props.alignRightToLeft}\n\t\t\t\t\t\t\t\t\t\texpanded={this.props.apiResponse.onSendProcessContex.settings._expandListsByDefault}\t\t\t\t\t\t\t\t\t>\n                                    </GroupRecipients>\n                                )\n                            }\n                        </Stack>\n                    </>\n                }\n                {\n                    this.state.attachmentConfirmableList.length > 0 &&\n                    <>\n                        {   \n                            this.props.apiResponse.onSendProcessContex?.settings._showAttachmentsSeparator &&\n                            <Separator styles={{root: {width: \"100%\"}}} />\n                        }\n                        <Label>{this.props.apiResponse.onSendProcessContex?.settings._stringMainFilesAttachedHeader}</Label>\n                        <Stack wrap tokens={stackTokensFilesCheck}>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th></th>\n                                        <th className=\"absorbing-column\"></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.attachmentConfirmableList.map(item =>\n                                        <tr\n                                            key={item.id}>\n                                            {\n                                                !this.props.alignRightToLeft &&\n                                                <td>\n                                                    <AttachmentConfirmable\n                                                        showCheckBox={true}\n                                                        disabled={this.props.denySend}\n                                                        onChange={this.handleChangeConfirmable}\n                                                        checked={item.checked}\n                                                        id={item.id}\n                                                        key={item.id}\n                                                        filename={item.displayName}\n                                                        alignRightToLeft={this.props.alignRightToLeft}>\n                                                    </AttachmentConfirmable>\n                                                </td>\n                                            }\n                                            <td>\n                                                {\n                                                    item.dlp.status === DlpItemStatus.Unsupported &&\n                                                    <TooltipHost\n                                                        content={item.dlp.statusString}>\n                                                        <FontIcon iconName=\"Info\" className={classNames.info} />\n                                                    </TooltipHost>\n                                                }\n                                                {\n                                                    item.dlp.status === DlpItemStatus.Scanning && !this.props.scanTimedOut &&\n                                                    <TooltipHost\n                                                        content={item.dlp.statusString}>\n                                                        <Spinner type={SpinnerType.normal} />\n                                                    </TooltipHost>\n                                                }\n                                                {\n                                                    item.dlp.status === DlpItemStatus.Scanning && this.props.scanTimedOut &&\n                                                    <TooltipHost\n                                                        content={item.dlp.statusString}>\n                                                        <FontIcon iconName=\"Warning\" className={classNames.warning} />\n                                                    </TooltipHost>\n                                                }\n                                                {\n                                                    item.dlp.status === DlpItemStatus.Error &&\n                                                    <TooltipHost\n                                                        content={item.dlp.statusString}>\n                                                        <FontIcon iconName=\"FileBug\" className={classNames.error} />\n                                                    </TooltipHost>\n                                                }\n                                                {\n                                                    item.dlp.status === DlpItemStatus.PasswordProtected &&\n                                                    <TooltipHost\n                                                        content={item.dlp.statusString}>\n                                                        <FontIcon iconName=\"ProtectRestrict\" className={classNames.info} />\n                                                    </TooltipHost>\n                                                }\n                                                {\n                                                    item.dlp.status === DlpItemStatus.ProtectedDocument &&\n                                                    <TooltipHost\n                                                        content={item.dlp.statusString}>\n                                                        <FontIcon iconName=\"ProtectedDocument\" className={classNames.info} />\n                                                    </TooltipHost>                                                    \n                                                }\n                                                {\n                                                    item.dlp.status === DlpItemStatus.SensitiveDataFound &&\n                                                    <TooltipHost\n                                                        content={item.dlp.statusString}>\n                                                        <FontIcon iconName=\"ReportWarning\" className={classNames.error} />\n                                                    </TooltipHost>\n                                                }\n                                                {\n                                                    item.dlp.status === DlpItemStatus.Success &&\n                                                    <TooltipHost\n                                                        content={item.dlp.statusString}>\n                                                        <FontIcon iconName=\"Completed\" className={classNames.completed} />\n                                                    </TooltipHost>\n                                                }                                                    \n                                            </td>\n                                            {\n                                                this.props.alignRightToLeft &&\n                                                <td>\n                                                    <AttachmentConfirmable\n                                                        showCheckBox={true}\n                                                        disabled={this.props.denySend}\n                                                        onChange={this.handleChangeConfirmable}\n                                                        checked={item.checked}\n                                                        id={item.id}\n                                                        key={item.id}\n                                                        filename={item.displayName}\n                                                        alignRightToLeft={this.props.alignRightToLeft}>\n                                                    </AttachmentConfirmable>\n                                                </td>\n                                            }\n                                            {\n                                                !this.props.alignRightToLeft &&\n                                                <td>\n                                                </td>\n                                            }\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                        </Stack>\n                    </>\n                }\n            </Stack>\n        </Stack>\n        );\n    }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport axiosRetry from \"axios-retry\";\nimport { OnSendPostProcessContextView, ApiResponseView, AppInfo, ConfirmInfo, EmailInfo, LoginModel, OutlookAttachment, PlatformConfig } from \"./components/Backend/BackendTypes\";\nimport configJson from \"./config.json\";\nimport { safeSendLogging } from \"./lib/Logger\";\nimport { Modules } from \"./LogConfiguration\";\n\nconst logger = safeSendLogging.getLogger(Modules.SafeSend_App);\n\nexport interface ApiResponse<T> {\n\tstatusCode: number,\n\tcontent: T | null,\n\terrorMessage: string\n\terrorContent: any,\n\tisSuccessStatusCode: boolean\n}\n\naxiosRetry(axios, {\n\tretries: configJson.retryOptions.retries,\n\tretryDelay: (retryCount: number, error: AxiosError<any>) => {\n\t\tlogger.error(`Retry attempt: (${retryCount} of ${configJson.retryOptions.retries}), Error Found: ${error.message}`);\n\t\treturn configJson.retryOptions.retryDelay\n\t},\n\tretryCondition: async (error: AxiosError<any>) => {\n\t\tif (error.response?.status === 401) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (configJson.retryOptions.retryErrorCode === 200) {\n\t\t\treturn error.response?.status !== configJson.retryOptions.retryErrorCode\n\t\t}\n\t\telse {\n\t\t\treturn error.response?.status === configJson.retryOptions.retryErrorCode;\n\t\t}\n\t}\n});\n\nexport class RestClient {\n\tprivate getHeaders(authToken: string) {\n\t\tvar headers = { authorization: `Bearer ${authToken}` };\n\t\treturn { headers: headers };\n\t}\n\n\tprivate getApiResponse<T>(statusCode: number, content: T): ApiResponse<T> {\n\t\treturn { statusCode: statusCode, content: content, errorMessage: \"\", errorContent: {}, isSuccessStatusCode: statusCode === 200 }\n\t}\n\n\tprivate getApiResponseError<T>(error: AxiosError): Error {\n\t\tif (error.response?.status === 401) {\n\t\t\treturn new UnauthorizedError<T>(error.message, error.response);\n\t\t}\n\n\t\treturn new ConnectionError<T>(error.message, error.response);\n\t}\n\n\tpublic login = async (outlookToken: string): Promise<ApiResponse<LoginModel>> => {\n\t\tvar headers = { outlookToken: outlookToken };\n\t\ttry {\n\t\t\tlet response = await axios.post<LoginModel>(\"/api/login/\", {}, { headers: headers });\n\t\t\treturn this.getApiResponse<LoginModel>(response.status, response.data);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<LoginModel>(error as AxiosError);\n\t\t}\n\t}\n\n\tpublic getPlatformInfo = async (platformType: Office.PlatformType): Promise<ApiResponse<PlatformConfig>> => {\n\t\ttry {\n\t\t\tlet response = await axios.get<PlatformConfig>(`api/settings/platform/${platformType}`);\n\t\t\treturn this.getApiResponse<PlatformConfig>(response.status, response.data);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<PlatformConfig>(error as AxiosError);\n\t\t}\n\t}\n\n\tpublic processMail = async (authToken: string, emailInfo: EmailInfo): Promise<ApiResponse<ApiResponseView>> => {\n\t\ttry {\n\t\t\tlet response = await axios.post<ApiResponseView>(\"/api/mail\", emailInfo, this.getHeaders(authToken));\n\t\t\treturn this.getApiResponse<ApiResponseView>(response.status, response.data);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<ApiResponseView>(error as AxiosError);\n\t\t}\n\t}\n\n\tpublic cancelDlp = async (authToken: string): Promise<ApiResponse<boolean>> => {\n\t\ttry {\n\t\t\tlet response = await axios.delete(\"/api/mail/dlp\", this.getHeaders(authToken));\n\t\t\treturn this.getApiResponse<boolean>(response.status, true);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<boolean>(error as AxiosError);\n\t\t}\n\t}\n\n\tpublic postProcess = async (authToken: string, SendConfirmed: ConfirmInfo): Promise<ApiResponse<OnSendPostProcessContextView>> => {\n\t\ttry {\n\t\t\tlet response = await axios.patch<OnSendPostProcessContextView>(\"/api/mail\", SendConfirmed, this.getHeaders(authToken));\n\t\t\treturn this.getApiResponse<OnSendPostProcessContextView>(response.status, response.data);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<OnSendPostProcessContextView>(error as AxiosError);\n\t\t}\n\t}\n\n\tpublic sendAttachmentPassword = async (authToken: string, password: string): Promise<ApiResponse<boolean>> => {\n\t\ttry {\n\t\t\tlet response = await axios.patch<boolean>(\"/api/mail/dlp/attachments\", { password: password }, this.getHeaders(authToken));\n\t\t\treturn this.getApiResponse<boolean>(response.status, true);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<boolean>(error as AxiosError);\n\t\t}\n\t}\n\n\tpublic sendAttachmentContent = async (authToken: string, outlookAttachment: OutlookAttachment): Promise<ApiResponse<boolean>> => {\n\t\ttry {\n\t\t\tlet response = await axios.patch<boolean>(\"/api/mail/dlp/attachment\", outlookAttachment, this.getHeaders(authToken));\n\t\t\treturn this.getApiResponse<boolean>(response.status, true);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<boolean>(error as AxiosError);\n\t\t}\n\t}\n\n\tpublic getAppInfo = async (): Promise<ApiResponse<AppInfo>> => {\n\t\ttry {\n\t\t\tlet response = await axios.get<AppInfo>(\"/api/settings/version\");\n\t\t\treturn this.getApiResponse<AppInfo>(response.status, response.data);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<AppInfo>(error as AxiosError);\n\t\t}\n\t};\n\n\tpublic getAppSettings = async (authToken: string): Promise<ApiResponse<string>> => {\n\t\ttry {\n\t\t\tlet response = await axios.get<string>(\"/api/settings\", this.getHeaders(authToken));\n\t\t\treturn this.getApiResponse<string>(response.status, response.data);\n\t\t} catch (error) {\n\t\t\tthrow this.getApiResponseError<string>(error as AxiosError);\n\t\t}\n\t};\n}\n\nexport const restClient = new RestClient();\n\nexport class ConnectionError<T> extends Error {\n\tpublic response: AxiosResponse<T> | null;\n\tconstructor(message: string, response: AxiosResponse<T> | null = null) {\n\t\tsuper(message);\n\t\tthis.message = message;\n\t\tthis.name = \"ConnectionError\";\n\t\tthis.response = response;\n\t}\n}\n\nexport class UnauthorizedError<T> extends Error {\n\tpublic response: AxiosResponse<T> | null;\n\tconstructor(message: string, response: AxiosResponse<T> | null = null) {\n\t\tsuper(message);\n\t\tthis.message = message;\n\t\tthis.name = \"UnauthorizedError\";\n\t\tthis.response = response;\n\t}\n}","export interface LoginResult {\n\tstatus: LoginResultStatus;\n\taccessToken: string;\n\terror: any;\n}\n\nexport enum LoginResultStatus {\n\tFailed,\n\tSucceeded\n}","import * as React from 'react';\nimport { FontIcon, Label, mergeStyles, mergeStyleSets, Stack } from '@fluentui/react';\nimport { browserName, engineName, engineVersion, fullBrowserVersion, osName, osVersion } from 'react-device-detect';\nimport { Text } from '@fluentui/react/lib/Text';\n\nconst iconClass = mergeStyles({\n    padding: 0,\n    fontSize: '48px',\n    verticalAlign: 'middle',\n    maxHeight: '48px',\n    maxWidth: '48px',\n});\n\nconst classNames = mergeStyleSets({\n    box: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%'\n    },\n    info: [{ color: '#6c757d', cursor: 'default' }, iconClass],\n});\n\nexport default class LostConnectionPage extends React.Component {\n    render() {\n        return (\n            <Stack className={classNames.box}>\n                <FontIcon iconName=\"PlugDisconnected\" className={classNames.info} />\n                <Label>\n                    Lost connection: To continue, close this window and refresh the browser (F5).\n                </Label>\n\t\t\t\t<Text variant={'small'} block>{osName} {osVersion} - {browserName} {fullBrowserVersion} - {engineName} {engineVersion}</Text>\n            </Stack>\n        );\n    }\n}","/*global Office */  //Required for this to be found.  see: https://github.com/OfficeDev/office-js-docs-pr/issues/691\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport '@fluentui/react/dist/css/fabric.min.css';\nimport { Image } from '@fluentui/react/lib/Image';\nimport * as React from 'react';\nimport { Checkbox, ChoiceGroup, DefaultButton, FontIcon, IChoiceGroupOption, IMessageBarStyles, IPanelStyles, IScrollablePaneStyles, ITextFieldStyles, Label, MessageBar, MessageBarType, Panel, PanelType, PrimaryButton, ProgressIndicator, ScrollablePane, Separator, Sticky, StickyPositionType, TextField } from '@fluentui/react';\nimport { Stack, IStackTokens, IStackStyles } from '@fluentui/react/lib/Stack';\nimport { mergeStyles, mergeStyleSets } from '@fluentui/react/lib/Styling';\nimport { ApiResponseView, ActionOnMatch, ContentScanningResultView, ClientKeywordDomainResultView, TriggerEncryptionMode, UnprotectedAttachmentsMode } from './Backend/BackendTypes'\nimport ClientKeywordDomainResultsList from './Dlp/ClientKeywordDomainResultsList';\nimport ContentScanningResultsList from './Dlp/ContentScanningResultsList';\nimport ConfirmableList from './Confirmable/ConfirmableList';\nimport { IDlp } from './Confirmable/ConfirmableTypes';\nimport { Modules } from '../LogConfiguration';\nimport { safeSendLogging } from '../lib/Logger';\nimport { GroupByAttachments } from './App/AppTypes';\nimport { browserName } from 'react-device-detect';\nimport { WebBrowser, InjectLinkToString, replaceColorTagToStyle, storageUtils, StorageDatatype } from '../lib/Utils';\nimport { restClient } from '../RestClient';\nimport LostConnectionPage from './LostConnectionPage';\n\nconst logger = safeSendLogging.getLogger(Modules.SafeSend_OfficeDialog);\nconst textFieldStyles: Partial<ITextFieldStyles> = { root: { position: 'relative', paddingLeft: '5px' } };\n\nconst stackTextFieldStyles: Partial<IStackStyles> = {\n\troot: {\n\t\tpaddingTop: '15px'\n\t}\n};\n\nconst confirmationStackTokens: IStackTokens = {\n\tchildrenGap: 5,\n};\n\nconst stringMainPolicySpaces: IStackTokens = {\n\tchildrenGap: 5,\n\tpadding: 5,\n};\n\nconst messageBarStylesRigth: IMessageBarStyles = {\n\tcontent: {\n\t\tflexDirection: \"row-reverse\",\n\t\ttextAlign: \"right\",\n\t},\n\tinnerText: {\n\t\twidth: \"100%\"\n\t}\n}\n\nconst stackTokens: IStackTokens = {\n\tpadding: 20,\n};\n\nconst iconNotificationClass = mergeStyles({\n\tpadding: '0px 0px 0px 5px',\n\tfontSize: '20px',\n\tverticalAlign: 'middle',\n\tmaxHeight: '20px',\n\tmaxWidth: '20px',\n});\n\nconst classNames = mergeStyleSets({\n\twrapper: {\n\t\theight: '100%',\n\t\tposition: 'relative',\n\t\tmaxHeight: 'inherit',\n\t},\n\tpane: {\n\t\tmaxWidth: '100%',\n\t\tborder: '1px solid #ccc',\n\t},\n\tsticky: {\n\t\tborder: '1px solid #ccc',\n\t\tpadding: '1px 0px 1px 0px',\n\t\tfontSize: '13px',\n\t},\n\ttextContent: {\n\t\tpadding: '15px 10px',\n\t},\n\tcontent: {\n\t\theight: '100%',\n\t},\n\tprogressIndicator: {\n\t\twidth: \"100%\",\n\t},\n\tnotificationArea: {\n\t\tdisplay: 'flex',\n\t},\n\terror: [{ color: 'red', cursor: 'default' }, iconNotificationClass],\n\twarning: [{ color: '#ffc107', cursor: 'default' }, iconNotificationClass],\n\tinfo: [{ color: '#6c757d', cursor: 'default' }, iconNotificationClass],\n\tcompleted: [{ color: 'green', cursor: 'default' }, iconNotificationClass],\n});\n\nconst notificationAreaStackTokens: IStackTokens = {\n\tchildrenGap: 5,\n\tpadding: '5px 0px 0px 0px',\n};\n\nconst scrollablePaneStyles: Partial<IScrollablePaneStyles> = {\n\troot: classNames.pane,\n};\n\nconst panelStyles: Partial<IPanelStyles> = {\n\tcontent: { height: \"100%\", minHeight: \"100%\", padding: \"0px 20px 0px 20px\", margin: \"0px\" },\n\theader: { padding: \"0px 0px 10px 19px\", margin: \"0px\" }\n}\n\ninterface ISettings {\n\tconfirmableAllSelected: boolean,\n\tbccWarningIfMoreThanX: boolean,\n\tshowConfirmContentScanningText: boolean,\n\tconfirmContentScanningText: string,\n\tshowConfirmContentScanningCheck: boolean,\n\tconfirmContentScanningCheck: boolean,\n\tshowConfirmClientKeywordsText: boolean,\n\tconfirmClientKeywordsText: string,\n\tdenySend: boolean,\n\tencryptYesSelected: boolean,\n\tencryptNoSelected: boolean,\n\tshowEncryptPrompt: boolean,\n\tconfirmUnprotectedAttachmentsCheck: boolean,\n\tattachmentPassword: string\n}\n\nexport interface DialogValues {\n\tsend: boolean;\n\tencrypt: boolean;\n\tshowEncryptPrompt: boolean;\n}\n\nexport interface DialogProps {\n\tdialogId: string,\n\tapiResponseView: ApiResponseView,\n\tdlps: IDlp[],\n\tconfirmationRequired: boolean;\n\tisDlpWaiting: boolean;\n\tscanTimedOut: boolean;\n\tcountUnprotectedAttachments: number;\n\tunprotectedAttachmentMessage: string;\n\tcontentScanningAction: ActionOnMatch;\n\tonRef: any;\n\tcontentScanningResults: ContentScanningResultView[];\n\tclientKeywordDomainResults: ClientKeywordDomainResultView[];\n\tgroupByAttachments: GroupByAttachments;\n}\n\nexport interface DialogState {\n\tisConnectionLost: boolean;\n\tenabledSend: boolean;\n\tdefaultValuesSettingUp: boolean;\n\tshowAttachmentPasswordPrompt: boolean;\n\thasShownPassowrdPrompt: boolean;\n\tenabledSubmitPassword: boolean;\n}\n\nexport default class OfficeDialog extends React.Component<DialogProps, DialogState>{\n\tsettings: ISettings;\n\tmailboxItem: any;\n\tsendEvent: any;\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tisConnectionLost: false,\n\t\t\tenabledSend: false,\n\t\t\tdefaultValuesSettingUp: false,\n\t\t\tshowAttachmentPasswordPrompt: false,\n\t\t\thasShownPassowrdPrompt: false,\n\t\t\tenabledSubmitPassword: false\n\t\t}\n\n\t\tthis.settings = {\n\t\t\tconfirmableAllSelected: false,\n\t\t\tbccWarningIfMoreThanX: false,\n\t\t\tshowConfirmContentScanningText: false,\n\t\t\tconfirmContentScanningText: '',\n\t\t\tshowConfirmContentScanningCheck: false,\n\t\t\tconfirmContentScanningCheck: false,\n\t\t\tshowConfirmClientKeywordsText: false,\n\t\t\tconfirmClientKeywordsText: '',\n\t\t\tdenySend: false,\n\t\t\tencryptNoSelected: false,\n\t\t\tencryptYesSelected: false,\n\t\t\tshowEncryptPrompt: false,\n\t\t\tattachmentPassword: \"\",\n\t\t\tconfirmUnprotectedAttachmentsCheck: false\n\t\t}\n\n\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\tthis.attachmentPasswordRequest = this.attachmentPasswordRequest.bind(this);\n\t\tthis.attachmentSendPassword = this.attachmentSendPassword.bind(this);\n\t\tthis.setSendEnabled = this.setSendEnabled.bind(this);\n\t\tthis.isBccWarningVisible = this.isBccWarningVisible.bind(this);\n\t\tthis.isEncryptVisible = this.isEncryptVisible.bind(this);\n\t\tthis.setEncryptVisibility = this.setEncryptVisibility.bind(this);\n\t\tthis.isProcessMaxNrRecipients = this.isProcessMaxNrRecipients.bind(this);\n\t\tthis.validateEncryptionSelection = this.validateEncryptionSelection.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.setDialogTimeout(240);\n\t\tthis.props.onRef(this);\n\n\t\twindow.addEventListener(\"storage\", () => {\n\t\t\tlet dialogId = storageUtils.localGet(StorageDatatype.DialogId) as string;\n\t\t\tif (this.props.dialogId !== dialogId) {\n\t\t\t\tlogger.warn(\"Dialog connection lost\");\n\t\t\t\tthis.setState({\n\t\t\t\t\tisConnectionLost: true\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.onRef(undefined)\n\t}\n\n\tcloseDialog(dialogOptions: DialogValues) {\n\t\tOffice.context.ui.messageParent(JSON.stringify(dialogOptions));\n\t}\n\n\tisBccWarningVisible() {\n\t\treturn this.props.apiResponseView.onSendProcessContex.confirmationFlags.showBccWarning;\n\t}\n\n\tisEncryptVisible() {\n\t\treturn this.settings.showEncryptPrompt;\n\t}\n\n\tsetEncryptVisibility(encrypt: boolean) {\n\t\tthis.settings.showEncryptPrompt = encrypt;\n\t}\n\n\tvalidateEncryptionSelection(option: string | undefined, isDefault: boolean): string | undefined {\n\t\tif (!this.state.defaultValuesSettingUp && isDefault) {\n\t\t\tthis.setState({\n\t\t\t\tdefaultValuesSettingUp: true,\n\t\t\t});\n\t\t}\n\n\t\tif (this.state.defaultValuesSettingUp && isDefault) {\n\t\t\treturn option;\n\t\t}\n\n\t\tif (option === 'Yes') {\n\t\t\tthis.settings.encryptYesSelected = true;\n\t\t\tthis.settings.encryptNoSelected = false;\n\t\t} else if (option === 'No') {\n\t\t\tthis.settings.encryptNoSelected = true;\n\t\t\tthis.settings.encryptYesSelected = false;\n\t\t}\n\t\tthis.setSendEnabled();\n\t\treturn option;\n\t}\n\n\tisUnprotectedAttachmentsNotificationVisible() {\n\t\treturn this.props.countUnprotectedAttachments > 0 &&\n\t\t\t(this.props.apiResponseView.onSendProcessContex.settings._unprotectedAttachmentsMode === UnprotectedAttachmentsMode.Notify\n\t\t\t\t|| this.props.apiResponseView.onSendProcessContex.settings._unprotectedAttachmentsMode === UnprotectedAttachmentsMode.Deny);\n\t}\n\n\tisUnprotectedAttachmentsComfirmationVisible() {\n\t\treturn this.props.countUnprotectedAttachments > 0 &&\n\t\t\tthis.props.apiResponseView.onSendProcessContex.settings._unprotectedAttachmentsMode === UnprotectedAttachmentsMode.Confirm;\n\t}\n\n\tisPasswordPromptVisible() {\n\t\treturn this.props.isDlpWaiting && ((this.props.apiResponseView.attachmentPasswordRequested && !this.state.hasShownPassowrdPrompt) || this.state.showAttachmentPasswordPrompt);\n\t}\n\n\tisProcessMaxNrRecipients(): boolean {\n\t\tlet recipients = this.props.apiResponseView.unsafeRecipients.to.concat(this.props.apiResponseView.unsafeRecipients.cc).concat(this.props.apiResponseView.unsafeRecipients.bcc);\n\t\tlet result = false;\n\t\trecipients.forEach((recipient) => {\n\t\t\tif (recipient.tooManyRecipientsCount > 0) {\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tsetDialogTimeout(timeoutSeconds: number) {\n\t\tvar timeoutMs = timeoutSeconds * 1000;\n\t\tsetTimeout(dialogTimeout, timeoutMs);\n\t\tfunction dialogTimeout() {\n\t\t\tlogger.info(\"Dialog timeout reached, closing dialog.\");\n\t\t\tlet dialogValues = JSON.stringify({ send: false, encrypt: false });\n\t\t\tOffice.context.ui.messageParent(dialogValues);\n\t\t}\n\t}\n\n\tattachmentPasswordRequest() {\n\t\tthis.setState({\n\t\t\tshowAttachmentPasswordPrompt: true\n\t\t});\n\t}\n\n\tasync attachmentSendPassword(password: string) {\n\t\tthis.setState({\n\t\t\thasShownPassowrdPrompt: true,\n\t\t\tshowAttachmentPasswordPrompt: false,\n\t\t\tenabledSubmitPassword: false\n\t\t});\n\n\t\tlet authToken = storageUtils.localGet(StorageDatatype.SafeSendToken) as string;\n\t\tawait restClient.sendAttachmentPassword(authToken, password);\n\t}\n\n\tsetSendEnabled() {\n\t\tthis.settings.denySend = this.props.contentScanningAction === ActionOnMatch.Deny\n\t\t\t|| (this.props.countUnprotectedAttachments !== 0 && this.props.apiResponseView.onSendProcessContex.settings._unprotectedAttachmentsMode === UnprotectedAttachmentsMode.Deny);\n\t\tthis.settings.showConfirmContentScanningCheck = this.props.contentScanningAction === ActionOnMatch.Confirm;\n\t\tthis.settings.showConfirmContentScanningText = this.props.contentScanningAction === ActionOnMatch.ConfirmText;\n\t\tthis.settings.showConfirmClientKeywordsText = this.props.clientKeywordDomainResults.length > 0 && !this.props.apiResponseView.onSendProcessContex.settings._clientKeywordDisableConfirm;\n\t\tlet enabled = this.settings.confirmableAllSelected && !this.props.isDlpWaiting && (this.isBccWarningVisible() ? this.settings.bccWarningIfMoreThanX : true)\n\t\t\t&& (this.props.contentScanningAction === ActionOnMatch.Inform\n\t\t\t\t|| (this.props.contentScanningAction === ActionOnMatch.Confirm && this.settings.confirmContentScanningCheck)\n\t\t\t\t|| (this.props.contentScanningAction === ActionOnMatch.ConfirmText && this.settings.confirmContentScanningText.toLowerCase() === \"confirm\"))\n\t\t\t&& (!this.settings.showConfirmClientKeywordsText || this.settings.confirmClientKeywordsText.toLowerCase() === \"confirm\")\n\t\t\t&& (!this.isEncryptVisible() || this.settings.encryptYesSelected || this.settings.encryptNoSelected)\n\t\t\t&& (this.props.countUnprotectedAttachments === 0\n\t\t\t\t|| this.props.apiResponseView.onSendProcessContex.settings._unprotectedAttachmentsMode === UnprotectedAttachmentsMode.Ignore\n\t\t\t\t|| this.props.apiResponseView.onSendProcessContex.settings._unprotectedAttachmentsMode === UnprotectedAttachmentsMode.Notify\n\t\t\t\t|| (this.props.apiResponseView.onSendProcessContex.settings._unprotectedAttachmentsMode === UnprotectedAttachmentsMode.Confirm\n\t\t\t\t\t&& this.settings.confirmUnprotectedAttachmentsCheck)\n\t\t\t)\n\t\t\t;\n\t\tthis.setState({\n\t\t\tenabledSend: enabled\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.props.apiResponseView.onSendProcessContex) {\n\t\t\tthis.setEncryptVisibility(this.props.apiResponseView.onSendProcessContex.confirmationFlags.showEncryptPrompt);\n\t\t}\n\t\tconst onRenderFooterContent = () => (\n\t\t\t<Stack horizontal reversed={this.props.apiResponseView.alignRightToLeft} id=\"child\" style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"flex-end\" }}>\n\t\t\t\t<Image\n\t\t\t\t\tsrc={`data:image/png;base64,${this.props.apiResponseView.onSendProcessContex?.settings.logoBytes}`}\n\t\t\t\t\talt=\"placeholder\"\n\t\t\t\t\theight={48}\n\t\t\t\t/>\n\n\t\t\t\t<Stack horizontal reversed={this.props.apiResponseView.alignRightToLeft} id=\"child\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n\t\t\t\t\t<PrimaryButton onClick={() => this.closeDialog({ send: true, encrypt: this.settings.encryptYesSelected, showEncryptPrompt: this.isEncryptVisible() })}\n\t\t\t\t\t\ttext={this.props.apiResponseView.onSendProcessContex?.settings._stringMainSendButton} disabled={!this.state.enabledSend} />\n\t\t\t\t\t<Separator vertical={true} />\n\t\t\t\t\t<DefaultButton onClick={() => this.closeDialog({ send: false, encrypt: false, showEncryptPrompt: this.isEncryptVisible() })}\n\t\t\t\t\t\ttext={this.props.apiResponseView.onSendProcessContex?.settings._stringMainCancelButton} />\n\t\t\t\t</Stack>\n\t\t\t</Stack>\n\t\t)\n\n\t\tconst isConnectionLost = Object.entries(this.props.apiResponseView).length === 0;\n\t\tif (this.props.apiResponseView.onSendProcessContex?.settings._triggerEncryptionMode === TriggerEncryptionMode.AskWhenFoundSensitiveContent\n\t\t\t&& this.props.contentScanningResults.length > 0) {\n\t\t\tlogger.debug(\"Asking to encrypt because sensitive content found\");\n\t\t\tthis.setEncryptVisibility(true);\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\t(isConnectionLost || this.state.isConnectionLost) &&\n\t\t\t\t\t<LostConnectionPage/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\t!isConnectionLost && !this.state.isConnectionLost &&\n\t\t\t\t\t<Panel\n\t\t\t\t\t\tisOpen={true}\n\t\t\t\t\t\ttype={PanelType.smallFluid}\n\t\t\t\t\t\tonRenderFooterContent={onRenderFooterContent}\n\t\t\t\t\t\thasCloseButton={false}\n\t\t\t\t\t\theaderText={this.props.apiResponseView.onSendProcessContex.confirmationFlags.mainTitle}\n\t\t\t\t\t\tisFooterAtBottom={true}\n\t\t\t\t\t\tclassName={classNames.content}\n\t\t\t\t\t\tstyles={panelStyles}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Stack className={classNames.content} >\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.isBccWarningVisible() &&\n\t\t\t\t\t\t\t\t<Stack style={this.props.apiResponseView.alignRightToLeft ? { alignItems: \"flex-end\", textAlign: \"right\" } : { alignItems: \"flex-start\" }}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tboxSide={this.props.apiResponseView.alignRightToLeft ? \"end\" : \"start\"}\n\t\t\t\t\t\t\t\t\t\tdisabled={this.settings.denySend}\n\t\t\t\t\t\t\t\t\t\tlabel={this.props.apiResponseView.onSendProcessContex?.settings._stringMainBCCWarning}\n\t\t\t\t\t\t\t\t\t\tchecked={this.settings.bccWarningIfMoreThanX}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => { this.settings.bccWarningIfMoreThanX = (e?.target as HTMLInputElement).checked; this.setSendEnabled(); }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.settings._showFromAddress &&\n\t\t\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.fromAddress}\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.confirmationFlags.displaySubject &&\n\t\t\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.subjectText}\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.isEncryptVisible() &&\n\t\t\t\t\t\t\t\t<Stack horizontal verticalAlign='center' horizontalAlign={this.props.apiResponseView.alignRightToLeft ? \"end\" : \"start\"} tokens={stringMainPolicySpaces}>\n\t\t\t\t\t\t\t\t\t<ChoiceGroup defaultSelectedKey={this.props.apiResponseView.onSendProcessContex?.settings._triggerEncryptionDefaultOption !== 0 ?\n\t\t\t\t\t\t\t\t\t\t(this.props.apiResponseView.onSendProcessContex?.settings._triggerEncryptionDefaultOption === 1 ? this.validateEncryptionSelection(\"Yes\", true) : this.validateEncryptionSelection(\"No\", true)) : \"\"} styles={{ flexContainer: { display: \"flex\" } }}\n\t\t\t\t\t\t\t\t\t\tonChange={(_e: React.FormEvent<HTMLElement | HTMLInputElement> | undefined, option: IChoiceGroupOption | undefined) => {\n\t\t\t\t\t\t\t\t\t\t\tif (option !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.validateEncryptionSelection(option?.key, false);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel={this.props.apiResponseView.onSendProcessContex?.settings._stringMainTriggerEncryptionQuestion}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t{ key: 'Yes', text: this.props.apiResponseView.onSendProcessContex?.settings._stringMainTriggerEncryptionOptionYes, styles: { field: { marginRight: \"15px\" } } },\n\t\t\t\t\t\t\t\t\t\t\t{ key: 'No', text: this.props.apiResponseView.onSendProcessContex?.settings._stringMainTriggerEncryptionOptionNo }]}                                    >\n\t\t\t\t\t\t\t\t\t</ChoiceGroup>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.isUnprotectedAttachmentsNotificationVisible() &&\n\t\t\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\t\t\t{this.props.unprotectedAttachmentMessage}\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.isUnprotectedAttachmentsComfirmationVisible() &&\n\t\t\t\t\t\t\t\t<Stack style={this.props.apiResponseView.alignRightToLeft ? { alignItems: \"flex-end\", textAlign: \"right\" } : { alignItems: \"flex-start\", paddingBottom: \"2px\" }}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tboxSide={this.props.apiResponseView.alignRightToLeft ? \"end\" : \"start\"}\n\t\t\t\t\t\t\t\t\t\tdisabled={this.settings.denySend}\n\t\t\t\t\t\t\t\t\t\tlabel={this.props.unprotectedAttachmentMessage}\n\t\t\t\t\t\t\t\t\t\tchecked={this.settings.confirmUnprotectedAttachmentsCheck}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => { this.settings.confirmUnprotectedAttachmentsCheck = (e?.target as HTMLInputElement).checked; this.setSendEnabled(); }}\n\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.confirmationRequired &&\n\t\t\t\t\t\t\t\t<div className={classNames.wrapper} style={browserName === WebBrowser.Safari || browserName === WebBrowser.WebKit ? { height: \"250px\" } : {}} >\n\t\t\t\t\t\t\t\t\t<ScrollablePane\n\t\t\t\t\t\t\t\t\t\tscrollContainerFocus={true}\n\t\t\t\t\t\t\t\t\t\tscrollContainerAriaLabel=\"Sticky component example\"\n\t\t\t\t\t\t\t\t\t\tstyles={scrollablePaneStyles}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Sticky stickyPosition={StickyPositionType.Both}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div role=\"heading\" aria-level={0} className={classNames.sticky}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.unsafeRecipients.isGroupByDomain &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MessageBar messageBarType={MessageBarType.warning} isMultiline={false} styles={this.props.apiResponseView.alignRightToLeft ? messageBarStylesRigth : {}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.isProcessMaxNrRecipients()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? < div dangerouslySetInnerHTML={{ __html: replaceColorTagToStyle(this.props.apiResponseView.onSendProcessContex?.settings._stringMainMessageManyRecipients) }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: this.props.apiResponseView.unsafeRecipients.toGroup.length > 1 || this.props.apiResponseView.unsafeRecipients.ccGroup.length > 1 || this.props.apiResponseView.unsafeRecipients.bccGroup.length > 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? <div dangerouslySetInnerHTML={{ __html: replaceColorTagToStyle(this.props.apiResponseView.onSendProcessContex?.settings._stringMainMessageMultipleDomainRecipients) }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: <div dangerouslySetInnerHTML={{ __html: replaceColorTagToStyle(this.props.apiResponseView.onSendProcessContex?.settings._stringMainMessageSingleDomainRecipient) }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.props.apiResponseView.unsafeRecipients.isGroupByDomain &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MessageBar messageBarType={MessageBarType.warning} isMultiline={this.isProcessMaxNrRecipients()} styles={this.props.apiResponseView.alignRightToLeft ? messageBarStylesRigth : {}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.isProcessMaxNrRecipients()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? < div dangerouslySetInnerHTML={{ __html: replaceColorTagToStyle(this.props.apiResponseView.onSendProcessContex?.settings._stringMainMessageManyRecipients) }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: this.props.apiResponseView.unsafeRecipientsCount > 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? < div dangerouslySetInnerHTML={{ __html: replaceColorTagToStyle(this.props.apiResponseView.onSendProcessContex?.settings._stringMainMessageMultipleRecipients) }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: <div dangerouslySetInnerHTML={{ __html: replaceColorTagToStyle(this.props.apiResponseView.onSendProcessContex?.settings._stringMainMessageSingleRecipient) }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.unsafeAttachmentsCount > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MessageBar messageBarType={MessageBarType.severeWarning} isMultiline={false} styles={this.props.apiResponseView.alignRightToLeft ? messageBarStylesRigth : {}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.settings._disableConfirmAttachments ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.settings._stringMainFilesAttached :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(this.props.apiResponseView.unsafeAttachmentsCount > 1 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.settings._stringMainFilesAttachedConfirmed :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.settings._stringMainFileAttachedConfirmed)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Sticky>\n\t\t\t\t\t\t\t\t\t\t\t<Stack tokens={stackTokens}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ConfirmableList\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(allSelected) => { this.settings.confirmableAllSelected = allSelected; this.setSendEnabled(); }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tapiResponse={this.props.apiResponseView}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdenySend={this.settings.denySend}\n\t\t\t\t\t\t\t\t\t\t\t\t\tscanTimedOut={this.props.scanTimedOut}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdlps={this.props.dlps}\n\t\t\t\t\t\t\t\t\t\t\t\t\talignRightToLeft={this.props.apiResponseView.alignRightToLeft}>\n\t\t\t\t\t\t\t\t\t\t\t\t</ConfirmableList>\n\t\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Sticky stickyPosition={StickyPositionType.Both}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div role=\"heading\" aria-level={1} className={this.props.clientKeywordDomainResults.length === 0 ? 'hidden' : classNames.sticky}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MessageBar messageBarType={MessageBarType.severeWarning} isMultiline={false} styles={this.props.apiResponseView.alignRightToLeft ? messageBarStylesRigth : {}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Stack>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.props.scanTimedOut && !this.settings.denySend &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningWrongClientWarning}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.scanTimedOut && this.settings.denySend &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningWrongClientWarning} - {this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTimedOutShort}, {this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSendingNotAllowed}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.scanTimedOut && !this.settings.denySend &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningWrongClientWarning} - {this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTimedOutShort}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.props.scanTimedOut && this.settings.denySend &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningWrongClientWarning} - {this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSendingNotAllowed}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.groupByAttachments.groupByClientKeywordAttachments &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.groupByAttachments.groupByClientKeywordAttachmentsText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Sticky>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.clientKeywordDomainResults.length !== 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t<Stack tokens={stackTokens}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ClientKeywordDomainResultsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirmText={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningConfirmContentText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName1={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSource}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName2={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningEmailAttachment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName3={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningClientData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName4={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTotalMatches}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName5={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningAllowedDomains}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresults={this.props.clientKeywordDomainResults}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTextField={this.settings.showConfirmClientKeywordsText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdenySend={this.settings.denySend}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thasAttachments={this.props.apiResponseView.onSendProcessContex?.mailItem.attachmentCount > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeAction={e => { this.settings.confirmClientKeywordsText = (e.target as HTMLInputElement).value; this.setSendEnabled(); }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talignRightToLeft={this.props.apiResponseView.alignRightToLeft}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpointCursorText={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningPointCursorHere}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttooLongText={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTooLongToDisplay}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Sticky stickyPosition={StickyPositionType.Both}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div role=\"heading\" aria-level={2} className={this.props.contentScanningResults.length === 0 ? 'hidden' : classNames.sticky}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MessageBar messageBarType={MessageBarType.severeWarning} isMultiline={false} styles={this.props.apiResponseView.alignRightToLeft ? messageBarStylesRigth : {}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Stack>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.props.scanTimedOut && !this.settings.denySend &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSensitiveContentFound}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.scanTimedOut && this.settings.denySend &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSensitiveContentFound} - {this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTimedOutShort}, {this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSendingNotAllowed}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.scanTimedOut && !this.settings.denySend &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSensitiveContentFound} - {this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTimedOutShort}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.props.scanTimedOut && this.settings.denySend &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSensitiveContentFound} - {this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSendingNotAllowed}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.groupByAttachments.groupByContentScanningAttachments &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.groupByAttachments.groupByContentScanningAttachmentsText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MessageBar>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Sticky>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.contentScanningResults.length !== 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t<Stack tokens={stackTokens}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ContentScanningResultsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName1={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningRule}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName2={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningSource}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName3={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningEmailAttachment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName4={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningFirstMatch}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnName5={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTotalMatches}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowCheckbox={this.settings.showConfirmContentScanningCheck}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTextField={this.settings.showConfirmContentScanningText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelCheckbox={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningConfirmContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelTextField={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningConfirmContentText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxChecked={this.settings.confirmContentScanningCheck}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresults={this.props.contentScanningResults}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdenySend={this.settings.denySend}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thasAttachments={this.props.apiResponseView.onSendProcessContex?.mailItem.attachmentCount > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={(e) => { this.settings.confirmContentScanningCheck = (e?.target as HTMLInputElement).checked; this.setSendEnabled(); }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeTextField={e => { this.settings.confirmContentScanningText = (e.target as HTMLInputElement).value; this.setSendEnabled(); }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talignRightToLeft={this.props.apiResponseView.alignRightToLeft}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpointCursorText={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningPointCursorHere}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttooLongText={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTooLongToDisplay}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</ScrollablePane>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.isPasswordPromptVisible() &&\n\t\t\t\t\t\t\t\t<Stack horizontal reversed={this.props.apiResponseView.alignRightToLeft} styles={stackTextFieldStyles} tokens={confirmationStackTokens}>\n\t\t\t\t\t\t\t\t\t<Label>{this.props.apiResponseView.onSendProcessContex?.settings._stringPasswordRequired}</Label>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tautoComplete={\"off\"}\n\t\t\t\t\t\t\t\t\t\tstyles={textFieldStyles}\n\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.attachmentPassword = (e.target as HTMLInputElement).value;\n\t\t\t\t\t\t\t\t\t\t\tif (this.settings.attachmentPassword !== \"\") {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\tenabledSubmitPassword: true\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\tenabledSubmitPassword: false\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonKeyDown={e => {\n\t\t\t\t\t\t\t\t\t\t\tlet event = (e as React.KeyboardEvent<HTMLDivElement>);\n\t\t\t\t\t\t\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\tthis.attachmentSendPassword(this.settings.attachmentPassword);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<PrimaryButton onClick={() => this.attachmentSendPassword(this.settings.attachmentPassword)}\n\t\t\t\t\t\t\t\t\t\ttext={this.props.apiResponseView.onSendProcessContex?.settings._stringPasswordSubmit} disabled={!this.state.enabledSubmitPassword} />\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<Stack reversed={this.props.apiResponseView.alignRightToLeft} className={classNames.notificationArea} tokens={notificationAreaStackTokens}>\n\t\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex.scanStarted && this.props.isDlpWaiting &&\n\t\t\t\t\t\t\t\t\t<div className={classNames.progressIndicator} style={this.props.apiResponseView.alignRightToLeft ? { textAlign: \"right\" } : { textAlign: \"left\" }}>\n\t\t\t\t\t\t\t\t\t\t<ProgressIndicator label={this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningScanningContent} className={classNames.progressIndicator} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex.scanStarted && !this.props.isDlpWaiting && !this.props.scanTimedOut &&\n\t\t\t\t\t\t\t\t\tthis.props.clientKeywordDomainResults.length === 0 && this.props.contentScanningResults.length === 0 &&\n\t\t\t\t\t\t\t\t\t<Stack horizontal reversed={this.props.apiResponseView.alignRightToLeft}>\n\t\t\t\t\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningComplete}\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t<FontIcon iconName=\"CompletedSolid\" className={classNames.completed} />\n\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex.scanStarted && !this.props.isDlpWaiting && this.props.scanTimedOut &&\n\t\t\t\t\t\t\t\t\tthis.props.clientKeywordDomainResults.length === 0 && this.props.contentScanningResults.length === 0 &&\n\t\t\t\t\t\t\t\t\t<Stack horizontal reversed={this.props.apiResponseView.alignRightToLeft}>\n\t\t\t\t\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\t\t\t\t\t{this.props.apiResponseView.onSendProcessContex?.settings._stringContentScanningTimedOutLong}\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t<FontIcon iconName=\"WarningSolid\" className={classNames.warning} />\n\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.confirmationFlags.showPolicyText &&\n\t\t\t\t\t\t\t\t\t<div style={{ fontSize: '11px', }}\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: replaceColorTagToStyle(InjectLinkToString(\"%\",\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.settings._stringMainPolicy,\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.apiResponseView.onSendProcessContex?.settings._policyLink))\n\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Panel>\n\t\t\t\t}\n\t\t\t</>\n\t\t);\n\t}\n}\n","import { ActionOnMatch, ClientKeywordDomainResultView, ContentScanningResultView, DlpItemResultView, DlpResultSourceTypeEnum, DlpResultView, SettingsView, UnprotectedAttachmentsMode } from \"../Backend/BackendTypes\";\nimport { IDlp } from \"../Confirmable/ConfirmableTypes\";\nimport { AppStateUI, GroupByAttachments, IProcessedContentScanningResults } from \"./AppTypes\";\nimport { stringFormat, nameof } from \"../../lib/Utils\";\n\nexport class AppUtils {\n    private getGroupAttachment<T extends DlpResultView>(results: T[], isContentScanning: boolean): T[] {\n        let copyResults: T[] = [];\n        let groupBy = {};    \n        results.forEach((item) => {\n            if (item.sourceType === DlpResultSourceTypeEnum.Attachment) {\n                let key: string = isContentScanning ? item.firstMatch : item.clientKeyword;\n                let group = groupBy[key] as T;\n                if (group) {\n                    group.matchCount += item.matchCount;\n                    group.files.push(item.attachmentPath)\n                } else {\n                    item.files.push(item.attachmentPath);\n                    item.groupBy = true;\n                    groupBy[key] = item;\n                }\n            } else {\n                copyResults.push(item);\n            }\n        });\n\n        for (let key in groupBy) {\n            var item = groupBy[key] as T;\n            var filterFiles = item.files.filter((elem, index, self) => {\n                return index === self.indexOf(elem);\n            })\n\n            item.files = filterFiles;\n            let length = item.files.join().length;\n            item.tooLong = false;\n            if (length > 60) {\n                if (length <= 5000) {\n                    item.useTooltip = true;\n                } else {\n                    item.tooLong = true;\n                    item.files = [];\n                }\n            } else {\n                item.useTooltip = false;\n            }\n\n            item.files = item.files.sort(function (a, b) {\n                return a > b ? 1 : -1;\n            })\n\n            copyResults.push(item);\n        }\n\n        return copyResults;\n    }\n\n    private getContentScanningAction(currentAction: ActionOnMatch, newAction: ActionOnMatch): ActionOnMatch {\n        switch (currentAction) {\n            case ActionOnMatch.Confirm:\n                if (newAction === ActionOnMatch.Inform) {\n                    return currentAction;\n                }\n                break;\n            case ActionOnMatch.ConfirmText:\n                if (newAction === ActionOnMatch.Inform || newAction === ActionOnMatch.Confirm) {\n                    return currentAction;\n                }\n                break;\n            case ActionOnMatch.Deny:\n                return currentAction;\n        }\n\n        return newAction;\n    }\n\n    public getStateForUpdateUI(\n        settings: SettingsView,\n        clientKeywordDomainResults: ClientKeywordDomainResultView[],\n        contentScanningResults: ContentScanningResultView[],\n        currentContentScanningAction: ActionOnMatch,\n        groupClientKeywordAttachments: boolean,\n        groupContentScanningAttachments: boolean,\n        dlpItemResults: DlpItemResultView[],\n        isDlpWaiting: boolean,\n        scanTimedOut: boolean,\n        countUnprotectedAttachments: number\n    ): AppStateUI {\n        let dlps: IDlp[] = [];\n        dlpItemResults.forEach((dlpItemResult) => {\n            let processedContentScanningResults = this.getProcessedContentScanningResults(settings, currentContentScanningAction, dlpItemResult.contentScanResults);\n            currentContentScanningAction = processedContentScanningResults.actionOnMatch;\n            contentScanningResults = contentScanningResults.concat(processedContentScanningResults.contentScanningResultView);\n\n            let processedClientKeywordDomainResults = this.getProcessedClientKeywordDomainResults(settings, dlpItemResult.clientKeywordDomainResults);\n            clientKeywordDomainResults = clientKeywordDomainResults.concat(processedClientKeywordDomainResults);\n\n            if (dlpItemResult.isAttachment) {\n               dlps.push({ id: dlpItemResult.id, status: dlpItemResult.status, statusString: dlpItemResult.statusString });\n               if (dlpItemResult.containsUnprotectedAttachment) {\n                  countUnprotectedAttachments++;\n               }\n            }\n        });\n\n       let unprotectedAttachmentMessage = \"\";\n       if (countUnprotectedAttachments === 1) {\n          switch (settings._unprotectedAttachmentsMode) {\n             case UnprotectedAttachmentsMode.Confirm:\n                unprotectedAttachmentMessage = settings._stringNotEncryptedAttachmentConfirm;\n                break;\n             case UnprotectedAttachmentsMode.Deny:\n                unprotectedAttachmentMessage = settings._stringNotEncryptedAttachmentDeny;\n                break;\n             default:\n                unprotectedAttachmentMessage = settings._stringNotEncryptedAttachmentNotify;\n                break;\n          }\n       }\n       else {\n          switch (settings._unprotectedAttachmentsMode) {\n             case UnprotectedAttachmentsMode.Confirm:\n                unprotectedAttachmentMessage = settings._stringNotEncryptedAttachmentsConfirm;\n                break;\n             case UnprotectedAttachmentsMode.Deny:\n                unprotectedAttachmentMessage = settings._stringNotEncryptedAttachmentsDeny;\n                break;\n             default:\n                unprotectedAttachmentMessage = settings._stringNotEncryptedAttachmentsNotify;\n                break;\n          }\n       }\n\n\n        if (groupClientKeywordAttachments) {\n            clientKeywordDomainResults = this.getGroupAttachment(clientKeywordDomainResults, false);\n        }\n\n        if (groupContentScanningAttachments)\n        {\n            contentScanningResults = this.getGroupAttachment(contentScanningResults, true);\n        }\n\n        clientKeywordDomainResults = this.copyAndSort(clientKeywordDomainResults, `${nameof<ClientKeywordDomainResultView>(c => c.attachmentPath)}`, false);\n\n        contentScanningResults = this.copyAndSort(contentScanningResults, `${nameof<ClientKeywordDomainResultView>(c => c.attachmentPath)}`, false);\n\n        return {\n            isDlpWaiting: isDlpWaiting,\n            scanTimedOut: scanTimedOut,\n            clientKeywordDomainResults: clientKeywordDomainResults,\n            contentScanningResults: contentScanningResults,\n            contentScanningAction: currentContentScanningAction,\n            dlps: dlps,\n            countUnprotectedAttachments: countUnprotectedAttachments,\n            unprotectedAttachmentMessage: unprotectedAttachmentMessage\n        };\n    }\n\n    public copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\n        const key = columnKey as keyof T;\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\n    }\n\n    public getProcessedClientKeywordDomainResults(settings: SettingsView, clientKeywordDomainResults: ClientKeywordDomainResultView[]): ClientKeywordDomainResultView[] {\n        clientKeywordDomainResults.forEach((clientKeywordDomainResult) => {\n            switch (clientKeywordDomainResult.sourceType) {\n                case DlpResultSourceTypeEnum.Attachment:\n                    clientKeywordDomainResult.sourceTypeString = settings._stringContentScanningEmailAttachment;\n                    break;\n                case DlpResultSourceTypeEnum.Body:\n                    clientKeywordDomainResult.sourceTypeString = settings._stringContentScanningEmailContent;\n                    break;\n                case DlpResultSourceTypeEnum.Filename:\n                    clientKeywordDomainResult.sourceTypeString = settings._stringContentScanningEmailFileName;\n                    break;\n                case DlpResultSourceTypeEnum.Subject:\n                    clientKeywordDomainResult.sourceTypeString = settings._stringContentScanningEmailSubject;\n                    break;\n            }\n        });\n\n        return clientKeywordDomainResults;\n    }\n\n    public getProcessedContentScanningResults(settings: SettingsView, currentAction: ActionOnMatch, contentScanResults: ContentScanningResultView[]): IProcessedContentScanningResults {\n        contentScanResults.forEach((contentScanningResult) => {\n            currentAction = this.getContentScanningAction(currentAction, contentScanningResult.actionOnMatch);\n            switch (contentScanningResult.sourceType) {\n                case DlpResultSourceTypeEnum.Attachment:\n                    contentScanningResult.sourceTypeString = settings._stringContentScanningEmailAttachment;\n                    break;\n                case DlpResultSourceTypeEnum.Body:\n                    contentScanningResult.sourceTypeString = settings._stringContentScanningEmailContent;\n                    break;\n                case DlpResultSourceTypeEnum.Filename:\n                    contentScanningResult.sourceTypeString = settings._stringContentScanningEmailFileName;\n                    break;\n                case DlpResultSourceTypeEnum.Subject:\n                    contentScanningResult.sourceTypeString = settings._stringContentScanningEmailSubject;\n                    break;\n            }\n        });\n\n        return {\n            contentScanningResultView: contentScanResults,\n            actionOnMatch: currentAction\n        };\n    }\n\n    public getGroupByAttachments(\n        settings: SettingsView,\n        groupByAttachments: GroupByAttachments,\n        dlpItemResults: DlpItemResultView[]\n    ): GroupByAttachments {\n        dlpItemResults.forEach((item) => {\n            if (item.isAttachment) {\n                groupByAttachments.countTotalAttachmentsScanned++;\n            }\n\n            groupByAttachments.countTotalClientKeyword += item.clientKeywordDomainResults.length;\n            item.clientKeywordDomainResults.forEach((ck) => {\n                groupByAttachments.countTotalClientKeywordMatches += ck.matchCount;\n            });\n\n            groupByAttachments.countTotalContentScanning += item.contentScanResults.length;\n            item.contentScanResults.forEach((cs) => {\n                groupByAttachments.countTotalContentScanningMatches += cs.matchCount;\n            });\n        });\n\n        groupByAttachments.groupByClientKeywordAttachments = groupByAttachments.groupByClientKeywordAttachments ? true : groupByAttachments.countTotalClientKeyword > settings._contentScanningMaxNrMatchesBeforeTryingToGroupByAttachment;\n        groupByAttachments.groupByContentScanningAttachments = groupByAttachments.groupByContentScanningAttachments ? true : groupByAttachments.countTotalContentScanning > settings._contentScanningMaxNrMatchesBeforeTryingToGroupByAttachment;\n\n        if (groupByAttachments.groupByClientKeywordAttachments) {\n            groupByAttachments.groupByClientKeywordAttachmentsText = stringFormat(settings._stringContentScanningTooManyMatches, `${groupByAttachments.countTotalClientKeywordMatches}`, `${groupByAttachments.countTotalAttachmentsScanned}`);\n        }\n\n        if (groupByAttachments.groupByContentScanningAttachments) {\n            groupByAttachments.groupByContentScanningAttachmentsText = stringFormat(settings._stringContentScanningTooManyMatches, `${groupByAttachments.countTotalContentScanningMatches}`, `${groupByAttachments.countTotalAttachmentsScanned}`);\n        }\n\n        return groupByAttachments;\n    }\n}\n\nexport const appUtils = new AppUtils();","/*global Office */  //Required for this to be found.  see: https://github.com/OfficeDev/office-js-docs-pr/issues/691\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport '@fluentui/react/dist/css/fabric.min.css';\nimport * as React from 'react';\nimport { Label } from '@fluentui/react/lib/Label';\nimport { DefaultButton } from '@fluentui/react/lib/Button';\nimport { ApiResponseView } from './Backend/BackendTypes'\nimport { Modules } from '../LogConfiguration';\nimport { safeSendLogging } from '../lib/Logger';\nimport { IStackTokens, Panel, PanelType, Separator, Stack } from '@fluentui/react';\nimport { StorageDatatype, storageUtils } from '../lib/Utils';\nimport LostConnectionPage from './LostConnectionPage';\n\nconst logger = safeSendLogging.getLogger(Modules.SafeSend_OfficeDialog);\n\nconst stackToken: IStackTokens = {\n    padding: \"0px 0px 0px 50px\",\n};\n\nexport interface ForbiddenRecipientDialogProps {\n    dialogId: string;\n    apiResponseView: ApiResponseView;\n}\n\nexport interface ForbiddenRecipientDialogState {\n    isConnectionLost: boolean;\n}\n\nexport default class ForbiddenRecipientDialog extends React.Component<ForbiddenRecipientDialogProps, ForbiddenRecipientDialogState>{\n    sendEvent: any;\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            isConnectionLost: false\n        }\n        this.closeDialog = this.closeDialog.bind(this);\n    }\n\n    componentDidMount() {\n        this.setDialogTimeout(240);\n\n        window.addEventListener(\"storage\", () => {\n            let dialogId = storageUtils.localGet(StorageDatatype.DialogId) as string;\n            if (this.props.dialogId !== dialogId) {\n                this.setState({\n                    isConnectionLost: true\n                });\n            }\n        });\n    }\n\n    closeDialog() {\n        let dialogValues = JSON.stringify({ send: false, encrypt: false });\n        Office.context.ui.messageParent(dialogValues);\n    }\n\n    setDialogTimeout(timeoutSeconds: number) {\n        var timeoutMs = timeoutSeconds * 1000;\n        setTimeout(dialogTimeout, timeoutMs);\n        function dialogTimeout() {\n            logger.info(\"Dialog timeout reached, closing dialog.\");\n            Office.context.ui.messageParent(JSON.stringify({ send: false, encrypt: false }));\n        }\n    }\n\n    render() {\n        let recipients: string[] = [];\n        let i = 0;\n        for (; i++; i < this.props.apiResponseView.onSendProcessContex.forbiddenRecipients.length && i < 10) {\n            let x = this.props.apiResponseView.onSendProcessContex.forbiddenRecipients[i];\n            let name = x.name + (x.isList ? \" (\" + this.props.apiResponseView.onSendProcessContex.settings._stringMainListIdentifier + \")\" : \"\");\n            recipients.push(name);\n        }\n\n        const onRenderFooterContent = () => (\n            <Stack horizontal reversed={this.props.apiResponseView.alignRightToLeft} id=\"child\" style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"flex-end\" }}>\n                <Stack>\n                </Stack>\n                <Stack horizontal reversed={this.props.apiResponseView.alignRightToLeft} id=\"child\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <Separator vertical={true} />\n                    <DefaultButton onClick={() => this.closeDialog()}\n                        text={this.props.apiResponseView.onSendProcessContex?.settings._stringMainCancelButton} />\n                </Stack>\n            </Stack>\n        )\n\n        return (\n            <>\n                {\n\t\t\t\t\tthis.state.isConnectionLost &&\n\t\t\t\t\t<LostConnectionPage />\n                }\n                {\n                    !this.state.isConnectionLost &&\n                    <Panel\n                        isOpen={true}\n                        type={PanelType.smallFluid}\n                        onRenderFooterContent={onRenderFooterContent}\n                        hasCloseButton={false}\n                        headerText={this.props.apiResponseView.onSendProcessContex.confirmationFlags?.mainTitle}\n                        isFooterAtBottom={true}\n                    >\n                        <Label>{this.props.apiResponseView.onSendProcessContex.settings._stringForbiddenRecipientTitle}</Label>\n                        {\n                            this.props.apiResponseView.onSendProcessContex.forbiddenRecipients.length === 1 && \n                            <Label>{this.props.apiResponseView.onSendProcessContex.settings._stringForbiddenRecipient}</Label>\n                        }\n                        {\n                            this.props.apiResponseView.onSendProcessContex.forbiddenRecipients.length !== 1 &&\n                            <Label>{this.props.apiResponseView.onSendProcessContex.settings._stringForbiddenRecipients}</Label>\n                        }\n                        {\n                            <Stack tokens={stackToken}>\n                                {\n                                    this.props.apiResponseView.onSendProcessContex.forbiddenRecipients.slice(0, 10).map((fr, i) => {\n                                        return (<Label key={i}>{fr.name + (fr.isList ? ` (${this.props.apiResponseView.onSendProcessContex.settings._stringMainListIdentifier})` : \"\")}</Label>)\n                                    })\n                                }\n                                {\n                                    this.props.apiResponseView.onSendProcessContex.forbiddenRecipients.length > 10 &&\n                                    <Label>...</Label>\n                                }\n                            </Stack>\n                        }\n                    </Panel>\n                }\n            </>\n        );\n    }\n}\n","import * as React from 'react';\nimport { mergeStyleSets, Spinner, SpinnerSize, Stack } from '@fluentui/react';\nimport { Text } from '@fluentui/react/lib/Text';\n\nconst classNames = mergeStyleSets({\n    mainSpinner: {\n        width: '100px',\n        height: '100px'\n    },\n    box: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%'\n    }\n});\n\nexport interface OutlookSpinnerProps {\n    message: string\n}\n\nexport default class OutlookSpinner extends React.Component<OutlookSpinnerProps> {\n    render() {\n        return (\n            <>\n                <Stack className={classNames.box}>\n                    <div className=\"ms-BrandIcon--icon48 ms-BrandIcon--outlook\"></div>\n\t\t\t\t\t<Spinner size={SpinnerSize.large} className={classNames.mainSpinner} />\n\t\t\t\t\t<Text variant={'medium'} block>{this.props.message}</Text>\n                </Stack>\n            </>\n        );\n    }\n}","var prefix = \"SafeSend:\";\n\nexport class NotificationLogger {\n    public infoReplace(mailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined, id: string, message: string): void {\n        mailboxItem?.notificationMessages.replaceAsync(id, this.getJsonMessage(Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage, message));\n    }\n\n    public errorReplace(mailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined, id: string, message: string): void {\n        mailboxItem?.notificationMessages.replaceAsync(id, this.getJsonMessage(Office.MailboxEnums.ItemNotificationMessageType.ErrorMessage, message));\n    }\n\n    public progressReplace(mailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined, id: string, message: string): void {\n        mailboxItem?.notificationMessages.replaceAsync(id, this.getJsonMessage(Office.MailboxEnums.ItemNotificationMessageType.ProgressIndicator, message));\n    }\n\n    public remove(mailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined, id: string): void {\n        mailboxItem?.notificationMessages.removeAsync(id);\n    }\n\n    private getJsonMessage(type: Office.MailboxEnums.ItemNotificationMessageType, message: string): Office.NotificationMessageDetails {\n        if (type === Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage) {\n            return { type: type, message: `${prefix} ${message}`, icon: \"iconid\", persistent: false }\n        }\n\n        return { type: type, message: `${prefix} ${message}` }\n    }\n}\n\nexport const notificationLogger = new NotificationLogger();","/* global Office */  //Required for this to be found.  see: https://github.com/OfficeDev/office-js-docs-pr/issues/691\n//import 'office-js';\nimport * as signalR from '@microsoft/signalr';\nimport { notificationLogger } from './NotificationMessage';\nimport { Modules } from '../LogConfiguration';\nimport { safeSendLogging } from './Logger';\nimport { ConnectionError, restClient, UnauthorizedError } from '../RestClient';\nimport { ApiResponseView, ConfirmInfo, EmailInfo, EmailRecipient, LicenseKeyStatus, LoginModel, OutlookAttachment, PlatformConfig, RecipientSendType, SignalRAddInHubMethods } from '../components/Backend/BackendTypes';\nimport { SignalRHubType, StorageDatatype, storageUtils } from './Utils';\nimport { DialogValues } from '../components/OfficeDialog';\nimport { LoginResult, LoginResultStatus } from '../components/Login/LoginTypes';\n\nconst logger = safeSendLogging.getLogger(Modules.SafeSend_AddIn);\nvar globalMailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined\nvar globalAppInfo: { host: Office.HostType, platform: Office.PlatformType };\nvar globalEmailData: IEmailSettings;\nvar globalSendEvent: any;\nvar globalAddInDialogInstance: Office.Dialog | null = null;\nvar globalLoginDialogInstance: Office.Dialog | null = null;\nvar globalRetryAttempt: number = 0;\nvar globalMaxRetryAttempt: number = 1;\nvar globalApiResponseView: ApiResponseView;\nvar globalIsCurrentWorkflowRestarting = false;\nvar globalPlatformConfig: PlatformConfig = {\n\tattachmentSizeThreshold: 0,\n\tenabled: false,\n\tisOffice365: false,\n\tretryOnServerConnectionReset: 0\n}\n\n//Initialization of the Office.js library\nOffice.onReady(function (info) {\n\tif (Office.context.mailbox === undefined) {\n\t\treturn;\n\t}\n\n\tglobalAppInfo = info;\n\tglobalMailboxItem = Office.context.mailbox.item;\n\tnotificationLogger.infoReplace(globalMailboxItem, \"i1\", \"Initialized\");\n});\n\ninterface IEmailSettings {\n\titemId: string,\n\toutlookToken: string;\n}\n\nexport function setSubjectAsync(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined,\n\tnewSubject: string,\n): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tmailboxItem?.subject.setAsync(newSubject, { asyncContext: {} }, (asyncResult) => {\n\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse {\n\t\t\t\treject();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function setBodyAsync(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined,\n\tnewBody: string,\n\tcoercionType: Office.CoercionType\n): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tmailboxItem?.body.setAsync(newBody, { coercionType: coercionType, asyncContext: {} }, (asyncResult) => {\n\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.error(JSON.stringify(asyncResult.error));\n\t\t\t\treject();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport async function processOnSendEvent(sendEvent) {\n\ttry {\n\t\tglobalSendEvent = sendEvent;\n\t\tlet dialogId = Math.random().toString(36).substr(2, 9);\n\t\tstorageUtils.localSet(StorageDatatype.DialogId, dialogId);\n\t\tlogger.debug(\"1. On-Send throwed\");\n\n\t\tlet responsePlatform = await restClient.getPlatformInfo(globalAppInfo.platform);\n\t\tif (responsePlatform.content == null) {\n\t\t\tlogger.info(`responsePlatform.content is null`);\n\t\t\treturn;\n\t\t}\n\n\t\tglobalPlatformConfig = responsePlatform.content;\n\t\tif (!globalPlatformConfig?.enabled) {\n\t\t\tlogger.info(`${globalAppInfo.platform} platform disabled`);\n\t\t\tprocessSendEmail(sendEvent);\n\t\t\treturn;\n\t\t}\n\n\t\tnotificationLogger.infoReplace(globalMailboxItem, \"i1\", \"Verifying...\");\n\t\tglobalEmailData = await saveItemAndGetOutlookTokenAsync(responsePlatform.content.isOffice365, globalMailboxItem);\n\t\tlet success = true;\n\t\tif (responsePlatform.content.isOffice365) {\n\t\t\ttry {\n\t\t\t\tglobalEmailData.outlookToken = await getOutlookTokenAsync();\n\t\t\t\tlogger.info(\"Authenticating...\");\n\t\t\t} catch (e) {\n\t\t\t\tlogger.error(JSON.stringify(e));\n\t\t\t\tsuccess = false;\n\t\t\t\tif (storageUtils.localExists(StorageDatatype.OutlookAccessToken)) {\n\t\t\t\t\tlet outlookAccesToken: string = storageUtils.localGet(StorageDatatype.OutlookAccessToken);\n\t\t\t\t\tvar splits = outlookAccesToken.split(\".\");\n\t\t\t\t\tlet expiration: number = JSON.parse(atob(splits[1])).exp;\n\t\t\t\t\tlet current: number = Math.round(new Date().getTime() / 1000);\n\t\t\t\t\tif (current < expiration) {\n\t\t\t\t\t\tlogger.info(\"Authenticating (cache)...\");\n\t\t\t\t\t\tglobalEmailData.outlookToken = outlookAccesToken;\n\t\t\t\t\t\tawait processEmail();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.info(\"Authenticating (dialog)...\");\n\t\t\t\t\t\tshowLoginDialog();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tshowLoginDialog();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (success) {\n\t\t\tawait processEmail();\n\t\t}\n\t} catch (e) {\n\t\tlogger.error(JSON.stringify(e));\n\t\tif (e instanceof UnauthorizedError) {\n\t\t\tawait workflowOnConnectionError();\n\t\t} else {\n\t\t\tawait onConnectionError();\n\t\t}\n\t}\n}\n\nexport async function getSignalRConnection(authToken: string, signalRHubType: SignalRHubType): Promise<signalR.HubConnection> {\n\tvar connection = new signalR.HubConnectionBuilder().withUrl(signalRHubType, { accessTokenFactory: () => authToken }).build();\n\tawait connection.start();\n\tlogger.info(`${signalRHubType} communication started`);\n\n\treturn connection;\n}\n\nexport async function workflowOnConnectionError() {\n\tif (globalIsCurrentWorkflowRestarting) {\n\t\tlogger.info(\"Current workflow is restarting...\");\n\t\treturn;\n\t} else {\n\t\tglobalIsCurrentWorkflowRestarting = true;\n\t\tawait onConnectionError();\n\t}\n}\n\nasync function onConnectionError() {\n\tlet isAddInDialogOpen = globalAddInDialogInstance !== null;\n\ttryCloseDialogs();\n\tif (globalRetryAttempt < globalMaxRetryAttempt) {\n\t\tswitch (globalPlatformConfig.retryOnServerConnectionReset) {\n\t\t\tcase 0:\n\t\t\t\tsendingEmailBecauseOfError();\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tif (isAddInDialogOpen) {\n\t\t\t\t\tsendingEmailBecauseOfError();\n\t\t\t\t} else {\n\t\t\t\t\tawait retryConnection();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tawait retryConnection();\n\t\t\t\tbreak;\n\t\t}\n\t} else {\n\t\tsendingEmailBecauseOfError();\n\t}\n}\n\nasync function retryConnection() {\n\tglobalRetryAttempt++;\n\tlogger.warn(`Connectivity issues, retry connection attempt: (${globalRetryAttempt} of ${globalMaxRetryAttempt})`);\n\tnotificationLogger.remove(globalMailboxItem, \"i1\");\n\tnotificationLogger.progressReplace(globalMailboxItem, \"p1\", \"We are experiencing connectivity issues. Retrying.\");\n\tawait processOnSendEvent(globalSendEvent);\n}\n\nfunction tryCloseDialogs() {\n\tif (globalLoginDialogInstance !== null) {\n\t\tglobalLoginDialogInstance.close();\n\t\tglobalLoginDialogInstance = null;\n\t}\n\n\tif (globalAddInDialogInstance !== null) {\n\t\tglobalAddInDialogInstance.close();\n\t\tglobalAddInDialogInstance = null;\n\t}\n}\n\nfunction showLoginDialog() {\n\tOffice.context.ui.displayDialogAsync(`${window.location.origin}/login`, { height: 60, width: 30 }, loginDialogCallback);\n}\n\nfunction loginDialogCallback(asyncResult: Office.AsyncResult<Office.Dialog>) {\n\tif (asyncResult.status === Office.AsyncResultStatus.Failed) {\n\t\tswitch (asyncResult.error.code) {\n\t\t\tcase 12004:\n\t\t\t\tlogger.info(\"Domain is not trusted\");\n\t\t\t\tbreak;\n\t\t\tcase 12005:\n\t\t\t\tlogger.info(\"HTTPS is required\");\n\t\t\t\tbreak;\n\t\t\tcase 12007:\n\t\t\t\tlogger.info(\"A dialog is already opened.\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.error(asyncResult.error.message);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tnotificationLogger.remove(globalMailboxItem, \"i1\");\n\t\tnotificationLogger.errorReplace(globalMailboxItem, \"e1\", \"Unable to successfully authenticate user\");\n\t\tprocessSendEmail(globalSendEvent, false);\n\t}\n\telse {\n\t\tglobalLoginDialogInstance = asyncResult.value;\n\t\tglobalLoginDialogInstance.addEventHandler(Office.EventType.DialogMessageReceived, loginDialogEventHandler);\n\t\tglobalLoginDialogInstance.addEventHandler(Office.EventType.DialogEventReceived, loginDialogEventHandler);\n\t}\n}\n\nasync function loginDialogEventHandler(arg) {\n\tglobalLoginDialogInstance?.close();\n\tlet isError: boolean = arg.error\t\n\tswitch (arg.error) {\n\t\tcase 12002:\n\t\t\tlogger.warn(\"Cannot load URL, no such page or bad URL syntax.\");\n\t\t\tbreak;\n\t\tcase 12003:\n\t\t\tlogger.warn(\"HTTPS is required.\");\n\t\t\tbreak;\n\t\tcase 12006:\n\t\t\t// The dialog was closed, typically because the user the pressed X button.\n\t\t\tlogger.info(\"Dialog closed by user\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\tif (isError) {\n\t\tnotificationLogger.remove(globalMailboxItem, \"i1\");\n\t\tnotificationLogger.errorReplace(globalMailboxItem, \"e1\", \"Unable to successfully authenticate user\");\n\t\tprocessSendEmail(globalSendEvent, false);\n\t} else {\n\t\tlet loginResults = JSON.parse(arg.message) as LoginResult;\n\t\tif (loginResults.status === LoginResultStatus.Succeeded) {\n\t\t\tglobalEmailData.outlookToken = loginResults.accessToken\n\t\t\tstorageUtils.localSet(StorageDatatype.OutlookAccessToken, globalEmailData.outlookToken);\n\n\t\t\tawait processEmail();\n\t\t} else {\n\t\t\tlogger.error(loginResults.error);\n\t\t\tnotificationLogger.remove(globalMailboxItem, \"i1\");\n\t\t\tnotificationLogger.errorReplace(globalMailboxItem, \"e1\", \"Unable to successfully authenticate user\");\n\t\t\tprocessSendEmail(globalSendEvent, false);\n\t\t}\n\t}\n}\n\nasync function processEmail() {\n\tlet login = await getAuthenticationToken(globalSendEvent, globalEmailData.outlookToken);\n\tif (login == null) {\n\t\treturn;\n\t}\n\n\tlet isClientSideGetAttachmentSupported = isSetSupported(\"1.8\");\n\tlet emailInfo = await getEmailInfo(globalEmailData.itemId, isClientSideGetAttachmentSupported, globalAppInfo.platform);\n\tif (isClientSideGetAttachmentSupported && login.isDlpLicenseValid && emailInfo.attachments !== null && emailInfo.attachments.length > 0) {\n\t\ttry {\n\t\t\tlet addInSignalRConnection = await getSignalRConnection(login.token, SignalRHubType.AddinHub);\n\t\t\temailInfo.connectionAddInId = addInSignalRConnection.connectionId;\n\t\t\tawait configureAddInSignalR(globalMailboxItem, login.token, addInSignalRConnection);\n\t\t} catch (error) {\n\t\t\tthrow new ConnectionError(`${SignalRHubType.AddinHub} error: ${JSON.stringify(error)}`);\n\t\t}\n\t}\n\n\tlet responseMail = await restClient.processMail(login.token, emailInfo);\n\tif (responseMail.content === null) {\n\t\tprocessSendEmail(globalSendEvent);\n\t\treturn;\n\t}\n\n\tglobalApiResponseView = responseMail.content\n\tshowAddInDialog(globalMailboxItem, globalSendEvent, globalApiResponseView, login.token);\n}\n\nasync function showAddInDialog(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined,\n\tsendEvent: any,\n\tapiResponse: ApiResponseView,\n\tauthToken: string\n) {\n\tlogger.debug(\"2. Add-In callback\");\n\tif (apiResponse.onSendProcessContex?.forbiddenRecipients?.length > 0) {\n\t\tnotificationLogger.infoReplace(mailboxItem, \"i1\", 'Forbidden recipients found');\n\t}\n\telse {\n\t\tif (!(apiResponse.onSendProcessContex?.confirmationRequired || (apiResponse.onSendProcessContex?.scanStarted && !apiResponse.onSendProcessContex?.scanCompleted))) {\n\t\t\tstorageUtils.localRemove(StorageDatatype.ApiResponse);\n\t\t\tawait postProcess(mailboxItem, sendEvent, authToken, { send: true, encrypt: false, showEncryptPrompt: false });\n\t\t\tlogger.info(\"Email sent, no unsafe items found\");\n\t\t\treturn;\n\t\t}\n\n\t\tnotificationLogger.infoReplace(mailboxItem, \"i1\", 'External recipients found');\n\t}\n\n\tstorageUtils.localSet(StorageDatatype.ApiResponse, JSON.stringify(apiResponse));\n\tstorageUtils.localSet(StorageDatatype.SafeSendToken, authToken);\n\n\tlogger.debug(`3. Show SafeSend dialog`);\n\tOffice.context.ui.displayDialogAsync(window.location.origin + \"/dialog\", getAddInDialogOptions(apiResponse), addInDialogCallback)\n}\n\nfunction getAddInDialogOptions(apiResponse: ApiResponseView): Office.DialogOptions {\n\tlet maxWidth = 80;\n\tlet maxHeight = 70;\n\tlet forbiddenRecipientsLength = apiResponse.onSendProcessContex?.forbiddenRecipients?.length;\n\tif (forbiddenRecipientsLength > 0) {\n\t\tmaxWidth = 40;\n\t\tmaxHeight = forbiddenRecipientsLength > 10 ? 40 : forbiddenRecipientsLength * 3;\n\t\tmaxHeight = maxHeight + 25;\n\t}\n\n\treturn {\n\t\tasyncContext: apiResponse,\n\t\tdisplayInIframe: true,\n\t\theight: maxHeight,\n\t\tpromptBeforeOpen: false,\n\t\twidth: maxWidth\n\t}\n}\n\nfunction addInDialogCallback(asyncResult: Office.AsyncResult<Office.Dialog>) {\n\tlogger.debug(\"4. SafeSend dialog callback\");\n\tif (asyncResult.status === Office.AsyncResultStatus.Failed) {\n\t\t// In addition to general system errors, there are 3 specific errors for \n\t\t// displayDialogAsync that you can handle individually.\n\t\tswitch (asyncResult.error.code) {\n\t\t\tcase 12004:\n\t\t\t\tlogger.info(\"Domain is not trusted\");\n\t\t\t\tbreak;\n\t\t\tcase 12005:\n\t\t\t\tlogger.info(\"HTTPS is required\");\n\t\t\t\tbreak;\n\t\t\tcase 12007:\n\t\t\t\tlogger.info(\"A dialog is already opened.\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.error(asyncResult.error.message);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\telse {\n\t\tglobalAddInDialogInstance = asyncResult.value;\n\t\tglobalApiResponseView = asyncResult.asyncContext as ApiResponseView;\n\n\t\t/*Messages are sent by developers programatically from the dialog using office.context.ui.messageParent(...)*/\n\t\tglobalAddInDialogInstance.addEventHandler(Office.EventType.DialogMessageReceived, addInDialogEventHandler);\n\n\t\t/*Events are sent by the platform in response to user actions or errors. For example, the dialog is closed via the 'x' button*/\n\t\tglobalAddInDialogInstance.addEventHandler(Office.EventType.DialogEventReceived, addInDialogEventHandler);\n\t}\n}\n\nasync function addInDialogEventHandler(arg) {\n\tlogger.debug(\"5. SafeSend dialog event handler\");\n\tglobalAddInDialogInstance?.close();\n\tlet authToken: string = storageUtils.localGet(StorageDatatype.SafeSendToken) as string;\n\t// In addition to general system errors, there are 2 specific errors \n\t// and one event that you can handle individually.\n\tswitch (arg.error) {\n\t\tcase 12002:\n\t\t\tlogger.warn(\"Cannot load URL, no such page or bad URL syntax.\");\n\t\t\tbreak;\n\t\tcase 12003:\n\t\t\tlogger.warn(\"HTTPS is required.\");\n\t\t\tbreak;\n\t\tcase 12006:\n\t\t\t// The dialog was closed, typically because the user the pressed X button.\n\t\t\tlogger.info(\"Dialog closed by user\");\n\t\t\ttry {\n\t\t\t\tawait postProcess(globalMailboxItem, globalSendEvent, authToken, { send: false, encrypt: false, showEncryptPrompt: false });\n\t\t\t} catch (e) {\n\t\t\t\tlogger.error(JSON.stringify(e));\n\t\t\t\tsendingEmailBecauseOfError();\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tlet dialogValues = JSON.parse(arg.message) as DialogValues;\n\t\t\ttry {\n\t\t\t\tawait postProcess(globalMailboxItem, globalSendEvent, authToken, dialogValues);\n\t\t\t} catch (e) {\n\t\t\t\tlogger.error(JSON.stringify(e));\n\t\t\t\tsendingEmailBecauseOfError();\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tstorageUtils.localRemove(StorageDatatype.SafeSendToken);\n\tif (globalApiResponseView.onSendProcessContex.scanStarted && !globalApiResponseView.onSendProcessContex.scanCompleted) {\n\t\tlet response = await restClient.cancelDlp(authToken);\n\t\tif (!response.isSuccessStatusCode) {\n\t\t\tsendingEmailBecauseOfError();\n\t\t}\n\t}\n}\n\nasync function postProcess(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined,\n\tsendEvent: any,\n\tauthToken: string,\n\tdialogValues: DialogValues\n): Promise<void> {\n\tnotificationLogger.remove(mailboxItem, \"i1\");\n\tlet confirmInfo = getConfirmInfo(dialogValues);\n\tif (dialogValues.send) {\n\t\tnotificationLogger.progressReplace(mailboxItem, \"i1\", \"Sending the email.\");\n\t\tlet response = await restClient.postProcess(authToken, confirmInfo);\n\n\t\tlet onSendPostProcessContextView = response.content;\n\t\tif (onSendPostProcessContextView !== null) {\n\t\t\tif (globalApiResponseView.onSendProcessContex.settings._footerEnabled && !onSendPostProcessContextView.shouldCancelSendEvent && (globalAppInfo.platform === Office.PlatformType.OfficeOnline || globalAppInfo.platform === Office.PlatformType.PC)) {\n\t\t\t\tif (globalApiResponseView.onSendProcessContex.mailItem.hasHtmlBody) {\n\t\t\t\t\tlet htmlBody: string = globalApiResponseView.onSendProcessContex.mailItem.htmlBody;\n\t\t\t\t\tif (htmlBody.includes(\"<body>\")) {\n\t\t\t\t\t\tonSendPostProcessContextView.footerText += \"</body>\";\n\t\t\t\t\t\thtmlBody = htmlBody.replace(\"</body>\", onSendPostProcessContextView.footerText);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thtmlBody += onSendPostProcessContextView.footerText;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait setBodyAsync(mailboxItem, htmlBody, Office.CoercionType.Html);\n\t\t\t\t} else {\n\t\t\t\t\tlet textBody: string = globalApiResponseView.onSendProcessContex.mailItem.body;\n\t\t\t\t\ttextBody += onSendPostProcessContextView.footerText;\n\t\t\t\t\tawait setBodyAsync(mailboxItem, textBody, Office.CoercionType.Text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (onSendPostProcessContextView.subjectPrefix != null) {\n\t\t\t\tawait setSubjectAsync(mailboxItem, `${onSendPostProcessContextView.subjectPrefix} ${globalApiResponseView.onSendProcessContex.mailItem.subject}`);\n\t\t\t}\n\t\t\t\n\t\t\tprocessSendEmail(sendEvent, !onSendPostProcessContextView.shouldCancelSendEvent);\n\t\t}\n\t} else {\t\t\n\t\tprocessSendEmail(sendEvent, false);\n\t\tlet response = await restClient.postProcess(authToken, confirmInfo);\n\t\tif (!response.isSuccessStatusCode) {\n\t\t\tlogger.error(response.errorMessage);\n\t\t}\n\t}\n}\n\nfunction getConfirmInfo(dialogValues: DialogValues): ConfirmInfo {\n\tlet confirmInfo: ConfirmInfo = {\n\t\titemId: globalApiResponseView.onSendProcessContex.mailItem.itemId,\n\t\tclientLanguage: Office.context.displayLanguage,\n\t\tsendConfirmed: dialogValues.send,\n\t\tshouldTriggerEncryption: dialogValues.encrypt,\n\t\tshowEncryptPrompt: dialogValues.showEncryptPrompt,\n\t\tconfirmationRequired: globalApiResponseView.onSendProcessContex.confirmationRequired,\n\t\thasForbiddenRecipients: globalApiResponseView.onSendProcessContex.hasForbiddenRecipients,\n\t\tsendCanceled: globalApiResponseView.onSendProcessContex.sendCanceled,\n\t\tmailItemType: globalApiResponseView.onSendProcessContex.mailItem.itemType,\n\t\thasHtmlBody: globalApiResponseView.onSendProcessContex.mailItem.hasHtmlBody\n\t}\n\n\treturn confirmInfo;\n}\n\nfunction configureAddInSignalR(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined,\n\tauthToken: string,\n\tconnection: signalR.HubConnection\n): void {\n\tconnection.onclose(async error => {\n\t\tlogger.error(`${SignalRHubType.AddinHub} error: ${JSON.stringify(error)}`);\n\t\tawait workflowOnConnectionError();\n\t});\n\n\tconnection.on(SignalRAddInHubMethods.ReceiveGetAttachmentContent, async (attachment: OutlookAttachment) => {\n\t\tlogger.debug(`${SignalRAddInHubMethods.ReceiveGetAttachmentContent} \"${attachment.name}\"`);\n\t\tattachment = await getAttachmentContentAsync(mailboxItem, attachment)\n\t\tawait restClient.sendAttachmentContent(authToken, attachment);\n\t});\n}\n\nfunction sendingEmailBecauseOfError() {\n\tlet message = \"We are experiencing connectivity issues. Sending the email.\";\n\tlogger.error(message);\n\tnotificationLogger.remove(globalMailboxItem, \"i1\");\n\tnotificationLogger.remove(globalMailboxItem, \"p1\");\n\tnotificationLogger.errorReplace(globalMailboxItem, \"e1\", message);\n\tsetTimeout(() => { processSendEmail(globalSendEvent, true); }, 3000);\n}\n\nasync function getEmailInfo(itemId: string, isClientSideGetAttachmentSupported: boolean, platformType: Office.PlatformType): Promise<EmailInfo> {\n\tnotificationLogger.infoReplace(globalMailboxItem, \"i1\", \"Validating email...\");\n\tlet emailInfo: EmailInfo = {\n\t\titemId: itemId,\n\t\titemType: globalMailboxItem?.itemType,\n\t\tsubject: null,\n\t\tbodyType: \"\",\n\t\tbody: null,\n\t\ttoEmails: [],\n\t\tccEmails: [],\n\t\tbccEmails: [],\n\t\tattachments: null,\n\t\tclientLanguage: Office.context.displayLanguage,\n\t\tplatformType: platformType,\n\t\tconnectionAddInId: \"\",\n\t\tisClientSideGetAttachmentSupported: isClientSideGetAttachmentSupported\n\t}\n\n\tlet toTemp = getRecipientsFromMailboxItem(globalMailboxItem, RecipientSendType.TO) as Office.Recipients | Office.Recipients & Office.EmailAddressDetails[];\n\tlet ccTemp = getRecipientsFromMailboxItem(globalMailboxItem, RecipientSendType.CC) as Office.Recipients | Office.Recipients & Office.EmailAddressDetails[];\n\tlet bccTemp = getRecipientsFromMailboxItem(globalMailboxItem, RecipientSendType.BCC) as Office.Recipients | Office.Recipients & Office.EmailAddressDetails[];\n\tif (bccTemp !== null) {\n\t\temailInfo.bccEmails = await getRecipientsAsync(bccTemp, RecipientSendType.BCC);\n\t}\n\n\tif (isClientSideGetAttachmentSupported) {\n\t\temailInfo.attachments = await getAttachmentsAsync(globalMailboxItem);\n\t}\n\n\temailInfo.bodyType = await getBodyTypeAsync(globalMailboxItem);\n\tlet [to, cc, subject, body] = await Promise.all([\n\t\tgetRecipientsAsync(toTemp, RecipientSendType.TO),\n\t\tgetRecipientsAsync(ccTemp, RecipientSendType.CC),\n\t\tgetSubjectAsync(globalMailboxItem),\n\t\tgetBodyAsync(globalMailboxItem, emailInfo.bodyType)\n\t]);\n\n\temailInfo.toEmails = to;\n\temailInfo.ccEmails = cc;\n\temailInfo.subject = subject;\n\temailInfo.body = body;\n\tlet embeddedAttachments = getEmbeddedAttachments(emailInfo.body);\n\temailInfo.attachments = emailInfo.attachments?.concat(embeddedAttachments)!;\n\n\treturn emailInfo;\n}\n\nasync function getAuthenticationToken(sendEvent, outlookToken: string): Promise<LoginModel | null>{\n\ttry {\n\t\tlet responseLogin = await restClient.login(outlookToken);\n\t\treturn responseLogin.content;\n\t} catch (error) {\n\t\tlogger.error(JSON.stringify(error));\n\t\tif (error instanceof UnauthorizedError) {\n\t\t\tlet unauthorizedError = error as UnauthorizedError<LoginModel>\t\t\t\n\t\t\tswitch (unauthorizedError.response?.data.licenseKeyStatus) {\n\t\t\t\tcase LicenseKeyStatus.Invalid:\n\t\t\t\t\tnotificationLogger.errorReplace(globalMailboxItem, \"i1\", \"Invalid license\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase LicenseKeyStatus.TrialExpired:\n\t\t\t\t\tnotificationLogger.errorReplace(globalMailboxItem, \"i1\", \"Expired trial license\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase LicenseKeyStatus.LicenseExpired:\n\t\t\t\t\tnotificationLogger.errorReplace(globalMailboxItem, \"i1\", \"Expired license\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsetTimeout(() => { processSendEmail(sendEvent); }, 2000);\n\t\t} else {\n\t\t\tthrow (error);\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction processSendEmail(sendEvent: any, send: boolean = true) {\n\tsendEvent.completed({ allowEvent: send });\n}\n\nfunction isSetSupported(set: string): boolean {\n\tlet isSetSupported = Office.context.requirements.isSetSupported(\"Mailbox\", set);\n\tlogger.info(`Set ${set} ${isSetSupported ? \"is supported\" : \"is NOT supported\"}`);\n\n\treturn isSetSupported;\n}\n\nfunction getRecipientsFromMailboxItem(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined,\n\trecipientType: RecipientSendType\n): Office.Recipients | Office.Recipients & Office.EmailAddressDetails[] | null | undefined {\n\tswitch (recipientType) {\n\t\tcase RecipientSendType.TO:\n\t\t\treturn mailboxItem?.itemType === Office.MailboxEnums.ItemType.Message ? mailboxItem.to : mailboxItem?.requiredAttendees;\n\t\tcase RecipientSendType.CC:\n\t\t\treturn mailboxItem?.itemType === Office.MailboxEnums.ItemType.Message ? mailboxItem.cc : mailboxItem?.optionalAttendees;\n\t\tcase RecipientSendType.BCC:\n\t\t\treturn mailboxItem?.itemType === Office.MailboxEnums.ItemType.Message ? mailboxItem.bcc : null;\n\t}\n\n\treturn undefined;\n}\n\nfunction getRecipientsAsync(\n\trecipients: Office.Recipients | Office.Recipients & Office.EmailAddressDetails[],\n\trecipientType: RecipientSendType\n): Promise<EmailRecipient[]> {\n\treturn new Promise((resolve, reject) => {\n\t\trecipients.getAsync((asyncResult) => {\n\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\tlet recipientTemp: EmailRecipient[] = asyncResult.value.map((recipient) => (\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 0,\n\t\t\t\t\t\temailAddress: recipient.emailAddress,\n\t\t\t\t\t\tname: recipient.displayName,\n\t\t\t\t\t\tisAddressTypeSupported: false,\n\t\t\t\t\t\tisExchangeDistributionList: recipient.recipientType === Office.MailboxEnums.RecipientType.DistributionList,\n\t\t\t\t\t\tisOutlookDistributionList: false,\n\t\t\t\t\t\tmembers: [],\n\t\t\t\t\t\tsendable: true,\n\t\t\t\t\t\tsendType: recipientType\n\t\t\t\t\t}\n\t\t\t\t))\n\n\t\t\t\tresolve(recipientTemp);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treject(asyncResult.error.message);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getSubjectAsync(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined\n): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tmailboxItem?.subject.getAsync((asyncResult) => {\n\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\tresolve(asyncResult.value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treject(asyncResult.error.message);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getBodyTypeAsync(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined\n): Promise<Office.CoercionType> {\n\treturn new Promise((resolve, reject) => {\n\t\tmailboxItem?.body.getTypeAsync({ asyncContext: null }, function (asyncResult) {\n\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\tresolve(asyncResult.value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treject(asyncResult.error.message);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getEmbeddedAttachments(\n\tbodyContent: string\n):OutlookAttachment[] {\n\tlet bodyasElement = document.createElement('html');\n\tbodyasElement.innerHTML = bodyContent;\n\tlet embImgs = bodyasElement.getElementsByTagName(\"img\");\n\tlet attachmentsTemp: OutlookAttachment[] = [] as OutlookAttachment[];\n\tif (embImgs !== null) {\n\t\tfor (var i = 0; i < embImgs.length; i++) {\n\t\t\tlet itemId = embImgs[i].attributes.getNamedItem(\"data-custom\")?.value;\n\t\t\tif (itemId) {\n\t\t\t\tlet extension = embImgs[i].src.split(',')[0].replace(\"data:image/\", \"\").split(\";\")[0];\n\t\t\t\tlet prefix = i < 10 ? \"000\" : i < 100 ? \"00\" : i < 1000 ? \"0\" : \"\";\n\t\t\t\tlet name = prefix + i + \".\" + extension;\n\t\t\t\tlet content = embImgs[i].src.split(',')[1];\n\t\t\t\tlet sizestr = embImgs[i].attributes.getNamedItem(\"size\")?.value!;\n\t\t\t\tlet size = parseInt(sizestr !== 'undefined' ? sizestr : \"0\");\n\n\t\t\t\tattachmentsTemp.push({\n\t\t\t\t\tid: Office.context.mailbox.convertToRestId(itemId, Office.MailboxEnums.RestVersion.v2_0),\n\t\t\t\t\tjsId: itemId,\n\t\t\t\t\tname: name,\n\t\t\t\t\tattachmentType: 'Embedded',\n\t\t\t\t\tcontentBytes: content,\n\t\t\t\t\tcontentType: \"\",\n\t\t\t\t\tisInline: true,\n\t\t\t\t\tsize: size\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\treturn attachmentsTemp;\n}\n\nfunction getBodyAsync(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined,\n\tcoercionType: Office.CoercionType\n): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tmailboxItem?.body.getAsync(coercionType, { asyncContext: null }, (asyncResult) => {\n\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\tresolve(asyncResult.value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treject(asyncResult.error.message);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getAttachmentsAsync(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined\n): Promise<OutlookAttachment[]> {\n\treturn new Promise((resolve) => {\n\t\tmailboxItem?.getAttachmentsAsync({}, (asyncResult) => {\n\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\tlet attachments: OutlookAttachment[] = asyncResult.value.map((attachment) => (\n\t\t\t\t\t{\n\t\t\t\t\t\tid: Office.context.mailbox.convertToRestId(attachment.id, Office.MailboxEnums.RestVersion.v2_0),\n\t\t\t\t\t\tjsId: attachment.id,\n\t\t\t\t\t\tname: !attachment.name.includes(\".\") && attachment.attachmentType === Office.MailboxEnums.AttachmentType.Item ? `${attachment.name}.eml` : attachment.name,\n\t\t\t\t\t\tisInline: attachment.isInline,\n\t\t\t\t\t\tsize: attachment.size,\n\t\t\t\t\t\tattachmentType: attachment.attachmentType,\n\t\t\t\t\t\tcontentBytes: null,\n\t\t\t\t\t\tcontentType: \"\"\n\t\t\t\t\t}\n\t\t\t\t))\n\n\t\t\t\tresolve(attachments);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.error(asyncResult?.error?.message);\n\t\t\t\tresolve([] as OutlookAttachment[]);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getAttachmentContentAsync(\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined,\n\tattachment: OutlookAttachment\n): Promise<OutlookAttachment> {\n\treturn new Promise((resolve) => {\n\t\tmailboxItem?.getAttachmentContentAsync(attachment.jsId, {}, (asyncResult) => {\n\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\tlet b64 = true;\n\t\t\t\tlet paddingFound = false;\n\t\t\t\tfor (let c of asyncResult.value.content) {\n\t\t\t\t\tif (c === '=') {\n\t\t\t\t\t\tpaddingFound = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!((!paddingFound && (c === '+' || ('/' <= c && c <= '9') || ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z'))) || (c === '='))) {\n\t\t\t\t\t\tb64 = false;\n\t\t\t\t\t\tlogger.info(\"Found non-b64 character \" + c);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (b64) {\n\t\t\t\t\tattachment.contentBytes = asyncResult.value.content;\n\t\t\t\t} else {\n\t\t\t\t\tattachment.contentBytes = btoa(asyncResult.value.content);\n\t\t\t\t\tif (attachment.attachmentType === \"item\") {\n\t\t\t\t\t\tattachment.name += \".eml\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve(attachment);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.error(\"getAttachmentContentAsync error: \" + asyncResult.error.message);\n\t\t\t\tresolve(attachment);\n\t\t\t}\n\t\t})\n\t});\n}\n\nfunction saveItemAndGetOutlookTokenAsync(\n\tisOffice365: boolean,\n\tmailboxItem: (Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead) | undefined\n): Promise<IEmailSettings> {\n\treturn new Promise((resolve, reject) => {\n\t\tmailboxItem?.saveAsync(async (asyncResult) => {\n\t\t\tlet id = asyncResult.value;\n\t\t\tlet itemId = Office.context.mailbox.convertToRestId(id, Office.MailboxEnums.RestVersion.v2_0);\n\t\t\tlet emailSettings: IEmailSettings = {\n\t\t\t\titemId: itemId,\n\t\t\t\toutlookToken: \"\"\n\t\t\t}\n\n\t\t\tif (!isOffice365) {\n\t\t\t\tOffice.context.mailbox.getCallbackTokenAsync({ isRest: true }, (asyncResult) => {\n\t\t\t\t\tif (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n\t\t\t\t\t\temailSettings.outlookToken = asyncResult.value;\n\t\t\t\t\t\tresolve(emailSettings);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(asyncResult.error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresolve(emailSettings);\n\t\t\t}\n\n\t\t\t\n\t\t});\n\t});\n}\n\nfunction getOutlookTokenAsync(\n): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\ttry {\n\t\t\t//throw new MockSSOError(\"13012\");\n\t\t\tlet options: OfficeRuntime.AuthOptions = { allowSignInPrompt: true, allowConsentPrompt: true, forMSGraphAccess: true };\n\t\t\tlet ssoOutlookToken = await OfficeRuntime.auth.getAccessToken(options);\n\t\t\tresolve(ssoOutlookToken);\n\t\t} catch (e) {\n\t\t\treject(e);\n\t\t}\n\t});\n}\n\n//For SSO testing purposes only\n//function MockSSOError(code) {\n//\tthis.name = \"API Not Supported\";\n//\tthis.message = \"API is not supported in this platform.\";\n//\tthis.code = code;\n//}\n","/* global Office */  //Required for this to be found.  see: https://github.com/OfficeDev/office-js-docs-pr/issues/691\n\nimport * as React from 'react';\nimport OfficeDialog from '../OfficeDialog';\nimport { ApiResponseView, ActionOnMatch, DlpItemResultView, ContentScanningResultView, ClientKeywordDomainResultView, SignalRUIHubMethods } from '../Backend/BackendTypes'\nimport { AppProps, AppState, AppStateUI, GroupByAttachments, IChunksManager } from './AppTypes';\nimport { Modules } from '../../LogConfiguration';\nimport { safeSendLogging } from '../../lib/Logger';\nimport { SignalRHubType, StorageDatatype, storageUtils } from '../../lib/Utils';\nimport { appUtils } from './AppUtils';\nimport ForbiddenRecipientDialog from '../ForbiddenRecipientDialog';\nimport OutlookSpinner from '../OutlookSpinner';\nimport { getSignalRConnection } from '../../lib/AddIn';\n\nconst logger = safeSendLogging.getLogger(Modules.SafeSend_App);\n\nexport default class App extends React.Component<AppProps, AppState> {\n    sendEvent: any;\n    mailboxItem: Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead = {} as Office.Item & Office.ItemCompose & Office.ItemRead & Office.Message & Office.MessageCompose & Office.MessageRead & Office.Appointment & Office.AppointmentCompose & Office.AppointmentRead;\n    officeDialog: OfficeDialog;\n    chunksManager: IChunksManager = { chunkSize: 0, chunkProcessedCount: 0, dlpItemResults: [] };\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n\t\t\tdialogId: \"\",\n\t\t\tisOfficeInitialized: false,\n            apiResponseView: ({} as any) as ApiResponseView,\n            dlps: [],\n            contentScanningResults: [],\n            clientKeywordDomainResults: [],\n            contentScanningAction: ActionOnMatch.Inform,\n            countUnprotectedAttachments: 0,\n            unprotectedAttachmentMessage: \"\",\n            isDlpWaiting: false,\n            scanTimedOut: false,\n            dialogInstance: {} as Office.Dialog,\n            groupByAttachments: {\n                countTotalAttachmentsScanned: 0,\n                countTotalClientKeyword: 0,\n                countTotalClientKeywordMatches: 0,\n                countTotalContentScanning: 0,\n                countTotalContentScanningMatches: 0,\n                groupByClientKeywordAttachments: false,\n                groupByClientKeywordAttachmentsText: \"\",\n                groupByContentScanningAttachments: false,\n                groupByContentScanningAttachmentsText: \"\"\n            },\n            confirmationRequired: false\n        };\n        this.officeDialog = {} as OfficeDialog;\n        this.configureSignalR = this.configureSignalR.bind(this);\n        this.updateDialogUI = this.updateDialogUI.bind(this);\n    }\n\n    updateDialogUI(dlpItemResults: DlpItemResultView[], isDlpWaiting: boolean, scanTimedOut: boolean, confirmationRequired: boolean) {\n        logger.debug('Update dialog UI');\n        let groupByAttachments: GroupByAttachments = appUtils.getGroupByAttachments(this.state.apiResponseView.onSendProcessContex.settings, this.state.groupByAttachments, dlpItemResults);\n        var newAppState: AppStateUI = appUtils.getStateForUpdateUI(\n            this.state.apiResponseView.onSendProcessContex.settings,\n            this.state.clientKeywordDomainResults,\n            this.state.contentScanningResults,\n            this.state.contentScanningAction,\n            groupByAttachments.groupByClientKeywordAttachments,\n            groupByAttachments.groupByContentScanningAttachments,\n            dlpItemResults,\n            isDlpWaiting,\n            scanTimedOut,\n            this.state.countUnprotectedAttachments\n        );\n\n       if (!this.state.confirmationRequired && confirmationRequired) {\n          this.setState({ confirmationRequired: confirmationRequired });\n\t\t }\n\n        this.setState({\n            isDlpWaiting: newAppState.isDlpWaiting,\n            scanTimedOut: newAppState.scanTimedOut,\n            clientKeywordDomainResults: newAppState.clientKeywordDomainResults,\n            contentScanningResults: newAppState.contentScanningResults,\n            contentScanningAction: newAppState.contentScanningAction,\n            dlps: newAppState.dlps,\n            groupByAttachments: groupByAttachments,\n            countUnprotectedAttachments: newAppState.countUnprotectedAttachments,\n            unprotectedAttachmentMessage: newAppState.unprotectedAttachmentMessage\n        });\n\n        this.chunksManager.dlpItemResults = [];\n        this.chunksManager.chunkProcessedCount = 0;\n        this.officeDialog.setSendEnabled();\n    }\n\n    async configureSignalR(authToken: string) {\n\t\ttry {\n\t\t\tlet connection = await getSignalRConnection(authToken, SignalRHubType.UIHub);\n\t\t\tconnection.onclose(async error => {\n\t\t\t\tlogger.error(`${SignalRHubType.UIHub} error: ${JSON.stringify(error)}`);\n\t\t\t});\n\n\t\t\tconnection.on(SignalRUIHubMethods.ReceiveDlpItemResults, (dlpItemResult: DlpItemResultView, confirmationRequired: boolean) => {\n\t\t\t\tlogger.debug(SignalRUIHubMethods.ReceiveDlpItemResults);\n\t\t\t\tthis.chunksManager.dlpItemResults.push(dlpItemResult);\n\t\t\t\tthis.chunksManager.chunkProcessedCount++;\n\n\t\t\t\tif (this.state.confirmationRequired !== confirmationRequired) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\tconfirmationRequired: confirmationRequired\n\t\t\t\t\t});\n\n\t\t\t\t\tif (this.chunksManager.chunkProcessedCount === this.chunksManager.chunkSize) {\n\t\t\t\t\tthis.updateDialogUI(this.chunksManager.dlpItemResults, true, false, confirmationRequired);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconnection.on(SignalRUIHubMethods.ReceiveFinishingContenScanning, (_isCancellationRequested: boolean, confirmationRequired: boolean, scanTimedOut: boolean) => {\n\t\t\t\tlogger.debug(SignalRUIHubMethods.ReceiveFinishingContenScanning);\n\t\t\t\tif (!this.state.confirmationRequired) {\n\t\t\t\t\tthis.officeDialog.closeDialog({ send: true, encrypt: false, showEncryptPrompt: false });\n\t\t\t   } else {\n\t\t\t\t\tthis.updateDialogUI(this.chunksManager.dlpItemResults, false, scanTimedOut, confirmationRequired);\n\t\t\t   }\n\t\t\t});\n\n\t\t\tconnection.on(SignalRUIHubMethods.ReceiveAttachmentPasswordRequest, () => {\n\t\t\t\tlogger.debug(SignalRUIHubMethods.ReceiveAttachmentPasswordRequest);\n\t\t\t\tthis.officeDialog.attachmentPasswordRequest();\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tlogger.error(`${SignalRHubType.UIHub} error: ${JSON.stringify(error)}`);\n\t\t}\n    }\n\n\tcomponentDidMount() {\n\t\tOffice.onReady(async (info) => {\n\t\t\tif (info.host !== null) {\n\t\t\t\tlogger.debug(\"Load data from local storage\");\n\t\t\t\tlet dialogId = storageUtils.localGet(StorageDatatype.DialogId) as string;\n\t\t\t\tlet localStorageData = storageUtils.localGet(StorageDatatype.ApiResponse);\n\t\t\t\tlet apiResponseView = JSON.parse(localStorageData) as ApiResponseView\n\t\t\t\tstorageUtils.localRemove(StorageDatatype.ApiResponse);\n\n\t\t\t\tlet isDlpWaiting = apiResponseView.onSendProcessContex.isDlpLicenseValid &&\n\t\t\t\t\tapiResponseView.onSendProcessContex.scanStarted &&\n\t\t\t\t\t!apiResponseView.onSendProcessContex.scanCompleted;\n\n\t\t\t\tawait this.setState({\n\t\t\t\t\tdialogId: dialogId,\n\t\t\t\t\tisOfficeInitialized: true,\n\t\t\t\t\tisDlpWaiting: isDlpWaiting,\n\t\t\t\t\tapiResponseView: apiResponseView,\n\t\t\t\t\tconfirmationRequired: apiResponseView.onSendProcessContex.confirmationRequired\n\t\t\t\t});\n\n\t\t\t\tif (apiResponseView.onSendProcessContex?.forbiddenRecipients?.length === 0) {\n\t\t\t\t\tthis.updateDialogUI(apiResponseView.dlpScanResults, isDlpWaiting, apiResponseView.onSendProcessContex.scanTimedOut, apiResponseView.onSendProcessContex.confirmationRequired);\n\t\t\t\t\tif (isDlpWaiting) {\n\t\t\t\t\t\tlet estimatedDlpItemsCount = apiResponseView.unsafeAttachmentsCount - apiResponseView.dlpScanResults.length + 2;\n\t\t\t\t\t\tthis.chunksManager.chunkSize = Math.round(estimatedDlpItemsCount / 2);\n\t\t\t\t\t\tlet authToken: string = storageUtils.localGet(StorageDatatype.SafeSendToken) as string;\n\t\t\t\t\t\tawait this.configureSignalR(authToken);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n    }\n\n   render() {\n       if (!this.state.isOfficeInitialized) {\n\t\t   return (\n\t\t\t   <OutlookSpinner message=\"\" />\n           );\n       } else if (this.state.apiResponseView.onSendProcessContex?.forbiddenRecipients?.length > 0) {\n           return (<ForbiddenRecipientDialog dialogId={this.state.dialogId} apiResponseView={this.state.apiResponseView} />);\n       }\n\n       return (\n           <OfficeDialog onRef={ref => (this.officeDialog = ref)}\n               dialogId={this.state.dialogId}\n               apiResponseView={this.state.apiResponseView}\n               dlps={this.state.dlps}\n               isDlpWaiting={this.state.isDlpWaiting}\n               confirmationRequired={this.state.confirmationRequired}\n               scanTimedOut={this.state.scanTimedOut}\n               contentScanningAction={this.state.contentScanningAction}\n               contentScanningResults={this.state.contentScanningResults.length > 0 ? this.state.contentScanningResults.sort((a: ContentScanningResultView, b: ContentScanningResultView) => ((a.attachmentPath??'').localeCompare(b.attachmentPath??''))) : this.state.contentScanningResults}\n               clientKeywordDomainResults={this.state.clientKeywordDomainResults.length > 0 ? this.state.clientKeywordDomainResults.sort((a: ClientKeywordDomainResultView, b: ClientKeywordDomainResultView) => ((a.attachmentPath??'').localeCompare(b.attachmentPath??''))) : this.state.clientKeywordDomainResults}\n               groupByAttachments={this.state.groupByAttachments}\n               countUnprotectedAttachments={this.state.countUnprotectedAttachments}\n               unprotectedAttachmentMessage={this.state.unprotectedAttachmentMessage}\n            />\n        );\n   }\n}","import { Separator } from \"@fluentui/react\";\nimport * as React from \"react\";\n\nexport interface WarningMessageProps {\n    message: string;\n}\n\nexport default class WarningMessage extends React.Component<WarningMessageProps> {\n    render() {\n        const { message } = this.props;\n\n        return (\n            <>\n                <Separator style={{ backgroundColor: 'd83b01' }} alignContent=\"start\" className=\"ms-fontSize-s ms-fontWeight-light \">{message}</Separator>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport WarningMessage from './WarningMessage';\nimport { browserName, engineName, engineVersion, fullBrowserVersion, osName, osVersion } from 'react-device-detect';\nimport { restClient } from '../RestClient';\nimport OutlookSpinner from './OutlookSpinner';\nimport { AppInfo } from './Backend/BackendTypes';\nimport { Text } from '@fluentui/react/lib/Text';\nimport { Separator } from '@fluentui/react';\n\nexport interface LandingState {\n\tisWaiting: boolean;\n\tappInfo: AppInfo;\n}\n\nexport default class LandingPage extends React.Component<{}, LandingState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisWaiting: true,\n\t\t\tappInfo: {} as AppInfo\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tlet responseAppInfo = await restClient.getAppInfo();\n\t\tawait this.setState({\n\t\t\tisWaiting: false,\n\t\t\tappInfo: responseAppInfo.content != null ? responseAppInfo.content : {} as AppInfo\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// fix Warning: Can't perform a React state update on an unmounted component\n\t\tthis.setState = () => {\n\t\t\treturn;\n\t\t};\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tisWaiting,\n            appInfo,\n        } = this.state;\n\n        return (\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\tisWaiting &&\n\t\t\t\t\t<OutlookSpinner message=\"Loading...\" />\n\t\t\t\t}\n                {\n                    !isWaiting &&\n                    <section className=\"ms-welcome__progress ms-u-fadeIn500\">\n                        <WarningMessage message=\"Welcome SafeSend\" />\n\t\t\t\t\t\t<header className=\"ms-welcome__header ms-bgColor-neutralLighter ms-u-fadeIn500\">\n\t\t\t\t\t\t\t<Text variant={'xxLarge'} block>\n\t\t\t\t\t\t\t\t<span id=\"app\">{appInfo.product}</span> v<span id=\"version\">{appInfo.version}</span>\n\t\t\t\t\t\t\t</Text>\n                        </header>\n\t\t\t\t\t\t<main className=\"ms-welcome__main\">\t\t\t\t\t\n\t\t\t\t\t\t\t<Text variant={'xLarge'} block>{appInfo.description}</Text>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<Text variant={'smallPlus'} block>{appInfo.copyright}</Text>\n\t\t\t\t\t\t\t<Separator styles={{ root: { width: \"100%\" } }} />\n\t\t\t\t\t\t\t<Text variant={'small'} block>{osName} {osVersion} - {browserName} {fullBrowserVersion} - {engineName} {engineVersion}</Text>\n                        </main>\n                    </section>\n                }\n            </>\n        );\n    }\n}\n","import * as React from 'react';\nimport * as Msal from \"msal\";\nimport OutlookSpinner from '../OutlookSpinner';\nimport { LoginResult, LoginResultStatus } from './LoginTypes';\nimport { StorageDatatype, storageUtils } from '../../lib/Utils';\nimport { restClient } from '../../RestClient';\n\nexport default class LoginPage extends React.Component {\n\tauthCallback(error, response) {\n\t\tlet loginresult: LoginResult = {\n\t\t\tstatus: LoginResultStatus.Failed,\n\t\t\taccessToken: \"\",\n\t\t\terror: null\n\t\t}\n\n\t\tif (error) {\n\t\t\tloginresult.error = error;\n\t\t\tOffice.context.ui.messageParent(JSON.stringify(loginresult));\n        } else {\n\t\t\tif (response.tokenType === \"id_token\") {\n\t\t\t\tstorageUtils.localSet(StorageDatatype.LoggedIn, \"yes\");\n            } else {\n\t\t\t\tloginresult.status = LoginResultStatus.Succeeded;\n\t\t\t\tloginresult.accessToken = response.accessToken;\n\t\t\t\tOffice.context.ui.messageParent(JSON.stringify(loginresult));\n            }\n        }\n    }\n\n\tcomponentDidMount() {\n\t\tOffice.onReady(async (info) => {\n\t\t\tif (info.host !== null) {\n\t\t\t\tlet safeSendToken = storageUtils.localGet(StorageDatatype.SafeSendToken);\n\t\t\t\tlet appSettings = await restClient.getAppSettings(safeSendToken);\n\n\t\t\t\tlet msalConfig: Msal.Configuration = {\n\t\t\t\t\tauth: {\n\t\t\t\t\t\tclientId: appSettings.content != null ? appSettings.content : \"\",\n\t\t\t\t\t\tauthority: \"https://login.microsoftonline.com/common\",\n\t\t\t\t\t\tredirectUri: `${window.location.origin}/login`,\n\t\t\t\t\t\tnavigateToLoginRequestUrl: false\n\t\t\t\t\t},\n\t\t\t\t\tcache: {\n\t\t\t\t\t\tcacheLocation: \"localStorage\", // Needed to avoid \"User login is required\" error.\n\t\t\t\t\t\tstoreAuthStateInCookie: true  // Recommended to avoid certain IE/Edge issues.\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet userAgentApp = new Msal.UserAgentApplication(msalConfig);\n\t\t\t\tlet requestObj = {\n\t\t\t\t\tscopes: [\"https://graph.microsoft.com/Files.ReadWrite\", \"https://graph.microsoft.com/Mail.ReadWrite.Shared\", \"https://graph.microsoft.com/Calendars.ReadWrite.Shared\"]\n\t\t\t\t};\n\t\t\t\tuserAgentApp.handleRedirectCallback(this.authCallback);\n\n\t\t\t\t// The very first time the add-in runs on a developer's computer, msal.js hasn't yet\n\t\t\t\t// stored login data in localStorage. So a direct call of acquireTokenRedirect \n\t\t\t\t// causes the error \"User login is required\". Once the user is logged in successfully\n\t\t\t\t// the first time, msal data in localStorage will prevent this error from ever hap-\n\t\t\t\t// pening again; but the error must be blocked here, so that the user can login \n\t\t\t\t// successfully the first time. To do that, call loginRedirect first instead of \n\t\t\t\t// acquireTokenRedirect.\n\t\t\t\tif (storageUtils.localGet(StorageDatatype.LoggedIn) === \"yes\") {\n\t\t\t\t\tuserAgentApp.acquireTokenRedirect(requestObj);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// This will login the user and then the (response.tokenType === \"id_token\")\n\t\t\t\t\t// path in authCallback below will run, which sets localStorage.loggedIn to \"yes\"\n\t\t\t\t\t// and then the dialog is redirected back to this script, so the \n\t\t\t\t\t// acquireTokenRedirect above runs.\n\t\t\t\t\tuserAgentApp.loginRedirect(requestObj);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n    render() {\n\t\treturn (\n\t\t\t<OutlookSpinner message=\"Authenticating...\" />\n        );\n    }\n}","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport '@fluentui/react/dist/css/fabric.min.css';\nimport App from './components/App/App';\nimport { initializeIcons } from '@fluentui/react/lib/Icons';\nimport { initializeFileTypeIcons } from '@fluentui/react-file-type-icons';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport LandingPage from './components/LandingPage';\nimport { processOnSendEvent } from './lib/AddIn';\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport LoginPage from './components/Login/LoginPage';\n\ninitializeIcons();\ninitializeFileTypeIcons();\n\ndeclare global {\n\tinterface Window { onSendEvent: any; }\n}\n\nwindow.onSendEvent = function onSendEvent(sendEvent) {\n\tprocessOnSendEvent(sendEvent);\n}\n\nconst routing = (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={LandingPage} />\n\t\t\t<Route exact path=\"/dialog\" component={App} />\n\t\t\t<Route exact path=\"/login\" component={LoginPage} />\n\t\t\t{/*<Route exact path=\"/lost\" component={LostConnectionPage} />*/}\n\t\t</Switch>\n\t</Router>\n)\n\nReactDOM.render(routing, document.getElementById('container'));"],"sourceRoot":""}